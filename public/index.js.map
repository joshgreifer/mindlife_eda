{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Contracts.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/PropertyId.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Exports.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/KeywordRecognitionModel.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/LanguageUnderstandingModel.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SpeechTranslationConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/IntentRecognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/TranslationRecognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/NoMatchReason.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/NoMatchDetails.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/CancellationDetailsBase.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/CancellationDetails.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/ConnectionEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/ServiceEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/ConnectionMessage.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/ConnectionMessageEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Connection.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/PhraseListGrammar.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/DialogServiceConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/BotFrameworkConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/CustomCommandsConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/DialogConnectorFactory.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/DialogServiceConnector.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/ServicePropertyChannel.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/BaseAudioPlayer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/VoiceProfile.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/VoiceProfileEnrollmentResult.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/VoiceProfileResult.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SpeakerRecognitionResult.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/VoiceProfileClient.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SpeakerIdentificationModel.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SpeakerVerificationModel.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SpeakerRecognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/AutoDetectSourceLanguageConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/AutoDetectSourceLanguageResult.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SourceLanguageConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ConversationConnectionConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ConversationTranslatorInterfaces.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ConversationUtils.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ConversationManager.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ConversationConnectionMessage.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ConversationWebsocketMessageFormatter.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ConversationConnectionFactory.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/ConversationTranslationCanceledEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/ConversationExpirationEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/ConversationTranslationResult.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ConversationRequestSession.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ConversationTranslatorEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ServiceMessages/CommandResponsePayload.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ServiceMessages/ParticipantResponsePayload.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ServiceMessages/TranslationResponsePayload.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ConversationServiceAdapter.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/ConversationTranslatorRecognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/ParticipantChangedReason.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/ConversationParticipantsChangedEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/ConversationTranslationEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/IParticipant.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/Conversation.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/ConversationTranslator.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/ConversationCommon.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/Transcription/TranscriberRecognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Transcription/ConversationTranscriber.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/Error.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/PlatformEvent.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/ResultReason.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/QueryParameterNames.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/Enums.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SpeechSynthesisOutputFormat.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/SpeechConnectionMessage.Internal.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/ConnectionMessage.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/RecognizerConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/node_modules/uuid/dist/esm-browser/rng.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/node_modules/uuid/dist/esm-browser/regex.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/node_modules/uuid/dist/esm-browser/stringify.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/node_modules/uuid/dist/esm-browser/validate.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/node_modules/uuid/dist/esm-browser/v4.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/Guid.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/OutputFormat.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/OCSPEvents.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/PropertyCollection.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/AudioOutputStream.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/CancellationErrorCodes.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/AudioStreamFormat.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/Promise.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ConnectionFactoryBase.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/AudioOutputFormat.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SpeechRecognitionResult.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/EnumTranslation.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/AudioSourceEvents.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/RecognitionEvents.js","webpack:///./node_modules/eventemitter3/index.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/CancellationReason.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/Timeout.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceRecognizerBase.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/IAuthentication.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SpeechRecognitionEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/TranslationRecognitionResult.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/IntentRecognitionEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/IntentRecognitionResult.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/WebsocketMessageFormatter.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/AudioInputStream.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/SynthesisAdapterBase.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/CancellationEventArgsBase.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SpeechSynthesisEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SpeechSynthesisResult.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/RecognitionEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/EventSource.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/Events.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/SpeechHypothesis.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/SimpleSpeechPhrase.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/TranslationStatus.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/ProxyInfo.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/ConnectionOpenResponse.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/WebsocketMessageAdapter.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/WebsocketConnection.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/AudioFileWriter.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SessionEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/TranslationRecognitionEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/TranslationSynthesisEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/TranslationSynthesisResult.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/CognitiveSubscriptionKeyAuthentication.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/CognitiveTokenAuthentication.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/DetailedSpeechPhrase.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/TranslationPhrase.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/TranslationRecognitionCanceledEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/RestConfigBase.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/RiffPcmEncoder.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/PCMRecorder.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/MicAudioSource.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/FileAudioSource.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/AudioConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/List.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/Queue.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SpeechConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/SynthesisContext.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/AgentConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/SynthesisAudioMetadata.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SpeechSynthesisWordBoundaryEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/PushAudioOutputStreamCallback.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/RecognitionResult.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SpeechRecognitionCanceledEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/ProfanityOption.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Recognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/SpeechConnectionFactory.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/SpeechServiceRecognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/IntentResponse.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/IntentRecognitionCanceledEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/TranslationHypothesis.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/TranslationSynthesisEnd.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Translations.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/ConversationTranscriptionCanceledEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/SpeechSynthesisConnectionFactory.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/SynthesizerConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/SynthesisEvents.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/SynthesisTurn.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/BackgroundError.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/PullAudioInputStreamCallback.js","webpack:///./node_modules/buffer/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/Audio/SpeakerAudioDestination.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/DynamicGrammarBuilder.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/SpeechContext.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/SpeechDetected.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SpeechRecognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/IntentConnectionFactory.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/AddedLmIntent.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/IntentServiceRecognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/VoiceProfileType.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/TranslationConnectionFactory.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/TranslationServiceRecognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/ActivityReceivedEventArgs.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/SpeakerRecognitionConfig.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/TranscriberConnectionFactory.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/TranscriptionServiceRecognizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/sdk/SpeechSynthesizer.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceMessages/ActivityResponsePayload.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/DialogServiceTurnState.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/DialogServiceTurnStateManager.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/DialogServiceAdapter.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/microsoft.cognitiveservices.speech.sdk.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/ConsoleLoggingListener.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/ServiceTelemetryListener.Internal.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/RequestSession.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/RestMessageAdapter.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.speech/SpeakerIdMessageAdapter.js","webpack:///./node_modules/ndarray/ndarray.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/CertChecks.js","webpack:///./node_modules/url/url.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/Stream.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/RawWebsocketMessage.js","webpack:///./node_modules/iota-array/iota.js","webpack:///./node_modules/is-buffer/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/url/util.js","webpack:///./node_modules/querystring-es3/index.js","webpack:///./node_modules/querystring-es3/decode.js","webpack:///./node_modules/querystring-es3/encode.js","webpack:///./src/custom-elements/CustomElement.js","webpack:///./src/GDIPlus.js","webpack:///./src/Clut.js","webpack:///./src/custom-elements/ConsoleElement.js","webpack:///./src/Scope.js","webpack:///./src/custom-elements/FaceDetectElement.js","webpack:///./src/custom-elements/ScopeElement.js","webpack:///./src/DataConnection.js","webpack:///./src/WebSocketDataConnection.js","webpack:///./src/custom-elements/WebSocketDataConnectionElement.js","webpack:///./src/SpeechService.js","webpack:///./src/SigProc.js","webpack:///./src/BufferUtils.js","webpack:///./src/custom-elements/SessionManagerElement.js","webpack:///./src/Api.js","webpack:///./src/HidDeviceStatus.js","webpack:///./src/custom-elements/ScopeMarkerEditor.js","webpack:///./src/index.ts","webpack:///./src/ArrayPlus.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/ChunkedArrayBufferStream.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/ConnectionEvents.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common/IConnection.js","webpack:///./node_modules/microsoft-cognitiveservices-speech-sdk/distrib/es2015/src/common.browser/ReplayableAudioNode.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Contracts","param","Error","throwIfNullOrUndefined","trim","length","isDisposed","array","item","throwIfNullOrWhitespace","undefined","PropertyId","OutputFormatPropertyName","CancellationErrorCodePropertyName","ServicePropertiesPropertyName","ForceDictationPropertyName","AutoDetectSourceLanguagesOpenRangeOptionName","this","privDisposed","fileName","throwIfFileDoesNotExist","file","throwIfNull","uri","hostname","langModelImp","LanguageUnderstandingModelImpl","firstDot","host","indexOf","region","substr","lastSegment","pathname","lastIndexOf","appId","subscriptionKey","searchParams","SpeechConfig","super","ret","properties","setProperty","SpeechServiceConnection_Key","SpeechServiceConnection_Region","authorizationToken","SpeechServiceAuthorization_Token","hostName","speechImpl","SpeechServiceConnection_Host","protocol","port","endpoint","SpeechServiceConnection_Endpoint","href","privSpeechProperties","PropertyCollection","outputFormat","OutputFormat","Simple","SpeechServiceConnection_RecoLanguage","getProperty","SpeechServiceConnection_EndpointId","languages","targetLanguages","push","SpeechServiceConnection_TranslationToLanguages","join","split","SpeechServiceConnection_TranslationVoice","proxyHostName","proxyPort","proxyUserName","proxyPassword","SpeechServiceConnection_ProxyHostName","SpeechServiceConnection_ProxyPort","SpeechServiceConnection_ProxyUserName","SpeechServiceConnection_ProxyPassword","def","channel","currentProperties","JSON","parse","stringify","profanity","SpeechServiceResponse_ProfanityOption","ProfanityOption","SpeechServiceConnection_EnableAudioLogging","SpeechServiceResponse_RequestWordLevelTimestamps","SpeechServiceConnection_SynthLanguage","language","SpeechServiceConnection_SynthVoice","voice","SpeechSynthesisOutputFormat","SpeechServiceConnection_SynthOutputFormat","format","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Recognizer","speechConfig","audioConfig","configImpl","IntentConnectionFactory","privAddedIntents","privAddedLmIntents","privDisposedIntentRecognizer","privProperties","throwIfDisposed","cb","err","keys","privUmbrellaIntent","context","buildSpeechContext","privReco","speechContext","setSection","Intent","dynamicGrammar","addReferenceGrammar","ReferenceGrammars","setIntents","recognizeOnceAsyncImpl","Interactive","startContinuousRecognitionAsyncImpl","Conversation","stopContinuousRecognitionAsyncImpl","model","simplePhrase","intentId","intentName","modelImpl","AddedLmIntent","errorCb","dispose","RecognizerConfig","authentication","connectionFactory","recognizerConfig","audioImpl","IntentServiceRecognizer","disposing","_super","refGrammers","addedLmIntent","grammer","id","provider","TranslationConnectionFactory","privDisposedTranslationRecognizer","clone","implRecognizerStop","TranslationServiceRecognizer","NoMatchReason","reason","privReason","simpleSpeech","SimpleSpeechPhrase","fromJSON","json","NotRecognized","RecognitionStatus","BabbleTimeout","InitialBabbleTimeout","InitialSilenceTimeout","CancellationDetailsBase","errorDetails","errorCode","privErrorDetails","privErrorCode","CancellationReason","NoError","RecognitionResult","EnumTranslation","implTranslateCancelResult","SessionEventArgs","sessionId","privJsonResult","privEventName","message","privConnectionMessage","headers","Speech_SessionId","forEach","header","index","find","toLowerCase","messageType","Text","Binary","textBody","binaryBody","ConnectionMessageEventArgs","toString","recognizer","recoBase","internalData","privInternalData","setupEvents","synthesizer","synthBase","connect","SynthesisAdapterBase","disconnect","path","propertyName","propertyValue","ServiceRecognizerBase","synthesisContext","payload","success","error","sendNetworkMessage","privEventListener","connectionEvents","attach","connectionEvent","connected","connectionId","disconnected","messageSent","messageReceived","privServiceEventListener","serviceEvents","receivedServiceMessage","jsonString","PhraseListGrammar","recogBase","privGrammerBuilder","phrase","addPhrase","phrases","clearPhrases","DialogServiceConfig","privSpeechConfig","speechRecognitionLanguage","setServiceProperty","subscription","botId","botFrameworkConfig","Conversation_DialogType","Conversation_ApplicationId","applicationId","customCommandsConfig","botFramework","authHeader","resourcePath","version","customCommands","ConnectionFactoryBase","arguments","config","authInfo","parameters","dialogType","queryParams","QueryParameterNames","LanguageParamName","FormatParamName","getDialogSpecificValues","token","headerName","hostSuffix","startsWith","setCommonUrlParams","WebsocketConnection","WebsocketMessageFormatter","ProxyInfo","fromRecognizerConfig","dialogConfig","dialogServiceConfigImpl","isTurnComplete","privIsDisposed","agentConfig","buildAgentConfig","set","Conversation_Speech_Activity_Template","speechActivityTemplate","retPromise","recognize","promise","callbackHolder","catch","finally","activity","errCb","sendMessage","audioSource","DialogServiceAdapter","botInfo","commType","commandsCulture","conversationId","Conversation_Conversation_Id","fromId","Conversation_From_Id","ttsAudioFormat","ServicePropertyChannel","audioFormat","audioContext","gainNode","autoUpdateBufferTimer","AudioStreamFormat","getDefaultInputFormat","init","newAudioData","window","webkitAudioContext","playAudio","ensureInitializedContext","audioData","formatAudioData","newSamplesData","Float32Array","samples","clearInterval","close","createAudioContext","timerPeriod","setInterval","updateAudioBuffer","getAudioContext","createGain","gain","destination","startTime","currentTime","bitsPerSample","formatArrayBuffer","Int8Array","Int16Array","Int32Array","maxValue","float32Data","channelCount","channels","bufferSource","createBufferSource","frameCount","audioBuffer","createBuffer","samplesPerSec","channelOffset","getChannelData","buffer","start","duration","source","decodeAudioData","newBuffer","VoiceProfile","profileId","profileType","privId","privProfileType","statusText","ResultReason","Canceled","privDetails","enrollmentStatus","EnrollingVoiceProfile","ServiceError","enrollmentsCount","enrollmentsLength","SpeakerRecognitionResultType","speechConfigImpl","implClientSetup","lang","response","privAdapter","createProfile","profile","createEnrollment","ok","EnrolledVoiceProfile","data","deleteProfile","getResult","DeletedVoiceProfile","resetProfile","ResetVoiceProfile","osPlatform","osName","osVersion","navigator","platform","userAgent","appVersion","SpeakerRecognitionConfig","SpeakerIdMessageAdapter","successReason","profiles","privVoiceProfiles","VoiceProfileType","TextIndependentIdentification","map","resultType","resultReason","RecognizedSpeaker","Identify","privProfileId","identifiedProfile","privScore","score","recognitionResult","NoMatch","SpeechServiceResponse_JsonResult","privVoiceProfile","privAudioConfigImpl","implSRSetup","responsePromise","identifySpeaker","verifySpeaker","Verify","voiceProfile","SpeechServiceConnection_AutoDetectSourceLanguages","throwIfArrayEmptyOrWhitespace","configs","autoConfig","langs","endpointId","customProperty","languageDetectionConfidence","privLanguage","privLanguageDetectionConfidence","privEndpointId","RestConfigBase","privHost","privApiVersion","privClientAppId","privDefaultLanguageCode","privRestPath","privWebSocketPath","privSpeechHost","privSpeechPath","privTranscriptionEventKeys","InternalParticipants","participants","meId","exists","getParticipantIndex","splice","getParticipant","findIndex","filter","isHost","ConversationTranslatorMessageTypes","ConversationTranslatorCommandTypes","withQuery","url","params","queryString","k","encodeURIComponent","errorResponse","xhr","getAllResponseHeaders","status","request","method","body","options","callback","defaultRequestOptions","requestOptions","ignoreCache","timeout","XMLHttpRequest","open","setRequestHeader","onload","evt","responseText","parseXHRResult","onerror","ontimeout","send","privRequestParams","configParams","privErrors","restErrors","apiVersion","restPath","args","conversationCode","languageCode","defaultLanguageCode","nickname","ConversationTranslator_Name","endpointHost","ConversationTranslator_Host","correlationId","ConversationTranslator_CorrelationId","subscriptionRegion","authToken","clientAppId","roomId","authInvalidSubscriptionRegion","authorization","authInvalidSubscriptionKey","requestId","headerKey","headerValue","arr","headerMap","line","parts","shift","extractHeaderValue","errMessageRaw","errorMessage","invalidCreateJoinConversationResponse","replace","code","conversation","typedError","sessionToken","invalidArgs","ConnectionMessage","type","privConversationMessageType","toConnectionMessage","deferral","incomingMessage","textContent","binaryContent","fromConnectionMessage","RawWebsocketMessage","webSocketPath","ConversationTranslator_Token","CancellationEventArgsBase","expirationTime","privExpirationTime","TranslationRecognitionResult","participantId","translations","originalLanguage","resultId","text","offset","privOrigLang","privDetachables","Array","onPreConnectionStart","authFetchEventId","privSessionId","onAuthCompleted","isError","onComplete","onConnectionEstablishCompleted","statusCode","onServiceTurnEndResponse","continuousRecognition","privRequestId","privRequestCompletionDeferral","detachable","detach","isMuted","privIsMuted","isLocked","privIsLocked","participant","privParticipant","privKey","privValue","privParticipantId","translateTo","profanityFilter","roomProfanityFilter","isRoomLocked","isMuteAll","privRoomId","privSessionToken","privTranslateTo","privProfanityFilter","privRoomProfanityFilter","privIsRoomLocked","privParticipants","privIsMuteAll","ConversationReceivedTranslationEventArgs","command","privPayload","privCommand","CommandResponsePayload","privCommandResponse","roomid","ParticipantsListPayloadResponse","privParticipantsPayloadResponse","roomLocked","muteAll","ParticipantPayloadResponse","privParticipantPayloadResponse","locale","usetts","ismuted","ishost","avatar","SpeechResponsePayload","privSpeechResponse","recognition","timestamp","TextResponsePayload","privTextResponse","originalText","conversationServiceConnector","privLastPartialUtteranceId","noOp","privConversationServiceConnector","privConversationAuthentication","receiveMessageOverride","receiveConversationMessageOverride","recognizeOverride","postConnectImplOverride","conversationConnectImpl","configConnectionOverride","configConnection","disconnectOverride","privDisconnect","privConversationRequestSession","privConversationConnectionFactory","privConversationIsDisposed","privConnectionConfigPromise","connection","fetchConnection","terminateMessageLoop","cancelRecognition","connectionMessage","successCallback","errorCallBack","cancellationReason","cancelEvent","canceled","_a","privConnectionLoop","startMessageLoop","communicationCustodian","read","sendFinal","conversationMessageType","commandPayload","participantsPayload","participantsResult","displayName","isUsingTts","preferredLanguage","participantsListReceived","participantUpdateCommandReceived","muteAllCommandReceived","conversationExpiration","lockRoomCommandReceived","joinParticipantPayload","joiningParticipant","participantJoinCommandReceived","leavingParticipant","participantLeaveCommandReceived","speechPayload","speechResult","getTranslations","isFinal","translationReceived","textPayload","textResult","messageRetrievalPromise","privRequestSession","RuntimeError","state","Disconnected","privConnectionId","connectImpl","serviceResultTranslations","Translations","translation","ParticipantChangedReason","serviceConfigImpl","privConnection","fromRecognizer","privSpeechRecognitionLanguage","conversationTranslatorToken","connectAsync","Events","instance","onEvent","_b","closeConnection","msg","PromiseToEmptyCallback","sendMessageAsync","RecognitionEventArgs","privResult","User","userId","privUserId","privAvatar","privDisplayName","privIsHost","privIsUsingTts","privPreferredLanguage","privVoice","arg2","arg3","arg4","conversationImpl","createConversationAsync","privIsConnected","privConversationId","onConnected","privConversationTranslator","sessionStarted","onDisconnected","sessionStopped","onCanceled","onParticipantUpdateCommandReceived","updatedParticipant","useTts","translateToLanguages","addOrUpdateParticipant","participantsChanged","Updated","toParticipant","onLockRoomCommandReceived","onMuteAllCommandReceived","toParticipants","onParticipantJoinCommandReceived","newParticipant","JoinedConversation","onParticipantLeaveCommandReceived","ejectedParticipant","deleteParticipant","LeftConversation","onTranslationReceived","_c","_d","_e","_f","transcribed","transcribing","textMessageReceived","onParticipantsListReceived","privRoom","me","privIsReady","changeNicknameAsync","onConversationExpiration","privManager","addTargetLanguage","setProfanity","Masked","hostNickname","privConfig","privTextMessageMaxLength","privConversationRecognizer","privToken","handleError","permissionDeniedStart","createOrJoin","room","permissionDeniedConnect","handleCallback","fromConfig","addParticipantImplAsync","cognitiveSpeechAuthToken","deleteConversationImplAsync","leave","endConversationImplAsync","permissionDeniedSend","canSendAsHost","permissionDeniedConversation","sendRequest","getLockCommand","getMuteAllCommand","canSend","permissionDeniedParticipant","invalidParticipantRequest","getMuteCommand","privTranscriberRecognizer","removeParticipantImplAsync","getEjectCommand","getMessageCommand","getChangeNicknameCommand","convId","part","props","transcriptionEventKeys","val","conversationProperties","conversationInfo","pushConversationEvent","includeHost","SpeechState","privAudioConfig","privIsSpeaking","privSpeechState","Inactive","privPlaceholderKey","privPlaceholderRegion","onSpeechConnected","Connected","onSpeechRecognizing","onSpeechSessionStarted","onSpeechSessionStopped","privConversation","param1","param2","param3","privSpeechTranslationConfig","fromSubscription","speechEndpointHost","conversationTranslator","joinConversationAsync","startConversationAsync","cancelSpeech","sendTextMessageAsync","canSpeak","privTranslationRecognizer","connectTranslatorRecognizer","startContinuousRecognition","stopContinuousRecognitionAsync","privTranslationRecognizerConnection","AudioConfig","fromDefaultMicrophoneInput","speechHost","cognitiveSpeechRegion","speechPath","onSpeechDisconnected","recognized","onSpeechRecognized","recognizing","onSpeechCanceled","startContinuousRecognitionAsync","fireCancelEvent","_g","isConnected","Connecting","isMutedByHost","speechTranslationConfig","speechTranslationConfigImpl","TranscriberConnectionFactory","privDisposedRecognizer","reco","sendSpeechEventAsync","transcriber","TranscriptionServiceRecognizer","privRecognizer","connectCallbacks","connectTranscriberRecognizer","disconnectCallbacks","ArgumentNullError","argumentName","InvalidOperationError","ObjectDisposedError","objectName","EventType","PlatformEvent","eventName","eventType","privName","privEventId","privEventTime","Date","toISOString","privEventType","privMetadata","SynthesisStatus","SpeechConnectionMessage","contentType","streamId","additionalHeaders","privPath","privContentType","privStreamId","privAdditionalHeaders","requestTimestamp","MessageType","privBody","ArrayBuffer","privMessageType","privHeaders","privSize","byteLength","RecognitionMode","SpeechResultFormat","connectivity","speechServiceConfig","privRecognitionMode","privSpeechServiceConfig","SpeechServiceConfig","Context","privParameters","privRecognitionActivityTimeout","Recognition","serialize","replacement","charAt","substring","os","system","System","build","OS","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","rng","uuid","test","byteToHex","TypeError","buf","rnds","random","createGuid","createNoDashGuid","RegExp","toUpperCase","OCSPEvent","signature","privSignature","OCSPMemoryCacheHitEvent","Debug","OCSPCacheMissEvent","OCSPDiskCacheHitEvent","OCSPCacheUpdateNeededEvent","OCSPMemoryCacheStoreEvent","OCSPDiskCacheStoreEvent","OCSPCacheUpdatehCompleteEvent","OCSPStapleReceivedEvent","OCSPCacheEntryExpiredEvent","serialNumber","expireTime","privExpireTime","OCSPCacheEntryNeedsRefreshEvent","privStartTime","OCSPCacheHitEvent","privExpireTimeString","toLocaleDateString","privStartTimeString","toLocaleTimeString","OCSPVerificationFailedEvent","privError","OCSPCacheFetchErrorEvent","OCSPResponseRetrievedEvent","OCSPCacheUpdateErrorEvent","privKeys","privValues","keyToUse","clonedMap","destinationCollection","AudioOutputStream","PullAudioOutputStream","PullAudioOutputStreamImpl","privStream","privFormat","getDefaultOutputFormat","isClosed","dataBuffer","intView","totalBytes","privLastChunkView","slice","isReadEnded","chunk","isEnd","readEnded","tmpBuffer","writeStreamChunk","timeReceived","now","PushAudioOutputStream","PushAudioOutputStreamImpl","privCallback","write","CancellationErrorCode","AudioStreamFormatImpl","samplesPerSecond","setString","view","str","setUint8","charCodeAt","formatTag","avgBytesPerSec","blockAlign","Math","max","privHeader","DataView","setUint32","setUint16","sampleRate","AudioContext","mediaDevices","getSupportedConstraints","PromiseState","Deferred","privResolve","privReject","privPromise","marshalPromiseToCallbacks","setUrlParameter","EnableAudioLogging","EnableWordLevelTimestamps","Profanify","SpeechServiceConnection_InitialSilenceTimeoutMs","InitialSilenceTimeoutMs","SpeechServiceConnection_EndSilenceTimeoutMs","EndSilenceTimeoutMs","SpeechServiceResponse_StablePartialResultThreshold","StableIntermediateThreshold","serviceProperties","num","propId","parameterName","search","toLocaleLowerCase","AudioFormatTag","AudioOutputFormatImpl","audioFormatString","requestAudioFormatString","hasHeader","priAudioFormatString","priRequestAudioFormatString","priHasHeader","speechSynthesisOutputFormat","fromSpeechSynthesisOutputFormatString","SpeechSynthesisOutputFormatToString","speechSynthesisOutputFormatString","PCM","Siren","MP3","SILKSkype","MuLaw","Opus","audioLength","Raw8Khz8BitMonoMULaw","Riff16Khz16KbpsMonoSiren","Audio16Khz16KbpsMonoSiren","Audio16Khz32KBitRateMonoMp3","Audio16Khz128KBitRateMonoMp3","Audio16Khz64KBitRateMonoMp3","Audio24Khz48KBitRateMonoMp3","Audio24Khz96KBitRateMonoMp3","Audio24Khz160KBitRateMonoMp3","Raw16Khz16BitMonoTrueSilk","Riff16Khz16BitMonoPcm","Riff8Khz16BitMonoPcm","Riff24Khz16BitMonoPcm","Riff8Khz8BitMonoMULaw","Raw16Khz16BitMonoPcm","Raw24Khz16BitMonoPcm","Raw8Khz16BitMonoPcm","Ogg16Khz16BitMonoOpus","Ogg24Khz16BitMonoOpus","SpeechRecognitionResult","speakerId","privSpeakerId","recognitionStatus","Success","RecognizedSpeech","EndOfDictation","EndOfStream","TooManyRequests","AudioSourceEvent","audioSourceId","Info","privAudioSourceId","AudioSourceInitializingEvent","AudioSourceReadyEvent","AudioSourceOffEvent","AudioSourceErrorEvent","AudioStreamNodeEvent","audioNodeId","privAudioNodeId","AudioStreamNodeAttachingEvent","AudioStreamNodeAttachedEvent","AudioStreamNodeDetachedEvent","AudioStreamNodeErrorEvent","RecognitionCompletionStatus","SpeechRecognitionEvent","RecognitionTriggeredEvent","ListeningStartedEvent","ConnectingToServiceEvent","authFetchEventid","privAuthFetchEventid","RecognitionStartedEvent","privAuthFetchEventId","has","prefix","EE","fn","once","addListener","emitter","event","listener","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","events","names","getOwnPropertySymbols","concat","listeners","handlers","ee","listenerCount","emit","a1","a2","a3","a4","a5","len","removeListener","j","on","removeAllListeners","off","prefixed","Timeout","workerTimers","clearTimeout","timerId","timers","setTimeout","func","delay","load","scheduledTimeoutFunctions","Map","unhandledRequests","worker","Worker","addEventListener","isCallNotification","idOrFunc","unhandledTimerId","delete","isClearResponse","postMessage","performance","loadWorkerTimers","blob","Blob","URL","createObjectURL","revokeObjectURL","privSetTimeout","sendSpeechContext","speechContextJson","toJSON","sendPrePayloadJSONOverride","sendSpeechServiceConfig","requestSession","SpeechServiceConfigJson","telemetryDataEnabled","privMustReportEndOfStream","privAuthentication","privConnectionFactory","privAudioSource","privRecognizerConfig","RequestSession","privConnectionEvents","EventSource","privServiceEvents","privDynamicGrammar","DynamicGrammarBuilder","privSpeechContext","SpeechContext","privAgentConfig","AgentConfig","auth","privConnectionConfigurationPromise","recognitionMode","recoMode","privSuccessCallback","privErrorCallback","startNewRecognition","listenForServiceTelemetry","conPromise","audioStreamNode","deviceInfo","audioNode","ReplayableAudioNode","onAudioSourceAttachCompleted","audio","cancelRecognitionLocal","ConnectionFailure","sessionStartEventArgs","receiveMessage","sendAudio","isRecognizing","turnOff","sendFinalAudio","onStopRecognizing","turnCompletionPromise","privConnectionPromise","messagePayload","privActivityTemplate","telemetryData","getTelemetry","privServiceHasSentMessage","onServiceTurnStartResponse","speechStartDetected","SpeechDetected","speechStartEventArgs","Offset","speechStopDetected","isContinuousRecognition","onServiceRecognized","currentTurnAudioOffset","speechStopEventArgs","speechEndDetected","sendTelemetryData","isSpeechEnded","sessionStopEventArgs","sendPrePayloadJSON","processTypeSpecificMessages","sendWaveHeader","isUnAuthorized","authPromise","fetchOnExpiry","fetch","configureConnection","nextSendTime","fastLaneSizeMs","maxSendUnthrottledBytes","parseInt","startRecogNumber","recogNumber","readAndUploadCycle","audioStreamChunk","sendDelay","onAudioSent","bytesSent","onSpeechEnded","delayMs","out","readView","padStart","console","info","AuthInfo","privHeaderName","SpeechRecognitionEventArgs","ConversationTranscriptionEventArgs","privTranslations","IntentRecognitionEventArgs","IntentRecognitionResult","privIntentId","textMessage","headerBodySplit","parseHeaders","binaryMessage","dataView","headerLength","getInt16","headersString","String","fromCharCode","getInt8","makeHeaders","content","headerBuffer","stringToArrayBuffer","headerInt8Array","payloadInt8Array","bodyInt8Array","headerMatches","match","separatorIndex","AudioInputStream","PushAudioInputStream","PullAudioInputStream","PushAudioInputStreamImpl","privEvents","bufferData","Buffer","from","readCycle","toBuffer","turnOn","stream","bitspersample","channelcount","Unknown","manufacturer","samplerate","Stream","arrayBuffer","alloc","PullAudioInputStreamImpl","privIsClosed","privBufferSize","transmitBuff","readBuff","pulledBytes","synthesizerConfig","speechSynthesizer","audioDestination","speakOverride","connectImplOverride","fetchConnectionOverride","sendSynthesisContext","synthesisContextJson","privSynthesisTurn","sendSsmlMessage","ssml","privSynthesizerConfig","privSpeechSynthesizer","privSessionAudioDestination","privSynthesisContext","connectionClosedEvent","cancelSynthesisLocal","BadRequestParameters","privAudioOutputFormat","audioOutputFormat","updateHeader","tmp","isSSML","buildSsml","startNewSynthesis","synthesisStartEventArgs","SynthesizingAudioStarted","synthesisStarted","SynthesisCanceled","isSynthesizing","onStopSynthesizing","cancelSynthesis","onServiceResponseMessage","onAudioChunkReceived","synthesizing","audioWithHeader","addHeader","ev","SynthesizingAudio","metadataList","Metadata","metadata","Type","onWordBoundaryEvent","Data","Length","currentTextOffset","wordBoundary","getAllReceivedAudioWithHeader","SynthesizingAudioCompleted","synthesisCompleted","SpeechSynthesisEventArgs","SpeechSynthesisResult","privResultId","privAudioData","privOffset","privEventListeners","paramName","eventId","onEventCallback","attachListener","privInstance","setEventSource","eventSource","SpeechHypothesis","privSpeechHypothesis","Duration","PrimaryLanguage","Language","Confidence","SpeakerId","privSimpleSpeechPhrase","DisplayText","TranslationStatus","privProxyHostName","privProxyPort","privProxyUserName","privProxyPassword","fromParameters","ConnectionOpenResponse","privStatusCode","messageFormatter","proxyInfo","privConnectionState","privConnectionEstablishDeferral","privCertificateValidatedDeferral","WebSocket","forceNpmWebSocket","checkAgent","agent","GetAgent","privWebsocketClient","privUri","binaryType","privReceivingMessageQueue","Queue","privDisconnectDeferral","privSendMessageQueue","processSendQueue","onopen","privLastErrorReceived","onclose","onClose","onmessage","networkReceivedTime","deferred","enqueueFromPromise","rawMessage","privMessageFormatter","messageSendStatusDeferral","messageSendDeferral","Message","sendStatusDeferral","dequeue","sendRawMessage","sendItem","isWebsocketOpen","stack","None","closeReason","drainAndDispose","pendingReceiveItem","pendingSendItem","itemToSend","sendError","readyState","OPEN","queryParameters","privConnectionMessageAdapter","AudioFileWriter","filename","privFd","throwIfNotUndefined","privAudioFormat","headerOffset","privWriteStream","fd","autoClose","bytesWritten","end","TranslationRecognitionEventArgs","TranslationSynthesisEventArgs","TranslationSynthesisResult","privAudio","CognitiveSubscriptionKeyAuthentication","privAuthInfo","CognitiveTokenAuthentication","fetchCallback","fetchOnExpiryCallback","privFetchCallback","privFetchOnExpiryCallback","DetailedSpeechPhrase","privDetailedSpeechPhrase","NBest","TranslationPhrase","privTranslationPhrase","Translation","TranslationRecognitionCanceledEventArgs","sessionid","privCancelReason","privDefaultRequestOptions","privDefaultParams","privRestErrors","Accept","contentTypeKey","RiffPcmEncoder","actualSampleRate","desiredSampleRate","encode","actualAudioFrame","audioFrame","downSampleAudioFrame","privActualSampleRate","privDesiredSampleRate","floatTo16BitPCM","input","min","setInt16","srcFrame","srcRate","dstRate","ratio","dstLength","round","dstFrame","srcOffset","dstOffset","nextSrcOffset","accum","count","record","mediaStream","outputStream","scriptNode","bufferSize","createScriptProcessor","audioSampleRate","waveStreamEncoder","needHeader","onaudioprocess","inputFrame","inputBuffer","waveFrame","micInput","createMediaStreamSource","privSpeechProcessorScript","audioWorklet","addModule","workletNode","AudioWorkletNode","privMediaResources","scriptProcessorNode","releaseMediaResources","getTracks","track","stop","privRecorder","deviceId","privStreams","privInitializeDeferral","nav","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","constraints","errorCallback","privMediaStream","video","errorMsg","privContext","resume","listen","ChunkedArrayBufferStream","privOutputChunkSize","AUDIOFORMAT","destroyAudioContext","getMicrophoneLabel","label","Microphones","setWorkletUrl","privMicrophoneLabel","active","microphoneDeviceId","getSettings","enumerateDevices","devices","device","hasClose","suspend","privHeaderEnd","FileReader","privFile","upload","privAudioFormatPromise","readHeader","File","headerReader","headerResult","target","getWord","getUint8","formatSize","getInt32","getUint16","getUint32","pos","maxHeaderSize","getWaveFormatPCM","readAsArrayBuffer","reader","pcmRecorder","audioStream","PullAudioInputStreamCallback","MediaStream","AudioOutputConfigImpl","SpeakerAudioDestination","player","fromDefaultSpeakerOutput","PushAudioOutputStreamCallback","privSource","privDestination","list","privSubscriptionIdCounter","privAddSubscriptions","privRemoveSubscriptions","privDisposedSubscriptions","privDisposeReason","itemIndex","privList","first","last","add","insertAt","unshift","triggerSubscriptions","removeFirst","removeAt","removeLast","remove","removedElements","clear","onAdded","addedCallback","subscriptionId","onRemoved","removedCallback","onDisposed","disposedCallback","seperator","toArray","cloneCopy","any","where","all","select","selectList","filteredList","orderBy","compareFn","orderedArray","sort","orderByDesc","a","b","concatArray","subscriptions","SubscriberType","privPromiseStore","privIsDrainInProgress","privIsDisposing","enqueue","throwIfDispose","deferredSubscriber","privSubscribers","Dequeue","drain","peek","Peek","subs","lists","subscriber","dequeuedItem","pendingItemProcessor","promiseArray","wrapper","SpeechConfigImpl","SpeechServiceConnection_IntentRegion","SynthesisContext","sectionName","synthesisSection","buildSynthesisContext","metadataOptions","sentenceBoundaryEnabled","wordBoundaryEnabled","autoDetection","autoDetectSourceLanguage","iPrivConfig","SynthesisAudioMetadata","privSynthesisAudioMetadata","SpeechSynthesisWordBoundaryEventArgs","audioOffset","wordLength","textOffset","privAudioOffset","privText","privWordLength","privTextOffset","privDuration","privJson","SpeechRecognitionCanceledEventArgs","implCommonRecognizerSetup","enabled","createRecognizerConfig","createServiceRecognizer","getAuthFromProperties","stopRecognizing","SpeechConnectionFactory","interactiveRelativeUri","conversationRelativeUri","dictationRelativeUri","DeploymentIdParamName","autoDetectSourceLanguages","EnableLanguageID","Dictation","ConnectionIdHeader","SpeechServiceConnection_Url","SpeechServiceRecognizer","speechRecognizer","privSpeechRecognizer","sourceLanguages","onSuccess","action","onUnknown","interimResults","phraseResults","resultProps","processed","hypothesis","RecognizingSpeech","LanguageDetectionConfidence","onHypothesis","simple","implTranslateRecognitionResult","onPhraseRecognized","cancelReason","implTranslateCancelErrorCode","detailed","Display","IntentResponse","privIntentResponse","query","topScoringIntent","entities","IntentRecognitionCanceledEventArgs","TranslationHypothesis","privTranslationHypothesis","TranslationSynthesisEnd","privSynthesisEnd","FailureReason","privMap","ConversationTranscriptionCanceledEventArgs","SpeechSynthesisConnectionFactory","synthesisUri","SynthesisServiceType","SynthesizerConfig","privSynthesisServiceType","Standard","SynthesisTriggeredEvent","sessionAudioDestinationId","turnAudioDestinationId","privSessionAudioDestinationId","privTurnAudioDestinationId","ConnectingToSynthesisServiceEvent","SynthesisStartedEvent","privIsSynthesizing","privIsSynthesisEnded","privBytesReceived","privInTurn","privNextSearchTextIndex","responseJson","privTurnDeferral","privAudioOutputStream","privTurnAudioDestination","privReceivedAudio","readAllAudioFromStream","privReceivedAudioWithHeader","getAllReceivedAudio","rawText","privRawText","privIsSSML","updateTextOffset","bytesReceived","BackgroundEvent","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","that","RangeError","arg","encodingOrOffset","allocUnsafe","byteOffset","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","fromString","obj","isBuffer","checked","copy","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","decodeCodePointsArray","SlowBuffer","INSPECT_MAX_BYTES","global","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","x","y","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","src","dst","g","Function","AudioFormatToMimeType","audioDestinationId","privPlaybackStarted","privAppendingToBuffer","privMediaSourceOpened","privIsPaused","privAudioBuffer","updateSourceBuffer","privSourceBuffer","handleSourceBufferUpdateEnd","receivedAudio","_","audioBlob","notifyPlayback","mimeType","warn","MediaSource","isTypeSupported","Audio","privMediaSource","onsourceopen","addSourceBuffer","onupdate","onupdateend","onupdatestart","pause","play","sourceBufferAvailable","binary","appendBuffer","log","canEndStream","endOfStream","onended","onAudioEnd","updating","privPhrases","grammar","privGrammars","retObj","retPhrases","Groups","Items","dgi","generateGrammarObject","privSpeechStartDetected","SpeechRecognizer","autoDetectSourceLanguageConfig","mergeTo","Detailed","intentRegion","privIntentRecognizer","privIntentDataSent","addedIntents","umbrellaIntent","speechHypothesis","RecognizingIntent","sendEvent","privPendingIntentArgs","intentResponse","addedIntent","intent","RecognizedIntent","LanguageUnderstandingServiceResponse_JsonResult","to","SpeechServiceResponse_TranslationRequestStablePartialResult","StableTranslation","translationRecognizer","fireEventForResult","translatedPhrase","sendSynthesisAudio","synthEnd","retEvent","canceledResult","serviceResult","TranslatedSpeech","TranslatingSpeech","ActivityReceivedEventArgs","privActivity","privAudioStream","multiaudioRelativeUri","hostDefault","sendSpeechEvent","speechEventJson","sendTranscriptionStartJSON","createSpeechEventPayload","getConversationInfo","eventDict","meeting","audiorecording","SpeechSynthesizer","privSynthesizing","synthesisRequestQueue","implCommonSynthesizeSetup","languageToDefaultVoice","XMLEncode","speakImpl","createSynthesizerConfig","createSynthesisAdapter","fromSpeechSynthesisOutputFormat","IsSsml","dataStream","SynthesisRequest","adapterSpeak","Speak","MessageDataStreamType","ActivityPayloadResponse","privActivityResponse","messageDataStreamType","manager","privIsCompleted","privTurnManager","resetTurnEndTimeout","TextToSpeechAudio","createPullStream","AudioOutputFormat","privTimeoutToken","endAudioStream","CompleteTurn","privTurnMap","turnState","complete","dialogServiceConnector","sendAgentConfig","agentConfigSent","agentConfigJson","toJsonString","sendAgentContext","guid","privDialogServiceConnector","agentContext","channelData","interactionId","agentContextJson","receiveDialogMessageOverride","privTurnStateManager","listenOnce","dialogConnectImpl","privDialogAudioSource","privLastResult","interactionGuid","agentMessage","agentMessageJson","speechPhrase","audioRequestId","turn","GetTurn","responseRequestId","activityPayload","updateAgentConfig","pullAudioOutputStream","processActivityPayload","activityReceived","preAudioPromise","sendPreAudioMessages","node","loop","turnRequestId","StartTurn","turnEndRequestId","logLevelFilter","Warning","privLogLevelFilter","debug","logFragments","EventTime","Name","prop","valueToLog","privListeningTriggerMetric","privMicMetric","privConnectionEstablishMetric","End","eventTime","Start","privMicStartTime","privConnectionStartTime","Id","getConnectionError","privReceivedMessages","metrics","privPhraseLatencies","PhraseLatencyMs","privHypothesisLatencies","FirstHypothesisLatencyMs","telemetry","Metrics","ReceivedMessages","audioReceivedTime","privIsAudioNodeDetached","privIsRecognizing","privIsSpeechEnded","privTurnStartAudioOffset","privLastRecoOffset","privHypothesisReceived","privBytesSent","privRecogNumber","privServiceTelemetryListener","hasTelemetry","privAudioNode","replay","hypothesisReceived","findTimeAtOffset","phraseReceived","shrinkBuffers","detachAudioNode","RestRequestType","privTimeout","privIgnoreCache","responseReceivedDeferral","requestCommand","Post","privRestAdapter","getOperationUri","setHeaders","ignoreMinLength","profileIds","voiceProfileIds","Delete","dependency","TextDependentVerification","iota","hasTypedArrays","Float64Array","compare1st","order","stride","terms","abs","compileConstructor","dtype","dimension","className","useGetters","procedure","CACHED_CONSTRUCTORS","indices","index_str","shapeArg","strideArg","a_vars","c_vars","tShape","tStride","idx","shape","ctor","sz","arrayDType","ctor_list","CertCheckAgent","privProxyInfo","privDiskCache","supportBuffer","location","process","env","SPEECH_OCSP_CACHE_ROOT","privMemCache","disableStapling","Agent","CreateConnection","HostName","Port","httpProxyOptions","UserName","Password","requestOCSP","socketPromise","ocspRequest","stapling","resolved","socket","cork","tlsSocket","destroy","peer","getPeerCertificate","issuer","GetIssuer","generate","raw","sig","cacheEntry","GetResponseFromCache","VerifyOCSPResponse","uncork","issuerCertificate","fetchIssuer","cachedResponse","diskCacheResponse","isCached","StoreMemoryCacheEntry","tbsData","parseResponse","tbsResponseData","responses","cachedStartTime","thisUpdate","cachedNextTime","nextUpdate","testTimeOffset","minUpdate","UpdateCache","cacheValue","ocspResponse","certID","GetOCSPResponse","StoreCacheEntry","req","rawResponse","StoreDiskCacheEntry","GetProxyAgent","getAuthorityInfo","cert","parsedUri","assign","getResponse","enableOCSP","NODE_TLS_REJECT_UNAUTHORIZED","SPEECH_CONDUCT_OCSP_CHECK","secureEndpoint","forceDisableOCSPStapling","servername","baseAgent","OCSPCheck","punycode","util","Url","slashes","hash","urlParse","relative","resolveObject","isString","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","parseQueryString","slashesDenoteHost","isObject","u","queryIndex","splitter","uSplit","rest","simplePath","exec","proto","lowerProto","atSign","hostEnd","hec","decodeURIComponent","parseHost","ipv6Hostname","hostparts","newpart","validParts","notHost","bit","toASCII","h","ae","esc","escape","qm","rel","tkeys","tk","tkey","rkeys","rk","rkey","v","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","hasTrailingSlash","up","isAbsolute","privIsWriteEnded","privIsReadEnded","privReaderQueue","streamChunk","throwIfClosed","constructor","isSlowBuffer","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","argv","versions","prependListener","prependOnceListener","binding","cwd","chdir","umask","root","nodeType","freeGlobal","self","maxInt","regexPunycode","regexNonASCII","regexSeparators","errors","stringFromCharCode","mapDomain","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","base","decode","basic","oldi","w","baseMinusT","inputLength","bias","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","webpackPolyfill","deprecate","paths","children","qs","sep","eq","regexp","maxKeys","kstr","vstr","xs","stringifyPrimitive","objectKeys","ks","f","CustomElement","HTMLElement","shadow","attachShadow","el","document","createElement","style","innerText","hasAttribute","getAttribute","append","DashStyle","TextHorizontalAlign","TextVerticalAlign","Presets","old_console_log_func","old_console_error_func","old_console_warn_func","old_console_info_func","developer_mode","container_el","appendChild","is_continuation","isContinuation","replaceClassName","line_el","last_child_el","lastChild","classList","setAttribute","timeStamp","textNode","createTextNode","make_msg","col","firstChild","removeChild","trimEnd","Pen","color","Color","Width","Rect","width","height","right","bottom","GCH","ctx","rect","clip","graph_rect","world_rect","xscale","yscale","xform","setTransform","dest_rect","src_rect","GetWorldToGraphicTransform","ApplyTransform","fillStyle","fillRect","cx","cy","rx","ry","save","beginPath","translate","scale","arc","PI","restore","strokeStyle","stroke","pen","gc","lineWidth","setLineDash","DashPattern","strokeRect","alignment","H","Left","V","Bottom","textAlign","textBaseline","fillText","x1","y1","x2","y2","moveTo","lineTo","Clut","SZ","rgba","Uint32Array","f_inc","get_interpolated_val","LAST_IDX","fractional_idx","internal_idx","alpha","MADNESS","HEATMAP","GRAYSCALE","GRAYSCALE_INVERSE","TRAFFIC_LIGHTS","canvas","MarkerStyle","RenderStyle","DownSampleAlgorithm","SignalFollowBehaviour","AutoYAxisAdjustBehaviour","Area","cvUtils","createImageBitmap","async","getContext","imageSmoothingEnabled","putImageData","time","Filled","radius","ColorMap","DefaultColor","editDialog","label_el","querySelector","showModal","returnValue","prompt","scope","marker_g_x","d2gX","gBounds","marker_g_y","d2gY","offset_x","offset_y","container","markers_","offScreenContexts","currentOffScreenContextsIndex","canvases","MIN_GRID_X","MIN_GRID_Y","gridMinorX","gridMajorX","gridMinorY","gridMajorY","AxisFont","AxisFontHeight","ButtonFont","BackColor","ForeColor","AxesBackColor","BorderColor","IS_SPECTROGRAM","GridMinorTextColor","GridMajorTextColor","ButtonBackColor","ButtonForeColor","ButtonDisabledColor","SampleUnitMultiplier","fs_","sampleDuration","dragPoint","dragStartPoint","_nchans","slaves","_lineWidth","dataTimeOld","time_axis_visible_","y_axis_visible_","follow_signal_","adjust_y_axis","signal_follow_behaviour","Paginate","EnsureAllSamplesVisible","AutoYAxisAdjustChannel","_YAxisFormat","captureArea","dataTime","RenderFrame","dBoundsOld","Equals","dBounds","onScreenContext","ctx_off_prev","ctx_off_curr","TimeAxisVisible","YAxisVisible","FillRectangleCoords","yAxisBounds","timeAxisBounds","RenderTimeAxis","RenderYAxis","dirtyRect","Clone","new_data_overlap_pixels","pixels2duration","BlitGraph","RenderPlot","RenderGraphBackground","RenderGraphGrid","RenderButtons","requestAnimationFrame","ColorLookupTable","onScreenCanvas","lineHeight","position","master","penGridMajor","penGridMinor","penBorder","colorGridMajor","colorGridMinor","getCoords","getBoundingClientRect","touches","clientX","left","clientY","top","ontouchstart","onmousedown","preventDefault","GetArea","ontouchmove","onmousemove","Graph","graph_Zoom","YAxis","yAxis_Scroll","TimeAxis","timeAxis_Scroll","cursor","markerUnderCursor","FindMarker","FollowSignalButton","AutoScaleButton","ontouchend","onmouseup","AutoScaleY","FollowSignal","ondblclick","editLabel","g2dX","g2dY","AddMarker","W","parentElement","clientWidth","clientHeight","Resize","g_x","g_y","hitTest","markers","fs","ChannelInfo","slave","DataWidth","visible","Layout","follow_signal","conn_","CurrentTimeSecs","Scroll","DataX","Fit","conn","onData","Fs","current_time","timeAxis_Recalc","yAxis_Recalc","Reset","y_axis_width","x_axis_height","ButtonsBounds","src_ctx","dest_ctx","img","getImageData","ex","font","FillRectangle","align","Center","Middle","textColorAutoScale","textColorSignalFollow","DrawString","start_offset_time","StartTimeSecs","setClip","SetOrigin","firstGridMinorX","add_numbers_to_grid_minor","duration2pixels","gx","time2pixels","DrawLine","Top","timeToString","firstGridMinorY","d2gHeight","gy","Right","toFixed","DataY","DataHeight","FillCircle","start_time","HasData","RenderPlotData","AdjustYAxis","RenderMarkers","time_and_sample_values_rect","pixel_and_sample_values_rect","nMaxY","MAX_VALUE","nMinY","first_idx","TimeToIndex","num_frames_to_display","num_frames_available","NumFramesRead","samples_per_pixel","last_y","sample_rate_and_sample_values_rect","data_as_image","ImageData","NumChannels","data_pixels","nvals","start_val","data_val","rotate","drawImage","chan","Visible","scale_y_axis_to_this_channel","render_style","downsample_algorithm","downSample","globalCompositeOperation","Segment","chan_data","pick","subpixel_min_y","subpixel_max_y","subpixel_sum_y","pixel_x","last_rendered_idx","segment_start_t","Line","Step","SetTransformRect","MinMax","Avg","Decimate","lineJoin","y_old","dt","quadraticCurveTo","next_sample_is_in_segment","EnsureMostRecentSampleVisible","maxY","minY","YExtentChanged","dx","dy","dHeight","dWidth","d2gWidth","pow10","LN10","gRect","dRect","firstGridX","firstGridY","oh","oy","range","X","Y","Contains","delta_x","delta_y","sgn_dx","sgn_dy","fact","scope_el","labels_el","marker_editor_dialog_el","innerHTML","scope_","t2x","GraphBounds","cue_el","new_label","borderLeftColor","dataset","cue_els","querySelectorAll","parseFloat","cvError","cv","exceptionFromPtr","ptr","cvCreateCascadeClassifier","xml_file_name","classifier","CascadeClassifier","resp","FS_createDataFile","cvCreateFileFromUrl","FaceDetectElement","face_count_","eyes_count_","OpenCVReady","cv_ready","Mat","CV_8UC4","gray","cap","VideoCapture","faces","RectVector","eyes","face_classifier","eye_classifier","ideal","srcObject","processVideo","Enabled","begin","copyTo","cvtColor","COLOR_RGBA2GRAY","detectMultiScale","face","point1","Point","point2","rectangle","eye","imshow","num_channels","array_constructor","idx_","nBuffersRead_","sampleCount_","NUM_CHANNELS","buf_","reset","new_data","N","MeasuredFs","perf_start_frames_read","perf_start_time","BUFFER_SIZE_SECONDS","put","RowCount","BuffersRead","startPerformanceMeasurement","start_time_seconds","duration_seconds","frame_offset","frames_read","parseEDA","eda_report","sample_rate","parser","statusListeners","informListeners","onConnectionStatus","url_","sock_","ws","AddData","measurePerformance","bits_per_sample","AddStatusListener","getComputedStyle","getPropertyValue","led_color","socket_state","Sock","clearRect","drawLed","center_x","center_y","top_y","gradient_shine","createLinearGradient","addColorStop","gradient_bezel","DrawCircle","FillEllipse","subscription_decrypt_key","create_recognizer","create_synthesizer","Initialize","crypt","TextEncoder","audioOutputConfig","internalAudio","currentSrc","fromSpeakerOutput","audioInputConfig","this_","sender","recognizeOnceAsync","sleep","ms","last_audio_time","new_audio_time","speakSsmlAsync","speakTextAsync","LatencySeconds","SigProc","Ewma","half_life_samples","exp","Val","EDAAnalyzer","ewma","SCRConnection","SCLConnection","data_SCR","data_EDA_and_SCL","v_ewma","EDA","SCL","SCR","BufferUtils","factories","Uint16Array","Uint8ClampedArray","chars","getPrototypeOf","stringified","encoded1","encoded2","encoded3","encoded4","bufferLength","arraybuffer","factory","source_","name_","Connection","file_name","DataRaw","api_response","save_numpy","save_json","Markers","session_data","load_json","SessionManagerElement","session_","scope_element_","btn_load_el","files","Load","Save","session_name_el","generate_name","oninput","onclick","NewSession","session_name","source_element_id","Scope","HidDeviceConnectionStatusCode","ScopeMarkerEditorElement","color_el","dispatchEvent","Event","switchToPage","page_id","pages","page","page_buttons","page_button","disabled","iterator","nk","partitions","AddAlgorithms","customElements","define","button","scopeEl_SCR","scopeEl_SCL","websocketEl","scopeSCR","scopeSCL","edaAnalyzer","AddSlave","enableGazeDetectionEl","FaceRecognitionEl","startSpeechRecognitionButton","statusIndicator","passwordElement","scopeSignalFollowBehaviourRadioButtons","onchange","password","speechService","StartContinuousRecognition","ValueAtTime","StopContinuousRecognition","scopeMarkerEditorEls","altKey","get_server_status","DISCONNECTED","vid","pid","open_hid_device","targetChunkSize","privTargetChunkSize","privNextBufferReadyBytes","bytesCopiedFromBuffer","privNextBufferToWrite","privNextBufferStartTime","bytesToCopy","targetView","sourceView","ServiceEvent","jsonstring","ConnectionEvent","ConnectionStartEvent","ConnectionEstablishedEvent","ConnectionClosedEvent","privRreason","ConnectionErrorEvent","privMessage","privType","ConnectionEstablishErrorEvent","statuscode","ConnectionMessageReceivedEvent","networkReceivedTimeISO","privNetworkReceivedTime","ConnectionMessageSentEvent","networkSentTimeISO","privNetworkSentTime","ConnectionState","bytesPerSecond","privBuffers","privReplayOffset","privLastShrinkOffset","privBufferStartOffset","privBufferSerial","privBufferedBytes","privReplay","privLastChunkAcquiredTime","privBytesPerSecond","offsetToSeek","bytesToSeek","retVal","BufferEntry","startOffset","endOffset","serial"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 137);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * @class Contracts\n * @private\n */\nexport class Contracts {\n    static throwIfNullOrUndefined(param, name) {\n        if (param === undefined || param === null) {\n            throw new Error(\"throwIfNullOrUndefined:\" + name);\n        }\n    }\n    static throwIfNull(param, name) {\n        if (param === null) {\n            throw new Error(\"throwIfNull:\" + name);\n        }\n    }\n    static throwIfNullOrWhitespace(param, name) {\n        Contracts.throwIfNullOrUndefined(param, name);\n        if ((\"\" + param).trim().length < 1) {\n            throw new Error(\"throwIfNullOrWhitespace:\" + name);\n        }\n    }\n    static throwIfDisposed(isDisposed) {\n        if (isDisposed) {\n            throw new Error(\"the object is already disposed\");\n        }\n    }\n    static throwIfArrayEmptyOrWhitespace(array, name) {\n        Contracts.throwIfNullOrUndefined(array, name);\n        if (array.length === 0) {\n            throw new Error(\"throwIfArrayEmptyOrWhitespace:\" + name);\n        }\n        for (const item of array) {\n            Contracts.throwIfNullOrWhitespace(item, name);\n        }\n    }\n    static throwIfFileDoesNotExist(param, name) {\n        Contracts.throwIfNullOrWhitespace(param, name);\n        // TODO check for file existence.\n    }\n    static throwIfNotUndefined(param, name) {\n        if (param !== undefined) {\n            throw new Error(\"throwIfNotUndefined:\" + name);\n        }\n    }\n}\n\n//# sourceMappingURL=Contracts.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Defines speech property ids.\n * @class PropertyId\n */\nexport var PropertyId;\n(function (PropertyId) {\n    /**\n     * The Cognitive Services Speech Service subscription Key. If you are using an intent recognizer, you need to specify\n     * to specify the LUIS endpoint key for your particular LUIS app. Under normal circumstances, you shouldn't\n     * have to use this property directly.\n     * Instead, use [[SpeechConfig.fromSubscription]].\n     * @member PropertyId.SpeechServiceConnection_Key\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Key\"] = 0] = \"SpeechServiceConnection_Key\";\n    /**\n     * The Cognitive Services Speech Service endpoint (url). Under normal circumstances, you shouldn't\n     * have to use this property directly.\n     * Instead, use [[SpeechConfig.fromEndpoint]].\n     * NOTE: This endpoint is not the same as the endpoint used to obtain an access token.\n     * @member PropertyId.SpeechServiceConnection_Endpoint\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Endpoint\"] = 1] = \"SpeechServiceConnection_Endpoint\";\n    /**\n     * The Cognitive Services Speech Service region. Under normal circumstances, you shouldn't have to\n     * use this property directly.\n     * Instead, use [[SpeechConfig.fromSubscription]], [[SpeechConfig.fromEndpoint]], [[SpeechConfig.fromAuthorizationToken]].\n     * @member PropertyId.SpeechServiceConnection_Region\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Region\"] = 2] = \"SpeechServiceConnection_Region\";\n    /**\n     * The Cognitive Services Speech Service authorization token (aka access token). Under normal circumstances,\n     * you shouldn't have to use this property directly.\n     * Instead, use [[SpeechConfig.fromAuthorizationToken]], [[SpeechRecognizer.authorizationToken]],\n     * [[IntentRecognizer.authorizationToken]], [[TranslationRecognizer.authorizationToken]], [[SpeakerRecognizer.authorizationToken]].\n     * @member PropertyId.SpeechServiceAuthorization_Token\n     */\n    PropertyId[PropertyId[\"SpeechServiceAuthorization_Token\"] = 3] = \"SpeechServiceAuthorization_Token\";\n    /**\n     * The Cognitive Services Speech Service authorization type. Currently unused.\n     * @member PropertyId.SpeechServiceAuthorization_Type\n     */\n    PropertyId[PropertyId[\"SpeechServiceAuthorization_Type\"] = 4] = \"SpeechServiceAuthorization_Type\";\n    /**\n     * The Cognitive Services Speech Service endpoint id. Under normal circumstances, you shouldn't\n     * have to use this property directly.\n     * Instead, use [[SpeechConfig.endpointId]].\n     * NOTE: The endpoint id is available in the Speech Portal, listed under Endpoint Details.\n     * @member PropertyId.SpeechServiceConnection_EndpointId\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_EndpointId\"] = 5] = \"SpeechServiceConnection_EndpointId\";\n    /**\n     * The list of comma separated languages (BCP-47 format) used as target translation languages. Under normal circumstances,\n     * you shouldn't have to use this property directly.\n     * Instead use [[SpeechTranslationConfig.addTargetLanguage]],\n     * [[SpeechTranslationConfig.targetLanguages]], [[TranslationRecognizer.targetLanguages]].\n     * @member PropertyId.SpeechServiceConnection_TranslationToLanguages\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationToLanguages\"] = 6] = \"SpeechServiceConnection_TranslationToLanguages\";\n    /**\n     * The name of the Cognitive Service Text to Speech Service Voice. Under normal circumstances, you shouldn't have to use this\n     * property directly.\n     * Instead, use [[SpeechTranslationConfig.voiceName]].\n     * NOTE: Valid voice names can be found <a href=\"https://aka.ms/csspeech/voicenames\">here</a>.\n     * @member PropertyId.SpeechServiceConnection_TranslationVoice\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationVoice\"] = 7] = \"SpeechServiceConnection_TranslationVoice\";\n    /**\n     * Translation features.\n     * @member PropertyId.SpeechServiceConnection_TranslationFeatures\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_TranslationFeatures\"] = 8] = \"SpeechServiceConnection_TranslationFeatures\";\n    /**\n     * The Language Understanding Service Region. Under normal circumstances, you shouldn't have to use this property directly.\n     * Instead, use [[LanguageUnderstandingModel]].\n     * @member PropertyId.SpeechServiceConnection_IntentRegion\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_IntentRegion\"] = 9] = \"SpeechServiceConnection_IntentRegion\";\n    /**\n     * The host name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\n     * You shouldn't have to use this property directly.\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\n     * Added in version 1.4.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_ProxyHostName\"] = 10] = \"SpeechServiceConnection_ProxyHostName\";\n    /**\n     * The port of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\n     * You shouldn't have to use this property directly.\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\n     * Added in version 1.4.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_ProxyPort\"] = 11] = \"SpeechServiceConnection_ProxyPort\";\n    /**\n     * The user name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\n     * You shouldn't have to use this property directly.\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\n     * Added in version 1.4.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_ProxyUserName\"] = 12] = \"SpeechServiceConnection_ProxyUserName\";\n    /**\n     * The password of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\n     * You shouldn't have to use this property directly.\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\n     * Added in version 1.4.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_ProxyPassword\"] = 13] = \"SpeechServiceConnection_ProxyPassword\";\n    /**\n     * The Cognitive Services Speech Service recognition Mode. Can be \"INTERACTIVE\", \"CONVERSATION\", \"DICTATION\".\n     * This property is intended to be read-only. The SDK is using it internally.\n     * @member PropertyId.SpeechServiceConnection_RecoMode\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_RecoMode\"] = 14] = \"SpeechServiceConnection_RecoMode\";\n    /**\n     * The spoken language to be recognized (in BCP-47 format). Under normal circumstances, you shouldn't have to use this property\n     * directly.\n     * Instead, use [[SpeechConfig.speechRecognitionLanguage]].\n     * @member PropertyId.SpeechServiceConnection_RecoLanguage\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_RecoLanguage\"] = 15] = \"SpeechServiceConnection_RecoLanguage\";\n    /**\n     * The session id. This id is a universally unique identifier (aka UUID) representing a specific binding of an audio input stream\n     * and the underlying speech recognition instance to which it is bound. Under normal circumstances, you shouldn't have to use this\n     * property directly.\n     * Instead use [[SessionEventArgs.sessionId]].\n     * @member PropertyId.Speech_SessionId\n     */\n    PropertyId[PropertyId[\"Speech_SessionId\"] = 16] = \"Speech_SessionId\";\n    /**\n     * The spoken language to be synthesized (e.g. en-US)\n     * @member PropertyId.SpeechServiceConnection_SynthLanguage\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_SynthLanguage\"] = 17] = \"SpeechServiceConnection_SynthLanguage\";\n    /**\n     * The name of the TTS voice to be used for speech synthesis\n     * @member PropertyId.SpeechServiceConnection_SynthVoice\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_SynthVoice\"] = 18] = \"SpeechServiceConnection_SynthVoice\";\n    /**\n     * The string to specify TTS output audio format\n     * @member PropertyId.SpeechServiceConnection_SynthOutputFormat\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_SynthOutputFormat\"] = 19] = \"SpeechServiceConnection_SynthOutputFormat\";\n    /**\n     * The list of comma separated languages used as possible source languages\n     * Added in version 1.13.0\n     * @member PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_AutoDetectSourceLanguages\"] = 20] = \"SpeechServiceConnection_AutoDetectSourceLanguages\";\n    /**\n     * The requested Cognitive Services Speech Service response output format (simple or detailed). Under normal circumstances, you shouldn't have\n     * to use this property directly.\n     * Instead use [[SpeechConfig.outputFormat]].\n     * @member PropertyId.SpeechServiceResponse_RequestDetailedResultTrueFalse\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestDetailedResultTrueFalse\"] = 21] = \"SpeechServiceResponse_RequestDetailedResultTrueFalse\";\n    /**\n     * The requested Cognitive Services Speech Service response output profanity level. Currently unused.\n     * @member PropertyId.SpeechServiceResponse_RequestProfanityFilterTrueFalse\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestProfanityFilterTrueFalse\"] = 22] = \"SpeechServiceResponse_RequestProfanityFilterTrueFalse\";\n    /**\n     * The Cognitive Services Speech Service response output (in JSON format). This property is available on recognition result objects only.\n     * @member PropertyId.SpeechServiceResponse_JsonResult\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_JsonResult\"] = 23] = \"SpeechServiceResponse_JsonResult\";\n    /**\n     * The Cognitive Services Speech Service error details (in JSON format). Under normal circumstances, you shouldn't have to\n     * use this property directly. Instead use [[CancellationDetails.errorDetails]].\n     * @member PropertyId.SpeechServiceResponse_JsonErrorDetails\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_JsonErrorDetails\"] = 24] = \"SpeechServiceResponse_JsonErrorDetails\";\n    /**\n     * The cancellation reason. Currently unused.\n     * @member PropertyId.CancellationDetails_Reason\n     */\n    PropertyId[PropertyId[\"CancellationDetails_Reason\"] = 25] = \"CancellationDetails_Reason\";\n    /**\n     * The cancellation text. Currently unused.\n     * @member PropertyId.CancellationDetails_ReasonText\n     */\n    PropertyId[PropertyId[\"CancellationDetails_ReasonText\"] = 26] = \"CancellationDetails_ReasonText\";\n    /**\n     * The Cancellation detailed text. Currently unused.\n     * @member PropertyId.CancellationDetails_ReasonDetailedText\n     */\n    PropertyId[PropertyId[\"CancellationDetails_ReasonDetailedText\"] = 27] = \"CancellationDetails_ReasonDetailedText\";\n    /**\n     * The Language Understanding Service response output (in JSON format). Available via [[IntentRecognitionResult]]\n     * @member PropertyId.LanguageUnderstandingServiceResponse_JsonResult\n     */\n    PropertyId[PropertyId[\"LanguageUnderstandingServiceResponse_JsonResult\"] = 28] = \"LanguageUnderstandingServiceResponse_JsonResult\";\n    /**\n     * The URL string built from speech configuration.\n     * This property is intended to be read-only. The SDK is using it internally.\n     * NOTE: Added in version 1.7.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Url\"] = 29] = \"SpeechServiceConnection_Url\";\n    /**\n     * The initial silence timeout value (in milliseconds) used by the service.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_InitialSilenceTimeoutMs\"] = 30] = \"SpeechServiceConnection_InitialSilenceTimeoutMs\";\n    /**\n     * The end silence timeout value (in milliseconds) used by the service.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_EndSilenceTimeoutMs\"] = 31] = \"SpeechServiceConnection_EndSilenceTimeoutMs\";\n    /**\n     * A boolean value specifying whether audio logging is enabled in the service or not.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_EnableAudioLogging\"] = 32] = \"SpeechServiceConnection_EnableAudioLogging\";\n    /**\n     * The requested Cognitive Services Speech Service response output profanity setting.\n     * Allowed values are \"masked\", \"removed\", and \"raw\".\n     * Added in version 1.7.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_ProfanityOption\"] = 33] = \"SpeechServiceResponse_ProfanityOption\";\n    /**\n     * A string value specifying which post processing option should be used by service.\n     * Allowed values are \"TrueText\".\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_PostProcessingOption\"] = 34] = \"SpeechServiceResponse_PostProcessingOption\";\n    /**\n     *  A boolean value specifying whether to include word-level timestamps in the response result.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_RequestWordLevelTimestamps\"] = 35] = \"SpeechServiceResponse_RequestWordLevelTimestamps\";\n    /**\n     * The number of times a word has to be in partial results to be returned.\n     * Added in version 1.7.0\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_StablePartialResultThreshold\"] = 36] = \"SpeechServiceResponse_StablePartialResultThreshold\";\n    /**\n     * A string value specifying the output format option in the response result. Internal use only.\n     * Added in version 1.7.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_OutputFormatOption\"] = 37] = \"SpeechServiceResponse_OutputFormatOption\";\n    /**\n     * A boolean value to request for stabilizing translation partial results by omitting words in the end.\n     * Added in version 1.7.0.\n     */\n    PropertyId[PropertyId[\"SpeechServiceResponse_TranslationRequestStablePartialResult\"] = 38] = \"SpeechServiceResponse_TranslationRequestStablePartialResult\";\n    /**\n     * Identifier used to connect to the backend service.\n     * @member PropertyId.Conversation_ApplicationId\n     */\n    PropertyId[PropertyId[\"Conversation_ApplicationId\"] = 39] = \"Conversation_ApplicationId\";\n    /**\n     * Type of dialog backend to connect to.\n     * @member PropertyId.Conversation_DialogType\n     */\n    PropertyId[PropertyId[\"Conversation_DialogType\"] = 40] = \"Conversation_DialogType\";\n    /**\n     * Silence timeout for listening\n     * @member PropertyId.Conversation_Initial_Silence_Timeout\n     */\n    PropertyId[PropertyId[\"Conversation_Initial_Silence_Timeout\"] = 41] = \"Conversation_Initial_Silence_Timeout\";\n    /**\n     * From Id to add to speech recognition activities.\n     * @member PropertyId.Conversation_From_Id\n     */\n    PropertyId[PropertyId[\"Conversation_From_Id\"] = 42] = \"Conversation_From_Id\";\n    /**\n     * ConversationId for the session.\n     * @member PropertyId.Conversation_Conversation_Id\n     */\n    PropertyId[PropertyId[\"Conversation_Conversation_Id\"] = 43] = \"Conversation_Conversation_Id\";\n    /**\n     * Comma separated list of custom voice deployment ids.\n     * @member PropertyId.Conversation_Custom_Voice_Deployment_Ids\n     */\n    PropertyId[PropertyId[\"Conversation_Custom_Voice_Deployment_Ids\"] = 44] = \"Conversation_Custom_Voice_Deployment_Ids\";\n    /**\n     * Speech activity template, stamp properties from the template on the activity generated by the service for speech.\n     * @member PropertyId.Conversation_Speech_Activity_Template\n     * Added in version 1.10.0.\n     */\n    PropertyId[PropertyId[\"Conversation_Speech_Activity_Template\"] = 45] = \"Conversation_Speech_Activity_Template\";\n    /**\n     * The Cognitive Services Speech Service host (url). Under normal circumstances, you shouldn't have to use this property directly.\n     * Instead, use [[SpeechConfig.fromHost]].\n     */\n    PropertyId[PropertyId[\"SpeechServiceConnection_Host\"] = 46] = \"SpeechServiceConnection_Host\";\n    /**\n     * Set the host for service calls to the Conversation Translator REST management and websocket calls.\n     */\n    PropertyId[PropertyId[\"ConversationTranslator_Host\"] = 47] = \"ConversationTranslator_Host\";\n    /**\n     * Optionally set the the host's display name.\n     * Used when joining a conversation.\n     */\n    PropertyId[PropertyId[\"ConversationTranslator_Name\"] = 48] = \"ConversationTranslator_Name\";\n    /**\n     * Optionally set a value for the X-CorrelationId request header.\n     * Used for troubleshooting errors in the server logs. It should be a valid guid.\n     */\n    PropertyId[PropertyId[\"ConversationTranslator_CorrelationId\"] = 49] = \"ConversationTranslator_CorrelationId\";\n    /**\n     * Set the conversation token to be sent to the speech service. This enables the\n     * service to service call from the speech service to the Conversation Translator service for relaying\n     * recognitions. For internal use.\n     */\n    PropertyId[PropertyId[\"ConversationTranslator_Token\"] = 50] = \"ConversationTranslator_Token\";\n})(PropertyId || (PropertyId = {}));\n\n//# sourceMappingURL=PropertyId.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Make sure not to export internal modules.\n//\nexport * from \"./CognitiveSubscriptionKeyAuthentication\";\nexport * from \"./CognitiveTokenAuthentication\";\nexport * from \"./IAuthentication\";\nexport * from \"./IntentConnectionFactory\";\nexport * from \"./RecognitionEvents\";\nexport * from \"./ServiceRecognizerBase\";\nexport * from \"./RecognizerConfig\";\nexport * from \"./WebsocketMessageFormatter\";\nexport * from \"./SpeechConnectionFactory\";\nexport * from \"./TranscriberConnectionFactory\";\nexport * from \"./TranslationConnectionFactory\";\nexport * from \"./SpeechSynthesisConnectionFactory\";\nexport * from \"./EnumTranslation\";\nexport * from \"./ServiceMessages/Enums\";\nexport * from \"./ServiceMessages/TranslationSynthesisEnd\";\nexport * from \"./ServiceMessages/TranslationHypothesis\";\nexport * from \"./ServiceMessages/TranslationPhrase\";\nexport * from \"./TranslationServiceRecognizer\";\nexport * from \"./ServiceMessages/SpeechDetected\";\nexport * from \"./ServiceMessages/SpeechHypothesis\";\nexport * from \"./SpeechServiceRecognizer\";\nexport * from \"./TranscriptionServiceRecognizer\";\nexport * from \"./ServiceMessages/DetailedSpeechPhrase\";\nexport * from \"./ServiceMessages/SimpleSpeechPhrase\";\nexport * from \"./AddedLmIntent\";\nexport * from \"./IntentServiceRecognizer\";\nexport * from \"./ServiceMessages/IntentResponse\";\nexport * from \"./RequestSession\";\nexport * from \"./SpeechContext\";\nexport * from \"./DynamicGrammarBuilder\";\nexport * from \"./DialogServiceAdapter\";\nexport * from \"./AgentConfig\";\nexport * from \"./Transcription/Exports\";\nexport * from \"./ServiceMessages/SynthesisAudioMetadata\";\nexport * from \"./SynthesisTurn\";\nexport * from \"./SynthesisAdapterBase\";\nexport * from \"./SynthesizerConfig\";\nexport * from \"./SynthesisContext\";\nexport * from \"./SpeakerRecognitionConfig\";\nexport * from \"./SpeakerIdMessageAdapter\";\nexport const OutputFormatPropertyName = \"OutputFormat\";\nexport const CancellationErrorCodePropertyName = \"CancellationErrorCode\";\nexport const ServicePropertiesPropertyName = \"ServiceProperties\";\nexport const ForceDictationPropertyName = \"ForceDictation\";\nexport const AutoDetectSourceLanguagesOpenRangeOptionName = \"OpenRange\";\n\n//# sourceMappingURL=Exports.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\n/**\n * Represents a keyword recognition model for recognizing when\n * the user says a keyword to initiate further speech recognition.\n * @class KeywordRecognitionModel\n */\nexport class KeywordRecognitionModel {\n    /**\n     * Create and initializes a new instance.\n     * @constructor\n     */\n    constructor() {\n        this.privDisposed = false;\n    }\n    /**\n     * Creates a keyword recognition model using the specified filename.\n     * @member KeywordRecognitionModel.fromFile\n     * @function\n     * @public\n     * @param {string} fileName - A string that represents file name for the keyword recognition model.\n     *        Note, the file can point to a zip file in which case the model\n     *        will be extracted from the zip.\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n     */\n    static fromFile(fileName) {\n        Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\n        throw new Error(\"Not yet implemented.\");\n    }\n    /**\n     * Creates a keyword recognition model using the specified filename.\n     * @member KeywordRecognitionModel.fromStream\n     * @function\n     * @public\n     * @param {string} file - A File that represents file for the keyword recognition model.\n     *        Note, the file can point to a zip file in which case the model will be extracted from the zip.\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n     */\n    static fromStream(file) {\n        Contracts.throwIfNull(file, \"file\");\n        throw new Error(\"Not yet implemented.\");\n    }\n    /**\n     * Dispose of associated resources.\n     * @member KeywordRecognitionModel.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        if (this.privDisposed) {\n            return;\n        }\n        this.privDisposed = true;\n    }\n}\n\n//# sourceMappingURL=KeywordRecognitionModel.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\n/**\n * Language understanding model\n * @class LanguageUnderstandingModel\n */\nexport class LanguageUnderstandingModel {\n    /**\n     * Creates and initializes a new instance\n     * @constructor\n     */\n    constructor() {\n    }\n    /**\n     * Creates an language understanding model using the specified endpoint.\n     * @member LanguageUnderstandingModel.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} uri - A String that represents the endpoint of the language understanding model.\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n    static fromEndpoint(uri) {\n        Contracts.throwIfNull(uri, \"uri\");\n        Contracts.throwIfNullOrWhitespace(uri.hostname, \"uri\");\n        const langModelImp = new LanguageUnderstandingModelImpl();\n        // Need to extract the app ID from the URL.\n        // URL is in the format: https://<region>.api.cognitive.microsoft.com/luis/v2.0/apps/<Guid>?subscription-key=<key>&timezoneOffset=-360\n        // Start tearing the string apart.\n        // region can be extracted from the host name.\n        const firstDot = uri.host.indexOf(\".\");\n        if (-1 === firstDot) {\n            throw new Error(\"Could not determine region from endpoint\");\n        }\n        langModelImp.region = uri.host.substr(0, firstDot);\n        // Now the app ID.\n        const lastSegment = uri.pathname.lastIndexOf(\"/\") + 1;\n        if (-1 === lastSegment) {\n            throw new Error(\"Could not determine appId from endpoint\");\n        }\n        langModelImp.appId = uri.pathname.substr(lastSegment);\n        // And finally the key.\n        langModelImp.subscriptionKey = uri.searchParams.get(\"subscription-key\");\n        if (undefined === langModelImp.subscriptionKey) {\n            throw new Error(\"Could not determine subscription key from endpoint\");\n        }\n        return langModelImp;\n    }\n    /**\n     * Creates an language understanding model using the application id of Language Understanding service.\n     * @member LanguageUnderstandingModel.fromAppId\n     * @function\n     * @public\n     * @param {string} appId - A String that represents the application id of Language Understanding service.\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n    static fromAppId(appId) {\n        Contracts.throwIfNullOrWhitespace(appId, \"appId\");\n        const langModelImp = new LanguageUnderstandingModelImpl();\n        langModelImp.appId = appId;\n        return langModelImp;\n    }\n    /**\n     * Creates a language understanding model using hostname, subscription key and application\n     * id of Language Understanding service.\n     * @member LanguageUnderstandingModel.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - A String that represents the subscription key of\n     *        Language Understanding service.\n     * @param {string} appId - A String that represents the application id of Language\n     *        Understanding service.\n     * @param {LanguageUnderstandingModel} region - A String that represents the region\n     *        of the Language Understanding service (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\n     */\n    static fromSubscription(subscriptionKey, appId, region) {\n        Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n        Contracts.throwIfNullOrWhitespace(appId, \"appId\");\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const langModelImp = new LanguageUnderstandingModelImpl();\n        langModelImp.appId = appId;\n        langModelImp.region = region;\n        langModelImp.subscriptionKey = subscriptionKey;\n        return langModelImp;\n    }\n}\n/**\n * @private\n * @class LanguageUnderstandingModelImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class LanguageUnderstandingModelImpl extends LanguageUnderstandingModel {\n}\n\n//# sourceMappingURL=LanguageUnderstandingModel.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ForceDictationPropertyName, OutputFormatPropertyName, ServicePropertiesPropertyName } from \"../common.speech/Exports\";\nimport { Contracts } from \"./Contracts\";\nimport { OutputFormat, ProfanityOption, PropertyCollection, PropertyId, SpeechConfig, SpeechSynthesisOutputFormat, } from \"./Exports\";\n/**\n * Speech translation configuration.\n * @class SpeechTranslationConfig\n */\nexport class SpeechTranslationConfig extends SpeechConfig {\n    /**\n     * Creates an instance of recognizer config.\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Static instance of SpeechTranslationConfig returned by passing a subscription key and service region.\n     * @member SpeechTranslationConfig.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - The subscription key.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechTranslationConfig} The speech translation config.\n     */\n    static fromSubscription(subscriptionKey, region) {\n        Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const ret = new SpeechTranslationConfigImpl();\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Region, region);\n        return ret;\n    }\n    /**\n     * Static instance of SpeechTranslationConfig returned by passing authorization token and service region.\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\n     *       expires, the caller needs to refresh it by setting the property authorizationToken with a new\n     *       valid token. Otherwise, all the recognizers created by this SpeechTranslationConfig instance\n     *       will encounter errors during recognition.\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply\n     * to recognizers that have already been created.\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\n     * @member SpeechTranslationConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param {string} authorizationToken - The authorization token.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechTranslationConfig} The speech translation config.\n     */\n    static fromAuthorizationToken(authorizationToken, region) {\n        Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const ret = new SpeechTranslationConfigImpl();\n        ret.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Region, region);\n        return ret;\n    }\n    /**\n     * Creates an instance of the speech config with specified host and subscription key.\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\n     * Note: Added in version 1.9.0.\n     * @member SpeechConfig.fromHost\n     * @function\n     * @public\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n    static fromHost(hostName, subscriptionKey) {\n        Contracts.throwIfNull(hostName, \"hostName\");\n        const speechImpl = new SpeechTranslationConfigImpl();\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\n        if (undefined !== subscriptionKey) {\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        }\n        return speechImpl;\n    }\n    /**\n     * Creates an instance of the speech translation config with specified endpoint and subscription key.\n     * This method is intended only for users who use a non-standard service endpoint or paramters.\n     * Note: The query properties specified in the endpoint URL are not changed, even if they are\n     *       set by any other APIs. For example, if language is defined in the uri as query parameter\n     *       \"language=de-DE\", and also set by the speechRecognitionLanguage property, the language\n     *       setting in uri takes precedence, and the effective language is \"de-DE\".\n     * Only the properties that are not specified in the endpoint URL can be set by other APIs.\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\n     *       fromEndpoint method, and then set authorizationToken=\"token\" on the created SpeechConfig instance to\n     *       use the authorization token.\n     * @member SpeechTranslationConfig.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} endpoint - The service endpoint to connect to.\n     * @param {string} subscriptionKey - The subscription key.\n     * @returns {SpeechTranslationConfig} A speech config instance.\n     */\n    static fromEndpoint(endpoint, subscriptionKey) {\n        Contracts.throwIfNull(endpoint, \"endpoint\");\n        Contracts.throwIfNull(subscriptionKey, \"subscriptionKey\");\n        const ret = new SpeechTranslationConfigImpl();\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        return ret;\n    }\n}\n/**\n * @private\n * @class SpeechTranslationConfigImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class SpeechTranslationConfigImpl extends SpeechTranslationConfig {\n    constructor() {\n        super();\n        this.privSpeechProperties = new PropertyCollection();\n        this.outputFormat = OutputFormat.Simple;\n    }\n    /**\n     * Gets/Sets the authorization token.\n     * If this is set, subscription key is ignored.\n     * User needs to make sure the provided authorization token is valid and not expired.\n     * @member SpeechTranslationConfigImpl.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} value - The authorization token.\n     */\n    set authorizationToken(value) {\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\n    }\n    /**\n     * Sets the speech recognition language.\n     * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @param {string} value - The authorization token.\n     */\n    set speechRecognitionLanguage(value) {\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_RecoLanguage, value);\n    }\n    /**\n     * Gets the speech recognition language.\n     * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @return {string} The speechRecognitionLanguage.\n     */\n    get speechRecognitionLanguage() {\n        return this.privSpeechProperties.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\n    }\n    /**\n     * @member SpeechTranslationConfigImpl.prototype.subscriptionKey\n     * @function\n     * @public\n     */\n    get subscriptionKey() {\n        return this.privSpeechProperties.getProperty(PropertyId[PropertyId.SpeechServiceConnection_Key]);\n    }\n    /**\n     * Gets the output format\n     * @member SpeechTranslationConfigImpl.prototype.outputFormat\n     * @function\n     * @public\n     */\n    get outputFormat() {\n        return OutputFormat[this.privSpeechProperties.getProperty(OutputFormatPropertyName, undefined)];\n    }\n    /**\n     * Gets/Sets the output format\n     * @member SpeechTranslationConfigImpl.prototype.outputFormat\n     * @function\n     * @public\n     */\n    set outputFormat(value) {\n        this.privSpeechProperties.setProperty(OutputFormatPropertyName, OutputFormat[value]);\n    }\n    /**\n     * Gets the endpoint id.\n     * @member SpeechTranslationConfigImpl.prototype.endpointId\n     * @function\n     * @public\n     */\n    get endpointId() {\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_EndpointId);\n    }\n    /**\n     * Gets/Sets the endpoint id.\n     * @member SpeechTranslationConfigImpl.prototype.endpointId\n     * @function\n     * @public\n     */\n    set endpointId(value) {\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_EndpointId, value);\n    }\n    /**\n     * Add a (text) target language to translate into.\n     * @member SpeechTranslationConfigImpl.prototype.addTargetLanguage\n     * @function\n     * @public\n     * @param {string} value - The language such as de-DE\n     */\n    addTargetLanguage(value) {\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\n        const languages = this.targetLanguages;\n        languages.push(value);\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\n    }\n    /**\n     * Gets the (text) target language to translate into.\n     * @member SpeechTranslationConfigImpl.prototype.targetLanguages\n     * @function\n     * @public\n     * @param {string} value - The language such as de-DE\n     */\n    get targetLanguages() {\n        if (this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\n            return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n        }\n        else {\n            return [];\n        }\n    }\n    /**\n     * Gets the voice name.\n     * @member SpeechTranslationConfigImpl.prototype.voiceName\n     * @function\n     * @public\n     */\n    get voiceName() {\n        return this.getProperty(PropertyId[PropertyId.SpeechServiceConnection_TranslationVoice]);\n    }\n    /**\n     * Gets/Sets the voice of the translated language, enable voice synthesis output.\n     * @member SpeechTranslationConfigImpl.prototype.voiceName\n     * @function\n     * @public\n     * @param {string} value - The name of the voice.\n     */\n    set voiceName(value) {\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_TranslationVoice, value);\n    }\n    /**\n     * Provides the region.\n     * @member SpeechTranslationConfigImpl.prototype.region\n     * @function\n     * @public\n     * @returns {string} The region.\n     */\n    get region() {\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_Region);\n    }\n    setProxy(proxyHostName, proxyPort, proxyUserName, proxyPassword) {\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName);\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPort], proxyPort);\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName);\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword);\n    }\n    /**\n     * Gets an arbitrary property value.\n     * @member SpeechTranslationConfigImpl.prototype.getProperty\n     * @function\n     * @public\n     * @param {string} name - The name of the property.\n     * @param {string} def - The default value of the property in case it is not set.\n     * @returns {string} The value of the property.\n     */\n    getProperty(name, def) {\n        return this.privSpeechProperties.getProperty(name, def);\n    }\n    /**\n     * Gets/Sets an arbitrary property value.\n     * @member SpeechTranslationConfigImpl.prototype.setProperty\n     * @function\n     * @public\n     * @param {string} name - The name of the property.\n     * @param {string} value - The value of the property.\n     */\n    setProperty(name, value) {\n        this.privSpeechProperties.setProperty(name, value);\n    }\n    /**\n     * Provides access to custom properties.\n     * @member SpeechTranslationConfigImpl.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The properties.\n     */\n    get properties() {\n        return this.privSpeechProperties;\n    }\n    /**\n     * Dispose of associated resources.\n     * @member SpeechTranslationConfigImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        return;\n    }\n    setServiceProperty(name, value, channel) {\n        const currentProperties = JSON.parse(this.privSpeechProperties.getProperty(ServicePropertiesPropertyName, \"{}\"));\n        currentProperties[name] = value;\n        this.privSpeechProperties.setProperty(ServicePropertiesPropertyName, JSON.stringify(currentProperties));\n    }\n    setProfanity(profanity) {\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceResponse_ProfanityOption, ProfanityOption[profanity]);\n    }\n    enableAudioLogging() {\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\n    }\n    requestWordLevelTimestamps() {\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\n    }\n    enableDictation() {\n        this.privSpeechProperties.setProperty(ForceDictationPropertyName, \"true\");\n    }\n    get speechSynthesisLanguage() {\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage);\n    }\n    set speechSynthesisLanguage(language) {\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_SynthLanguage, language);\n    }\n    get speechSynthesisVoiceName() {\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice);\n    }\n    set speechSynthesisVoiceName(voice) {\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_SynthVoice, voice);\n    }\n    get speechSynthesisOutputFormat() {\n        return SpeechSynthesisOutputFormat[this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)];\n    }\n    set speechSynthesisOutputFormat(format) {\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, SpeechSynthesisOutputFormat[format]);\n    }\n}\n\n//# sourceMappingURL=SpeechTranslationConfig.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AddedLmIntent, IntentConnectionFactory, IntentServiceRecognizer, RecognitionMode, RecognizerConfig, } from \"../common.speech/Exports\";\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\nimport { Contracts } from \"./Contracts\";\nimport { PropertyId, Recognizer, } from \"./Exports\";\n/**\n * Intent recognizer.\n * @class\n */\nexport class IntentRecognizer extends Recognizer {\n    /**\n     * Initializes an instance of the IntentRecognizer.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - The set of configuration properties.\n     * @param {AudioConfig} audioConfig - An optional audio input config associated with the recognizer\n     */\n    constructor(speechConfig, audioConfig) {\n        Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\n        const configImpl = speechConfig;\n        Contracts.throwIfNullOrUndefined(configImpl, \"speechConfig\");\n        super(audioConfig, configImpl.properties, new IntentConnectionFactory());\n        this.privAddedIntents = [];\n        this.privAddedLmIntents = {};\n        this.privDisposedIntentRecognizer = false;\n        this.privProperties = configImpl.properties;\n        Contracts.throwIfNullOrWhitespace(this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage), PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\n    }\n    /**\n     * Gets the spoken language of recognition.\n     * @member IntentRecognizer.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} the spoken language of recognition.\n     */\n    get speechRecognitionLanguage() {\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member IntentRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key for the Intent recognizer.\n     * @member IntentRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} value - Authorization token.\n     */\n    set authorizationToken(value) {\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\n    }\n    /**\n     * The collection of properties and their values defined for this IntentRecognizer.\n     * @member IntentRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their\n     *          values defined for this IntentRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Starts intent recognition, and stops after the first utterance is recognized.\n     * The task returns the recognition text and intent as result.\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\n     *       so it is suitable only for single shot recognition like command or query.\n     *       For long-running recognition, use StartContinuousRecognitionAsync() instead.\n     * @member IntentRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the recognition has finished with an IntentRecognitionResult.\n     * @param err - Callback invoked in case of an error.\n     */\n    recognizeOnceAsync(cb, err) {\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\n            const context = this.buildSpeechContext();\n            this.privReco.speechContext.setSection(\"intent\", context.Intent);\n            this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\n            const intentReco = this.privReco;\n            intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\n        }\n        marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(RecognitionMode.Interactive), cb, err);\n    }\n    /**\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * @member IntentRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startContinuousRecognitionAsync(cb, err) {\n        if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\n            const context = this.buildSpeechContext();\n            this.privReco.speechContext.setSection(\"intent\", context.Intent);\n            this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\n            const intentReco = this.privReco;\n            intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\n        }\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\n    }\n    /**\n     * Stops continuous intent recognition.\n     * @member IntentRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopContinuousRecognitionAsync(cb, err) {\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    /**\n     * Starts speech recognition with keyword spotting, until stopKeywordRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\n     *       This functionality is currently not included in the SDK itself.\n     * @member IntentRecognizer.prototype.startKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param {KeywordRecognitionModel} model - The keyword recognition model that specifies the keyword to be recognized.\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startKeywordRecognitionAsync(model, cb, err) {\n        Contracts.throwIfNull(model, \"model\");\n        if (!!err) {\n            err(\"Not yet implemented.\");\n        }\n    }\n    /**\n     * Stops continuous speech recognition.\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\n     *       This functionality is currently not included in the SDK itself.\n     * @member IntentRecognizer.prototype.stopKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopKeywordRecognitionAsync(cb, err) {\n        if (!!cb) {\n            cb();\n        }\n    }\n    /**\n     * Adds a phrase that should be recognized as intent.\n     * @member IntentRecognizer.prototype.addIntent\n     * @function\n     * @public\n     * @param {string} intentId - A String that represents the identifier of the intent to be recognized.\n     * @param {string} phrase - A String that specifies the phrase representing the intent.\n     */\n    addIntent(simplePhrase, intentId) {\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\n        Contracts.throwIfNullOrWhitespace(simplePhrase, \"simplePhrase\");\n        this.privAddedIntents.push([intentId, simplePhrase]);\n    }\n    /**\n     * Adds an intent from Language Understanding service for recognition.\n     * @member IntentRecognizer.prototype.addIntentWithLanguageModel\n     * @function\n     * @public\n     * @param {string} intentId - A String that represents the identifier of the intent\n     *        to be recognized. Ignored if intentName is empty.\n     * @param {string} model - The intent model from Language Understanding service.\n     * @param {string} intentName - The intent name defined in the intent model. If it\n     *        is empty, all intent names defined in the model will be added.\n     */\n    addIntentWithLanguageModel(intentId, model, intentName) {\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\n        Contracts.throwIfNull(model, \"model\");\n        const modelImpl = model;\n        Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\n        this.privAddedLmIntents[intentId] = new AddedLmIntent(modelImpl, intentName);\n    }\n    /**\n     * @summary Adds all intents from the specified Language Understanding Model.\n     * @member IntentRecognizer.prototype.addAllIntents\n     * @function\n     * @public\n     * @function\n     * @public\n     * @param {LanguageUnderstandingModel} model - The language understanding model containing the intents.\n     * @param {string} intentId - A custom id String to be returned in the IntentRecognitionResult's getIntentId() method.\n     */\n    addAllIntents(model, intentId) {\n        Contracts.throwIfNull(model, \"model\");\n        const modelImpl = model;\n        Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\n        this.privUmbrellaIntent = new AddedLmIntent(modelImpl, intentId);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member IntentRecognizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\n    }\n    createRecognizerConfig(speechConfig) {\n        return new RecognizerConfig(speechConfig, this.properties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioImpl = audioConfig;\n        return new IntentServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\n    }\n    dispose(disposing) {\n        const _super = Object.create(null, {\n            dispose: { get: () => super.dispose }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.privDisposedIntentRecognizer) {\n                return;\n            }\n            if (disposing) {\n                this.privDisposedIntentRecognizer = true;\n                yield _super.dispose.call(this, disposing);\n            }\n        });\n    }\n    buildSpeechContext() {\n        let appId;\n        let region;\n        let subscriptionKey;\n        const refGrammers = [];\n        if (undefined !== this.privUmbrellaIntent) {\n            appId = this.privUmbrellaIntent.modelImpl.appId;\n            region = this.privUmbrellaIntent.modelImpl.region;\n            subscriptionKey = this.privUmbrellaIntent.modelImpl.subscriptionKey;\n        }\n        // Build the reference grammer array.\n        for (const intentId of Object.keys(this.privAddedLmIntents)) {\n            const addedLmIntent = this.privAddedLmIntents[intentId];\n            // validate all the same model, region, and key...\n            if (appId === undefined) {\n                appId = addedLmIntent.modelImpl.appId;\n            }\n            else {\n                if (appId !== addedLmIntent.modelImpl.appId) {\n                    throw new Error(\"Intents must all be from the same LUIS model\");\n                }\n            }\n            if (region === undefined) {\n                region = addedLmIntent.modelImpl.region;\n            }\n            else {\n                if (region !== addedLmIntent.modelImpl.region) {\n                    throw new Error(\"Intents must all be from the same LUIS model in a single region\");\n                }\n            }\n            if (subscriptionKey === undefined) {\n                subscriptionKey = addedLmIntent.modelImpl.subscriptionKey;\n            }\n            else {\n                if (subscriptionKey !== addedLmIntent.modelImpl.subscriptionKey) {\n                    throw new Error(\"Intents must all use the same subscription key\");\n                }\n            }\n            const grammer = \"luis/\" + appId + \"-PRODUCTION#\" + intentId;\n            refGrammers.push(grammer);\n        }\n        return {\n            Intent: {\n                id: appId,\n                key: (subscriptionKey === undefined) ? this.privProperties.getProperty(PropertyId[PropertyId.SpeechServiceConnection_Key]) : subscriptionKey,\n                provider: \"LUIS\",\n            },\n            ReferenceGrammars: (undefined === this.privUmbrellaIntent) ? refGrammers : [\"luis/\" + appId + \"-PRODUCTION\"],\n        };\n    }\n}\n\n//# sourceMappingURL=IntentRecognizer.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { RecognitionMode, RecognizerConfig, TranslationConnectionFactory, TranslationServiceRecognizer, } from \"../common.speech/Exports\";\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\nimport { Contracts } from \"./Contracts\";\nimport { PropertyId, Recognizer, } from \"./Exports\";\n/**\n * Translation recognizer\n * @class TranslationRecognizer\n */\nexport class TranslationRecognizer extends Recognizer {\n    /**\n     * Initializes an instance of the TranslationRecognizer.\n     * @constructor\n     * @param {SpeechTranslationConfig} speechConfig - Set of properties to configure this recognizer.\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\n     */\n    constructor(speechConfig, audioConfig) {\n        const configImpl = speechConfig;\n        Contracts.throwIfNull(configImpl, \"speechConfig\");\n        super(audioConfig, configImpl.properties, new TranslationConnectionFactory());\n        this.privDisposedTranslationRecognizer = false;\n        this.privProperties = configImpl.properties.clone();\n        if (this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice, undefined) !== undefined) {\n            Contracts.throwIfNullOrWhitespace(this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice), PropertyId[PropertyId.SpeechServiceConnection_TranslationVoice]);\n        }\n        Contracts.throwIfNullOrWhitespace(this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages), PropertyId[PropertyId.SpeechServiceConnection_TranslationToLanguages]);\n        Contracts.throwIfNullOrWhitespace(this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage), PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\n    }\n    /**\n     * Gets the language name that was set when the recognizer was created.\n     * @member TranslationRecognizer.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} Gets the language name that was set when the recognizer was created.\n     */\n    get speechRecognitionLanguage() {\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * Gets target languages for translation that were set when the recognizer was created.\n     * The language is specified in BCP-47 format. The translation will provide translated text for each of language.\n     * @member TranslationRecognizer.prototype.targetLanguages\n     * @function\n     * @public\n     * @returns {string[]} Gets target languages for translation that were set when the recognizer was created.\n     */\n    get targetLanguages() {\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\n    }\n    /**\n     * Gets the name of output voice.\n     * @member TranslationRecognizer.prototype.voiceName\n     * @function\n     * @public\n     * @returns {string} the name of output voice.\n     */\n    get voiceName() {\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member TranslationRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member TranslationRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} value - Authorization token.\n     */\n    set authorizationToken(value) {\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\n    }\n    /**\n     * The collection of properties and their values defined for this TranslationRecognizer.\n     * @member TranslationRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this TranslationRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Starts recognition and translation, and stops after the first utterance is recognized.\n     * The task returns the translation text as result.\n     * Note: recognizeOnceAsync returns when the first utterance has been recognized, so it is suitableonly\n     *       for single shot recognition like command or query. For long-running recognition,\n     *       use startContinuousRecognitionAsync() instead.\n     * @member TranslationRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the result when the translation has completed.\n     * @param err - Callback invoked in case of an error.\n     */\n    recognizeOnceAsync(cb, err) {\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(RecognitionMode.Conversation), cb, err);\n    }\n    /**\n     * Starts recognition and translation, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive translation results.\n     * @member TranslationRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the translation has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startContinuousRecognitionAsync(cb, err) {\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\n    }\n    /**\n     * Stops continuous recognition and translation.\n     * @member TranslationRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the translation has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopContinuousRecognitionAsync(cb, err) {\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member TranslationRecognizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\n    }\n    dispose(disposing) {\n        const _super = Object.create(null, {\n            dispose: { get: () => super.dispose }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.privDisposedTranslationRecognizer) {\n                return;\n            }\n            this.privDisposedTranslationRecognizer = true;\n            if (disposing) {\n                yield this.implRecognizerStop();\n                yield _super.dispose.call(this, disposing);\n            }\n        });\n    }\n    createRecognizerConfig(speechConfig) {\n        return new RecognizerConfig(speechConfig, this.properties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const configImpl = audioConfig;\n        return new TranslationServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    }\n}\n\n//# sourceMappingURL=TranslationRecognizer.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Defines the possible reasons a recognition result might not be recognized.\n * @class NoMatchReason\n */\nexport var NoMatchReason;\n(function (NoMatchReason) {\n    /**\n     * Indicates that speech was detected, but not recognized.\n     * @member NoMatchReason.NotRecognized\n     */\n    NoMatchReason[NoMatchReason[\"NotRecognized\"] = 0] = \"NotRecognized\";\n    /**\n     * Indicates that the start of the audio stream contained only silence,\n     * and the service timed out waiting for speech.\n     * @member NoMatchReason.InitialSilenceTimeout\n     */\n    NoMatchReason[NoMatchReason[\"InitialSilenceTimeout\"] = 1] = \"InitialSilenceTimeout\";\n    /**\n     * Indicates that the start of the audio stream contained only noise,\n     * and the service timed out waiting for speech.\n     * @member NoMatchReason.InitialBabbleTimeout\n     */\n    NoMatchReason[NoMatchReason[\"InitialBabbleTimeout\"] = 2] = \"InitialBabbleTimeout\";\n})(NoMatchReason || (NoMatchReason = {}));\n\n//# sourceMappingURL=NoMatchReason.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RecognitionStatus, SimpleSpeechPhrase } from \"../../src/common.speech/Exports\";\nimport { NoMatchReason } from \"./Exports\";\n/**\n * Contains detailed information for NoMatch recognition results.\n * @class NoMatchDetails\n */\nexport class NoMatchDetails {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {NoMatchReason} reason - The no-match reason.\n     */\n    constructor(reason) {\n        this.privReason = reason;\n    }\n    /**\n     * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\n     * @member NoMatchDetails.fromResult\n     * @function\n     * @public\n     * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult}\n     *        result - The recognition result that was not recognized.\n     * @returns {NoMatchDetails} The no match details object being created.\n     */\n    static fromResult(result) {\n        const simpleSpeech = SimpleSpeechPhrase.fromJSON(result.json);\n        let reason = NoMatchReason.NotRecognized;\n        switch (simpleSpeech.RecognitionStatus) {\n            case RecognitionStatus.BabbleTimeout:\n                reason = NoMatchReason.InitialBabbleTimeout;\n                break;\n            case RecognitionStatus.InitialSilenceTimeout:\n                reason = NoMatchReason.InitialSilenceTimeout;\n                break;\n            default:\n                reason = NoMatchReason.NotRecognized;\n                break;\n        }\n        return new NoMatchDetails(reason);\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member NoMatchDetails.prototype.reason\n     * @function\n     * @public\n     * @returns {NoMatchReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privReason;\n    }\n}\n\n//# sourceMappingURL=NoMatchDetails.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Contains detailed information about why a result was canceled.\n * @class CancellationDetailsBase\n */\nexport class CancellationDetailsBase {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} reason - The cancellation reason.\n     * @param {string} errorDetails - The error details, if provided.\n     */\n    constructor(reason, errorDetails, errorCode) {\n        this.privReason = reason;\n        this.privErrorDetails = errorDetails;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member CancellationDetailsBase.prototype.reason\n     * @function\n     * @public\n     * @returns {CancellationReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * In case of an unsuccessful recognition, provides details of the occurred error.\n     * @member CancellationDetailsBase.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} A String that represents the error details.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    /**\n     * The error code in case of an unsuccessful recognition.\n     * Added in version 1.1.0.\n     * @return An error code that represents the error reason.\n     */\n    get ErrorCode() {\n        return this.privErrorCode;\n    }\n}\n\n//# sourceMappingURL=CancellationDetailsBase.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { CancellationErrorCodePropertyName, EnumTranslation, SimpleSpeechPhrase } from \"../common.speech/Exports\";\nimport { CancellationDetailsBase } from \"./CancellationDetailsBase\";\nimport { CancellationErrorCode, CancellationReason, RecognitionResult } from \"./Exports\";\n/**\n * Contains detailed information about why a result was canceled.\n * @class CancellationDetails\n */\nexport class CancellationDetails extends CancellationDetailsBase {\n    constructor(reason, errorDetails, errorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n    /**\n     * Creates an instance of CancellationDetails object for the canceled RecognitionResult.\n     * @member CancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {RecognitionResult | SpeechSynthesisResult} result - The result that was canceled.\n     * @returns {CancellationDetails} The cancellation details object being created.\n     */\n    static fromResult(result) {\n        let reason = CancellationReason.Error;\n        let errorCode = CancellationErrorCode.NoError;\n        if (result instanceof RecognitionResult && !!result.json) {\n            const simpleSpeech = SimpleSpeechPhrase.fromJSON(result.json);\n            reason = EnumTranslation.implTranslateCancelResult(simpleSpeech.RecognitionStatus);\n        }\n        if (!!result.properties) {\n            errorCode = CancellationErrorCode[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])];\n        }\n        return new CancellationDetails(reason, result.errorDetails, errorCode);\n    }\n}\n\n//# sourceMappingURL=CancellationDetails.js.map\n","//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nimport { SessionEventArgs } from \"./Exports\";\n/**\n * Defines payload for connection events like Connected/Disconnected.\n * Added in version 1.2.0\n */\nexport class ConnectionEventArgs extends SessionEventArgs {\n}\n\n//# sourceMappingURL=ConnectionEventArgs.js.map\n","//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nimport { SessionEventArgs } from \"./Exports\";\n/**\n * Defines payload for any Service message event\n * Added in version 1.9.0\n */\nexport class ServiceEventArgs extends SessionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} json - json payload of the USP message.\n     */\n    constructor(json, name, sessionId) {\n        super(sessionId);\n        this.privJsonResult = json;\n        this.privEventName = name;\n    }\n    get jsonString() {\n        return this.privJsonResult;\n    }\n    get eventName() {\n        return this.privEventName;\n    }\n}\n\n//# sourceMappingURL=ServiceEventArgs.js.map\n","//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nimport { MessageType } from \"../common/Exports\";\nimport { PropertyCollection } from \"./PropertyCollection\";\nimport { PropertyId } from \"./PropertyId\";\n/**\n * ConnectionMessage represents implementation specific messages sent to and received from\n * the speech service. These messages are provided for debugging purposes and should not\n * be used for production use cases with the Azure Cognitive Services Speech Service.\n * Messages sent to and received from the Speech Service are subject to change without\n * notice. This includes message contents, headers, payloads, ordering, etc.\n * Added in version 1.11.0.\n */\nexport class ConnectionMessage {\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class ConnectionMessageImpl {\n    constructor(message) {\n        this.privConnectionMessage = message;\n        this.privProperties = new PropertyCollection();\n        if (!!this.privConnectionMessage.headers[\"X-ConnectionId\"]) {\n            this.privProperties.setProperty(PropertyId.Speech_SessionId, this.privConnectionMessage.headers[\"X-ConnectionId\"]);\n        }\n        Object.keys(this.privConnectionMessage.headers).forEach((header, index, array) => {\n            this.privProperties.setProperty(header, this.privConnectionMessage.headers[header]);\n        });\n    }\n    /**\n     * The message path.\n     */\n    get path() {\n        return this.privConnectionMessage.headers[Object.keys(this.privConnectionMessage.headers).find((key) => key.toLowerCase() === \"path\".toLowerCase())];\n    }\n    /**\n     * Checks to see if the ConnectionMessage is a text message.\n     * See also IsBinaryMessage().\n     */\n    get isTextMessage() {\n        return this.privConnectionMessage.messageType === MessageType.Text;\n    }\n    /**\n     * Checks to see if the ConnectionMessage is a binary message.\n     * See also GetBinaryMessage().\n     */\n    get isBinaryMessage() {\n        return this.privConnectionMessage.messageType === MessageType.Binary;\n    }\n    /**\n     * Gets the text message payload. Typically the text message content-type is\n     * application/json. To determine other content-types use\n     * Properties.GetProperty(\"Content-Type\").\n     */\n    get TextMessage() {\n        return this.privConnectionMessage.textBody;\n    }\n    /**\n     * Gets the binary message payload.\n     */\n    get binaryMessage() {\n        return this.privConnectionMessage.binaryBody;\n    }\n    /**\n     * A collection of properties and their values defined for this <see cref=\"ConnectionMessage\"/>.\n     * Message headers can be accessed via this collection (e.g. \"Content-Type\").\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Returns a string that represents the connection message.\n     */\n    toString() {\n        return \"\";\n    }\n}\n\n//# sourceMappingURL=ConnectionMessage.js.map\n","//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nexport class ConnectionMessageEventArgs {\n    constructor(message) {\n        this.privConnectionMessage = message;\n    }\n    /**\n     * Gets the <see cref=\"ConnectionMessage\"/> associated with this <see cref=\"ConnectionMessageEventArgs\"/>.\n     */\n    get message() {\n        return this.privConnectionMessage;\n    }\n    /**\n     * Returns a string that represents the connection message event.\n     */\n    toString() {\n        return \"Message: \" + this.privConnectionMessage.toString();\n    }\n}\n\n//# sourceMappingURL=ConnectionMessageEventArgs.js.map\n","//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nimport { ServiceRecognizerBase, SynthesisAdapterBase, } from \"../common.speech/Exports\";\nimport { marshalPromiseToCallbacks, } from \"../common/Exports\";\nimport { ConnectionMessageImpl } from \"./ConnectionMessage\";\nimport { Contracts } from \"./Contracts\";\nimport { ConnectionEventArgs, ConnectionMessageEventArgs, ServiceEventArgs, } from \"./Exports\";\n/**\n * Connection is a proxy class for managing connection to the speech service of the specified Recognizer.\n * By default, a Recognizer autonomously manages connection to service when needed.\n * The Connection class provides additional methods for users to explicitly open or close a connection and\n * to subscribe to connection status changes.\n * The use of Connection is optional, and mainly for scenarios where fine tuning of application\n * behavior based on connection status is needed. Users can optionally call Open() to manually set up a connection\n * in advance before starting recognition on the Recognizer associated with this Connection.\n * If the Recognizer needs to connect or disconnect to service, it will\n * setup or shutdown the connection independently. In this case the Connection will be notified by change of connection\n * status via Connected/Disconnected events.\n * Added in version 1.2.1.\n */\nexport class Connection {\n    /**\n     * Gets the Connection instance from the specified recognizer.\n     * @param recognizer The recognizer associated with the connection.\n     * @return The Connection instance of the recognizer.\n     */\n    static fromRecognizer(recognizer) {\n        const recoBase = recognizer.internalData;\n        const ret = new Connection();\n        ret.privInternalData = recoBase;\n        ret.setupEvents();\n        return ret;\n    }\n    /**\n     * Gets the Connection instance from the specified synthesizer.\n     * @param synthesizer The synthesizer associated with the connection.\n     * @return The Connection instance of the synthesizer.\n     */\n    static fromSynthesizer(synthesizer) {\n        const synthBase = synthesizer.internalData;\n        const ret = new Connection();\n        ret.privInternalData = synthBase;\n        ret.setupEvents();\n        return ret;\n    }\n    /**\n     * Starts to set up connection to the service.\n     * Users can optionally call openConnection() to manually set up a connection in advance before starting recognition on the\n     * Recognizer associated with this Connection. After starting recognition, calling Open() will have no effect\n     *\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\n     * be notified when the connection is established.\n     */\n    openConnection(cb, err) {\n        marshalPromiseToCallbacks(this.privInternalData.connect(), cb, err);\n    }\n    /**\n     * Closes the connection the service.\n     * Users can optionally call closeConnection() to manually shutdown the connection of the associated Recognizer.\n     *\n     * If closeConnection() is called during recognition, recognition will fail and cancel with an error.\n     */\n    closeConnection(cb, err) {\n        if (this.privInternalData instanceof SynthesisAdapterBase) {\n            throw new Error(\"Disconnecting a synthesizer's connection is currently not supported\");\n        }\n        else {\n            marshalPromiseToCallbacks(this.privInternalData.disconnect(), cb, err);\n        }\n    }\n    /**\n     * Appends a parameter in a message to service.\n     * Added in version 1.12.1.\n     * @param path The path of the network message.\n     * @param propertyName Name of the property\n     * @param propertyValue Value of the property. This is a json string.\n     */\n    setMessageProperty(path, propertyName, propertyValue) {\n        Contracts.throwIfNullOrWhitespace(propertyName, \"propertyName\");\n        if (this.privInternalData instanceof ServiceRecognizerBase) {\n            if (path.toLowerCase() !== \"speech.context\") {\n                throw new Error(\"Only speech.context message property sets are currently supported for recognizer\");\n            }\n            else {\n                this.privInternalData.speechContext.setSection(propertyName, propertyValue);\n            }\n        }\n        else if (this.privInternalData instanceof SynthesisAdapterBase) {\n            if (path.toLowerCase() !== \"synthesis.context\") {\n                throw new Error(\"Only synthesis.context message property sets are currently supported for synthesizer\");\n            }\n            else {\n                this.privInternalData.synthesisContext.setSection(propertyName, propertyValue);\n            }\n        }\n    }\n    /**\n     * Sends a message to the speech service.\n     * Added in version 1.13.0.\n     * @param path The WebSocket path of the message\n     * @param payload The payload of the message. This is a json string or a ArrayBuffer.\n     * @param success A callback to indicate success.\n     * @param error A callback to indicate an error.\n     */\n    sendMessageAsync(path, payload, success, error) {\n        marshalPromiseToCallbacks(this.privInternalData.sendNetworkMessage(path, payload), success, error);\n    }\n    /**\n     * Dispose of associated resources.\n     */\n    close() {\n        /* tslint:disable:no-empty */\n    }\n    setupEvents() {\n        this.privEventListener = this.privInternalData.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionEstablishedEvent\") {\n                if (!!this.connected) {\n                    this.connected(new ConnectionEventArgs(connectionEvent.connectionId));\n                }\n            }\n            else if (connectionEvent.name === \"ConnectionClosedEvent\") {\n                if (!!this.disconnected) {\n                    this.disconnected(new ConnectionEventArgs(connectionEvent.connectionId));\n                }\n            }\n            else if (connectionEvent.name === \"ConnectionMessageSentEvent\") {\n                if (!!this.messageSent) {\n                    this.messageSent(new ConnectionMessageEventArgs(new ConnectionMessageImpl(connectionEvent.message)));\n                }\n            }\n            else if (connectionEvent.name === \"ConnectionMessageReceivedEvent\") {\n                if (!!this.messageReceived) {\n                    this.messageReceived(new ConnectionMessageEventArgs(new ConnectionMessageImpl(connectionEvent.message)));\n                }\n            }\n        });\n        this.privServiceEventListener = this.privInternalData.serviceEvents.attach((e) => {\n            if (!!this.receivedServiceMessage) {\n                this.receivedServiceMessage(new ServiceEventArgs(e.jsonString, e.name));\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=Connection.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Allows additions of new phrases to improve speech recognition.\n *\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\n * to the speech service.\n */\nexport class PhraseListGrammar {\n    constructor(recogBase) {\n        this.privGrammerBuilder = recogBase.dynamicGrammar;\n    }\n    /**\n     * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\n     * @param recognizer The recognizer to add phrase lists to.\n     */\n    static fromRecognizer(recognizer) {\n        const recoBase = recognizer.internalData;\n        return new PhraseListGrammar(recoBase);\n    }\n    /**\n     * Adds a single phrase to the current recognizer.\n     * @param phrase Phrase to add.\n     */\n    addPhrase(phrase) {\n        this.privGrammerBuilder.addPhrase(phrase);\n    }\n    /**\n     * Adds multiple phrases to the current recognizer.\n     * @param phrases Array of phrases to add.\n     */\n    addPhrases(phrases) {\n        this.privGrammerBuilder.addPhrase(phrases);\n    }\n    /**\n     * Clears all phrases added to the current recognizer.\n     */\n    clear() {\n        this.privGrammerBuilder.clearPhrases();\n    }\n}\n\n//# sourceMappingURL=PhraseListGrammar.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\nimport { PropertyId, SpeechConfigImpl } from \"./Exports\";\n/**\n * Class that defines base configurations for dialog service connector\n * @class DialogServiceConfig\n */\nexport class DialogServiceConfig {\n    /**\n     * Creates an instance of DialogService config.\n     * @constructor\n     */\n    constructor() { }\n    /**\n     * Sets the corresponding backend application identifier.\n     * @member DialogServiceConfig.prototype.Conversation_ApplicationId\n     * @function\n     * @public\n     * @param {string} value - The application identifier to set.\n     */\n    // tslint:disable-next-line: no-empty\n    set applicationId(value) { }\n}\n/**\n * Dialog Service configuration.\n * @class DialogServiceConfigImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class DialogServiceConfigImpl extends DialogServiceConfig {\n    /**\n     * Creates an instance of dialogService config.\n     */\n    constructor() {\n        super();\n        this.privSpeechConfig = new SpeechConfigImpl();\n    }\n    /**\n     * Provides access to custom properties.\n     * @member DialogServiceConfigImpl.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The properties.\n     */\n    get properties() {\n        return this.privSpeechConfig.properties;\n    }\n    /**\n     * Gets the speech recognition language.\n     * @member DialogServiceConfigImpl.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     */\n    get speechRecognitionLanguage() {\n        return this.privSpeechConfig.speechRecognitionLanguage;\n    }\n    /**\n     * Sets the speech recognition language.\n     * @member DialogServiceConfigImpl.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @param {string} value - The language to set.\n     */\n    set speechRecognitionLanguage(value) {\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.privSpeechConfig.speechRecognitionLanguage = value;\n    }\n    get outputFormat() {\n        return this.privSpeechConfig.outputFormat;\n    }\n    set outputFormat(value) {\n        this.privSpeechConfig.outputFormat = value;\n    }\n    /**\n     * Sets a named property as value\n     * @member DialogServiceConfigImpl.prototype.setProperty\n     * @function\n     * @public\n     * @param {PropertyId | string} name - The property to set.\n     * @param {string} value - The value.\n     */\n    setProperty(name, value) {\n        this.privSpeechConfig.setProperty(name, value);\n    }\n    /**\n     * Sets a named property as value\n     * @member DialogServiceConfigImpl.prototype.getProperty\n     * @function\n     * @public\n     * @param {PropertyId | string} name - The property to get.\n     * @param {string} def - The default value to return in case the property is not known.\n     * @returns {string} The current value, or provided default, of the given property.\n     */\n    getProperty(name, def) {\n        return this.privSpeechConfig.getProperty(name);\n    }\n    /**\n     * Sets the proxy configuration.\n     * Only relevant in Node.js environments.\n     * Added in version 1.4.0.\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\n     * @param proxyPort The port number of the proxy server.\n     * @param proxyUserName The user name of the proxy server.\n     * @param proxyPassword The password of the proxy server.\n     */\n    setProxy(proxyHostName, proxyPort, proxyUserName, proxyPassword) {\n        this.setProperty(PropertyId.SpeechServiceConnection_ProxyHostName, proxyHostName);\n        this.setProperty(PropertyId.SpeechServiceConnection_ProxyPort, `${proxyPort}`);\n        if (proxyUserName) {\n            this.setProperty(PropertyId.SpeechServiceConnection_ProxyUserName, proxyUserName);\n        }\n        if (proxyPassword) {\n            this.setProperty(PropertyId.SpeechServiceConnection_ProxyPassword, proxyPassword);\n        }\n    }\n    setServiceProperty(name, value, channel) {\n        this.privSpeechConfig.setServiceProperty(name, value, channel);\n    }\n    /**\n     * Dispose of associated resources.\n     * @member DialogServiceConfigImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        return;\n    }\n}\n\n//# sourceMappingURL=DialogServiceConfig.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\nimport { DialogServiceConfigImpl } from \"./DialogServiceConfig\";\nimport { PropertyId } from \"./Exports\";\n/**\n * Class that defines configurations for the dialog service connector object for using a Bot Framework backend.\n * @class BotFrameworkConfig\n */\nexport class BotFrameworkConfig extends DialogServiceConfigImpl {\n    /**\n     * Creates an instance of BotFrameworkConfig.\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Creates an instance of the bot framework config with the specified subscription and region.\n     * @member BotFrameworkConfig.fromSubscription\n     * @function\n     * @public\n     * @param subscription Subscription key associated with the bot\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @param botId Optional, ID for using a specific bot.\n     * @returns {BotFrameworkConfig} A new bot framework config.\n     */\n    static fromSubscription(subscription, region, botId) {\n        Contracts.throwIfNullOrWhitespace(subscription, \"subscription\");\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const botFrameworkConfig = new DialogServiceConfigImpl();\n        botFrameworkConfig.setProperty(PropertyId.Conversation_DialogType, \"bot_framework\");\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscription);\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\n        if (botId) {\n            botFrameworkConfig.setProperty(PropertyId.Conversation_ApplicationId, botId);\n        }\n        return botFrameworkConfig;\n    }\n    /**\n     * Creates an instance of the bot framework config with the specified authorization token and region.\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created.\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\n     * @member BotFrameworkConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param authorizationToken The authorization token associated with the bot\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {BotFrameworkConfig} A new bot framework config.\n     */\n    static fromAuthorizationToken(authorizationToken, region) {\n        Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const botFrameworkConfig = new DialogServiceConfigImpl();\n        botFrameworkConfig.setProperty(PropertyId.Conversation_DialogType, \"bot_framework\");\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\n        return botFrameworkConfig;\n    }\n}\n\n//# sourceMappingURL=BotFrameworkConfig.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\nimport { DialogServiceConfigImpl } from \"./DialogServiceConfig\";\nimport { PropertyId } from \"./Exports\";\n/**\n * Class that defines configurations for the dialog service connector object for using a CustomCommands backend.\n * @class CustomCommandsConfig\n */\nexport class CustomCommandsConfig extends DialogServiceConfigImpl {\n    /**\n     * Creates an instance of CustomCommandsConfig.\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * Creates an instance of the bot framework config with the specified subscription and region.\n     * @member CustomCommandsConfig.fromSubscription\n     * @function\n     * @public\n     * @param applicationId Speech Commands application id.\n     * @param subscription Subscription key associated with the bot\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {CustomCommandsConfig} A new bot framework config.\n     */\n    static fromSubscription(applicationId, subscription, region) {\n        Contracts.throwIfNullOrWhitespace(applicationId, \"applicationId\");\n        Contracts.throwIfNullOrWhitespace(subscription, \"subscription\");\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const customCommandsConfig = new DialogServiceConfigImpl();\n        customCommandsConfig.setProperty(PropertyId.Conversation_DialogType, \"custom_commands\");\n        customCommandsConfig.setProperty(PropertyId.Conversation_ApplicationId, applicationId);\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscription);\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\n        return customCommandsConfig;\n    }\n    /**\n     * Creates an instance of the bot framework config with the specified Speech Commands application id, authorization token and region.\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created.\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\n     * @member CustomCommandsConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param applicationId Speech Commands application id.\n     * @param authorizationToken The authorization token associated with the application.\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {CustomCommandsConfig} A new speech commands config.\n     */\n    static fromAuthorizationToken(applicationId, authorizationToken, region) {\n        Contracts.throwIfNullOrWhitespace(applicationId, \"applicationId\");\n        Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const customCommandsConfig = new DialogServiceConfigImpl();\n        customCommandsConfig.setProperty(PropertyId.Conversation_DialogType, \"custom_commands\");\n        customCommandsConfig.setProperty(PropertyId.Conversation_ApplicationId, applicationId);\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\n        return customCommandsConfig;\n    }\n    /**\n     * Sets the corresponding backend application identifier.\n     * @member CustomCommandsConfig.prototype.Conversation_ApplicationId\n     * @function\n     * @public\n     * @param {string} value - The application identifier to set.\n     */\n    set applicationId(value) {\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\n        this.setProperty(PropertyId.Conversation_ApplicationId, value);\n    }\n    /**\n     * Gets the corresponding backend application identifier.\n     * @member CustomCommandsConfig.prototype.Conversation_ApplicationId\n     * @function\n     * @public\n     * @param {string} value - The application identifier to get.\n     */\n    get applicationId() {\n        return this.getProperty(PropertyId.Conversation_ApplicationId);\n    }\n}\n\n//# sourceMappingURL=CustomCommandsConfig.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ProxyInfo, WebsocketConnection, } from \"../common.browser/Exports\";\nimport { OutputFormatPropertyName } from \"../common.speech/Exports\";\nimport { OutputFormat, PropertyId } from \"../sdk/Exports\";\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase\";\nimport { WebsocketMessageFormatter } from \"./Exports\";\nimport { QueryParameterNames } from \"./QueryParameterNames\";\nconst baseUrl = \"convai.speech\";\nconst botFramework = {\n    authHeader: \"X-DLS-Secret\",\n    resourcePath: \"\",\n    version: \"v3\"\n};\nconst customCommands = {\n    authHeader: \"X-CommandsAppId\",\n    resourcePath: \"commands\",\n    version: \"v1\"\n};\nconst pathSuffix = \"api\";\nconst connectionID = \"connectionId\";\nfunction getDialogSpecificValues(dialogType) {\n    switch (dialogType) {\n        case \"custom_commands\": {\n            return customCommands;\n        }\n        case \"bot_framework\": {\n            return botFramework;\n        }\n    }\n    throw new Error(`Invalid dialog type '${dialogType}'`);\n}\nexport class DialogConnectionFactory extends ConnectionFactoryBase {\n    constructor() {\n        super(...arguments);\n        this.create = (config, authInfo, connectionId) => {\n            const applicationId = config.parameters.getProperty(PropertyId.Conversation_ApplicationId, \"\");\n            const dialogType = config.parameters.getProperty(PropertyId.Conversation_DialogType);\n            const region = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region);\n            const language = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, \"en-US\");\n            const queryParams = {};\n            queryParams[QueryParameterNames.LanguageParamName] = language;\n            queryParams[QueryParameterNames.FormatParamName] = config.parameters.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]).toLowerCase();\n            queryParams[connectionID] = connectionId;\n            const { resourcePath, version, authHeader } = getDialogSpecificValues(dialogType);\n            const headers = {};\n            if (authInfo.token != null && authInfo.token !== \"\") {\n                headers[authInfo.headerName] = authInfo.token;\n            }\n            if (applicationId !== \"\") {\n                headers[authHeader] = applicationId;\n            }\n            let endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, \"\");\n            if (endpoint === \"\") {\n                const hostSuffix = (region && region.toLowerCase().startsWith(\"china\")) ? \".azure.cn\" : \".microsoft.com\";\n                // ApplicationId is only required for CustomCommands, so we're using that to determine default endpoint\n                if (applicationId === \"\") {\n                    endpoint = `wss://${region}.${baseUrl}${hostSuffix}/${pathSuffix}/${version}`;\n                }\n                else {\n                    endpoint = `wss://${region}.${baseUrl}${hostSuffix}/${resourcePath}/${pathSuffix}/${version}`;\n                }\n            }\n            this.setCommonUrlParams(config, queryParams, endpoint);\n            return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), connectionId);\n        };\n    }\n}\n\n//# sourceMappingURL=DialogConnectorFactory.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DialogConnectionFactory } from \"../common.speech/DialogConnectorFactory\";\nimport { DialogServiceAdapter, RecognitionMode, RecognizerConfig, } from \"../common.speech/Exports\";\nimport { Deferred, marshalPromiseToCallbacks } from \"../common/Exports\";\nimport { Contracts } from \"./Contracts\";\nimport { Recognizer } from \"./Exports\";\nimport { PropertyId } from \"./PropertyId\";\nimport { SpeechSynthesisOutputFormat } from \"./SpeechSynthesisOutputFormat\";\n/**\n * Dialog Service Connector\n * @class DialogServiceConnector\n */\nexport class DialogServiceConnector extends Recognizer {\n    /**\n     * Initializes an instance of the DialogServiceConnector.\n     * @constructor\n     * @param {DialogServiceConfig} dialogConfig - Set of properties to configure this recognizer.\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\n     */\n    constructor(dialogConfig, audioConfig) {\n        const dialogServiceConfigImpl = dialogConfig;\n        Contracts.throwIfNull(dialogConfig, \"dialogConfig\");\n        super(audioConfig, dialogServiceConfigImpl.properties, new DialogConnectionFactory());\n        this.isTurnComplete = true;\n        this.privIsDisposed = false;\n        this.privProperties = dialogServiceConfigImpl.properties.clone();\n        const agentConfig = this.buildAgentConfig();\n        this.privReco.agentConfig.set(agentConfig);\n    }\n    /**\n     * Starts a connection to the service.\n     * Users can optionally call connect() to manually set up a connection in advance, before starting interactions.\n     *\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\n     * be notified when the connection is established.\n     * @member DialogServiceConnector.prototype.connect\n     * @function\n     * @public\n     */\n    connect(cb, err) {\n        marshalPromiseToCallbacks(this.privReco.connect(), cb, err);\n    }\n    /**\n     * Closes the connection the service.\n     * Users can optionally call disconnect() to manually shutdown the connection of the associated DialogServiceConnector.\n     *\n     * If disconnect() is called during a recognition, recognition will fail and cancel with an error.\n     */\n    disconnect(cb, err) {\n        marshalPromiseToCallbacks(this.privReco.disconnect(), cb, err);\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member DialogServiceConnector.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Sets the authorization token used to communicate with the service.\n     * @member DialogServiceConnector.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * The collection of properties and their values defined for this DialogServiceConnector.\n     * @member DialogServiceConnector.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this DialogServiceConnector.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /** Gets the template for the activity generated by service from speech.\n     * Properties from the template will be stamped on the generated activity.\n     * It can be empty\n     */\n    get speechActivityTemplate() {\n        return this.properties.getProperty(PropertyId.Conversation_Speech_Activity_Template);\n    }\n    /** Sets the template for the activity generated by service from speech.\n     * Properties from the template will be stamped on the generated activity.\n     * It can be null or empty.\n     * Note: it has to be a valid Json object.\n     */\n    set speechActivityTemplate(speechActivityTemplate) {\n        this.properties.setProperty(PropertyId.Conversation_Speech_Activity_Template, speechActivityTemplate);\n    }\n    /**\n     * Starts recognition and stops after the first utterance is recognized.\n     * @member DialogServiceConnector.prototype.listenOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the result when the reco has completed.\n     * @param err - Callback invoked in case of an error.\n     */\n    listenOnceAsync(cb, err) {\n        if (this.isTurnComplete) {\n            Contracts.throwIfDisposed(this.privIsDisposed);\n            const callbackHolder = () => __awaiter(this, void 0, void 0, function* () {\n                yield this.privReco.connect();\n                yield this.implRecognizerStop();\n                this.isTurnComplete = false;\n                const ret = new Deferred();\n                yield this.privReco.recognize(RecognitionMode.Conversation, ret.resolve, ret.reject);\n                const e = yield ret.promise;\n                yield this.implRecognizerStop();\n                return e;\n            });\n            const retPromise = callbackHolder();\n            retPromise.catch(() => {\n                // Destroy the recognizer.\n                /* tslint:disable:no-empty */ // We've done all we can here.\n                this.dispose(true).catch(() => { });\n            });\n            marshalPromiseToCallbacks(retPromise.finally(() => {\n                this.isTurnComplete = true;\n            }), cb, err);\n        }\n    }\n    sendActivityAsync(activity, cb, errCb) {\n        marshalPromiseToCallbacks(this.privReco.sendMessage(activity), cb, errCb);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member DialogServiceConnector.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, err) {\n        Contracts.throwIfDisposed(this.privIsDisposed);\n        marshalPromiseToCallbacks(this.dispose(true), cb, err);\n    }\n    dispose(disposing) {\n        const _super = Object.create(null, {\n            dispose: { get: () => super.dispose }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.privIsDisposed) {\n                return;\n            }\n            if (disposing) {\n                this.privIsDisposed = true;\n                yield this.implRecognizerStop();\n                yield _super.dispose.call(this, disposing);\n            }\n        });\n    }\n    createRecognizerConfig(speechConfig) {\n        return new RecognizerConfig(speechConfig, this.privProperties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioSource = audioConfig;\n        return new DialogServiceAdapter(authentication, connectionFactory, audioSource, recognizerConfig, this);\n    }\n    buildAgentConfig() {\n        const communicationType = this.properties.getProperty(\"Conversation_Communication_Type\", \"Default\");\n        return {\n            botInfo: {\n                commType: communicationType,\n                commandsCulture: undefined,\n                connectionId: this.properties.getProperty(PropertyId.Conversation_ApplicationId),\n                conversationId: this.properties.getProperty(PropertyId.Conversation_Conversation_Id, undefined),\n                fromId: this.properties.getProperty(PropertyId.Conversation_From_Id, undefined),\n                ttsAudioFormat: SpeechSynthesisOutputFormat[this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)]\n            },\n            version: 0.2\n        };\n    }\n}\n\n//# sourceMappingURL=DialogServiceConnector.js.map\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Defines channels used to pass property settings to service.\n * Added in version 1.7.0.\n */\nexport var ServicePropertyChannel;\n(function (ServicePropertyChannel) {\n    /**\n     * Uses URI query parameter to pass property settings to service.\n     */\n    ServicePropertyChannel[ServicePropertyChannel[\"UriQueryParameter\"] = 0] = \"UriQueryParameter\";\n})(ServicePropertyChannel || (ServicePropertyChannel = {}));\n\n//# sourceMappingURL=ServicePropertyChannel.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { InvalidOperationError } from \"../../common/Error\";\nimport { marshalPromiseToCallbacks } from \"../../common/Promise\";\nimport { AudioStreamFormat } from \"../Exports\";\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat\";\n/**\n * Base audio player class\n * TODO: Plays only PCM for now.\n * @class\n */\nexport class BaseAudioPlayer {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {AudioStreamFormat} audioFormat audio stream format recognized by the player.\n     */\n    constructor(audioFormat) {\n        this.audioContext = null;\n        this.gainNode = null;\n        this.autoUpdateBufferTimer = 0;\n        if (audioFormat === undefined) {\n            audioFormat = AudioStreamFormat.getDefaultInputFormat();\n        }\n        this.init(audioFormat);\n    }\n    /**\n     * play Audio sample\n     * @param newAudioData audio data to be played.\n     */\n    playAudioSample(newAudioData, cb, err) {\n        marshalPromiseToCallbacks((() => __awaiter(this, void 0, void 0, function* () {\n            if (!!window.webkitAudioContext) {\n                yield this.playAudio(newAudioData);\n            }\n            else {\n                this.ensureInitializedContext();\n                const audioData = this.formatAudioData(newAudioData);\n                const newSamplesData = new Float32Array(this.samples.length + audioData.length);\n                newSamplesData.set(this.samples, 0);\n                newSamplesData.set(audioData, this.samples.length);\n                this.samples = newSamplesData;\n            }\n        }))(), cb, err);\n    }\n    /**\n     * stops audio and clears the buffers\n     */\n    stopAudio(cb, err) {\n        if (this.audioContext !== null) {\n            this.samples = new Float32Array();\n            clearInterval(this.autoUpdateBufferTimer);\n            this.audioContext.close().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n            this.audioContext = null;\n        }\n    }\n    init(audioFormat) {\n        this.audioFormat = audioFormat;\n        this.samples = new Float32Array();\n    }\n    ensureInitializedContext() {\n        if (this.audioContext === null) {\n            this.createAudioContext();\n            const timerPeriod = 200;\n            this.autoUpdateBufferTimer = setInterval(() => {\n                this.updateAudioBuffer();\n            }, timerPeriod);\n        }\n    }\n    createAudioContext() {\n        // new ((window as any).AudioContext || (window as any).webkitAudioContext)();\n        this.audioContext = AudioStreamFormatImpl.getAudioContext();\n        // TODO: Various examples shows this gain node, it does not seem to be needed unless we plan\n        // to control the volume, not likely\n        this.gainNode = this.audioContext.createGain();\n        this.gainNode.gain.value = 1;\n        this.gainNode.connect(this.audioContext.destination);\n        this.startTime = this.audioContext.currentTime;\n    }\n    formatAudioData(audioData) {\n        switch (this.audioFormat.bitsPerSample) {\n            case 8:\n                return this.formatArrayBuffer(new Int8Array(audioData), 128);\n            case 16:\n                return this.formatArrayBuffer(new Int16Array(audioData), 32768);\n            case 32:\n                return this.formatArrayBuffer(new Int32Array(audioData), 2147483648);\n            default:\n                throw new InvalidOperationError(\"Only WAVE_FORMAT_PCM (8/16/32 bps) format supported at this time\");\n        }\n    }\n    formatArrayBuffer(audioData, maxValue) {\n        const float32Data = new Float32Array(audioData.length);\n        for (let i = 0; i < audioData.length; i++) {\n            float32Data[i] = audioData[i] / maxValue;\n        }\n        return float32Data;\n    }\n    updateAudioBuffer() {\n        if (this.samples.length === 0) {\n            return;\n        }\n        const channelCount = this.audioFormat.channels;\n        const bufferSource = this.audioContext.createBufferSource();\n        const frameCount = this.samples.length / channelCount;\n        const audioBuffer = this.audioContext.createBuffer(channelCount, frameCount, this.audioFormat.samplesPerSec);\n        // TODO: Should we do the conversion in the pushAudioSample instead?\n        for (let channel = 0; channel < channelCount; channel++) {\n            // Fill in individual channel data\n            let channelOffset = channel;\n            const audioData = audioBuffer.getChannelData(channel);\n            for (let i = 0; i < this.samples.length; i++, channelOffset += channelCount) {\n                audioData[i] = this.samples[channelOffset];\n            }\n        }\n        if (this.startTime < this.audioContext.currentTime) {\n            this.startTime = this.audioContext.currentTime;\n        }\n        bufferSource.buffer = audioBuffer;\n        bufferSource.connect(this.gainNode);\n        bufferSource.start(this.startTime);\n        // Make sure we play the next sample after the current one.\n        this.startTime += audioBuffer.duration;\n        // Clear the samples for the next pushed data.\n        this.samples = new Float32Array();\n    }\n    playAudio(audioData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.audioContext === null) {\n                this.createAudioContext();\n            }\n            const source = this.audioContext.createBufferSource();\n            const destination = this.audioContext.destination;\n            yield this.audioContext.decodeAudioData(audioData, (newBuffer) => {\n                source.buffer = newBuffer;\n                source.connect(destination);\n                source.start(0);\n            });\n        });\n    }\n}\n\n//# sourceMappingURL=BaseAudioPlayer.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Defines Voice Profile class for Speaker Recognition\n * @class VoiceProfile\n */\nexport class VoiceProfile {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} profileId - profileId of this Voice Profile.\n     * @param {VoiceProfileType} profileType - profileType of this Voice Profile.\n     */\n    constructor(profileId, profileType) {\n        this.privId = profileId;\n        this.privProfileType = profileType;\n    }\n    /**\n     * profileId of this Voice Profile instance\n     * @member VoiceProfile.prototype.profileId\n     * @function\n     * @public\n     * @returns {string} profileId of this Voice Profile instance.\n     */\n    get profileId() {\n        return this.privId;\n    }\n    /**\n     * profileType of this Voice Profile instance\n     * @member VoiceProfile.prototype.profileType\n     * @function\n     * @public\n     * @returns {VoiceProfileType} profile type of this Voice Profile instance.\n     */\n    get profileType() {\n        return this.privProfileType;\n    }\n}\n\n//# sourceMappingURL=VoiceProfile.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { CancellationErrorCodePropertyName } from \"../common.speech/Exports\";\nimport { Contracts } from \"./Contracts\";\nimport { CancellationDetailsBase, CancellationErrorCode, CancellationReason, PropertyCollection, ResultReason, } from \"./Exports\";\n/**\n * Output format\n * @class VoiceProfileEnrollmentResult\n */\nexport class VoiceProfileEnrollmentResult {\n    constructor(reason, json, statusText) {\n        this.privReason = reason;\n        this.privProperties = new PropertyCollection();\n        if (this.privReason !== ResultReason.Canceled) {\n            this.privDetails = JSON.parse(json);\n            Contracts.throwIfNullOrUndefined(json, \"JSON\");\n            if (this.privDetails.enrollmentStatus.toLowerCase() === \"enrolling\") {\n                this.privReason = ResultReason.EnrollingVoiceProfile;\n            }\n        }\n        else {\n            this.privErrorDetails = statusText;\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.ServiceError]);\n        }\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get enrollmentsCount() {\n        return this.privDetails.enrollmentsCount;\n    }\n    get enrollmentsLength() {\n        return this.privDetails.enrollmentsLength;\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get enrollmentResultDetails() {\n        return this.privDetails;\n    }\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\n/**\n * @class VoiceProfileEnrollmentCancellationDetails\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class VoiceProfileEnrollmentCancellationDetails extends CancellationDetailsBase {\n    constructor(reason, errorDetails, errorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n    /**\n     * Creates an instance of VoiceProfileEnrollmentCancellationDetails object for the canceled VoiceProfileEnrollmentResult.\n     * @member VoiceProfileEnrollmentCancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {VoiceProfileEnrollmentResult} result - The result that was canceled.\n     * @returns {VoiceProfileEnrollmentCancellationDetails} The cancellation details object being created.\n     */\n    static fromResult(result) {\n        const reason = CancellationReason.Error;\n        let errorCode = CancellationErrorCode.NoError;\n        if (!!result.properties) {\n            errorCode = CancellationErrorCode[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])];\n        }\n        return new VoiceProfileEnrollmentCancellationDetails(reason, result.errorDetails, errorCode);\n    }\n}\n\n//# sourceMappingURL=VoiceProfileEnrollmentResult.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { CancellationErrorCodePropertyName } from \"../common.speech/Exports\";\nimport { Contracts } from \"./Contracts\";\nimport { CancellationDetailsBase, CancellationErrorCode, CancellationReason, PropertyCollection, ResultReason, } from \"./Exports\";\n/**\n * Output format\n * @class VoiceProfileResult\n */\nexport class VoiceProfileResult {\n    constructor(reason, statusText) {\n        this.privReason = reason;\n        this.privProperties = new PropertyCollection();\n        if (reason === ResultReason.Canceled) {\n            Contracts.throwIfNullOrUndefined(statusText, \"statusText\");\n            this.privErrorDetails = statusText;\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.ServiceError]);\n        }\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\n/**\n * @class VoiceProfileCancellationDetails\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class VoiceProfileCancellationDetails extends CancellationDetailsBase {\n    constructor(reason, errorDetails, errorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n    /**\n     * Creates an instance of VoiceProfileCancellationDetails object for the canceled VoiceProfileResult.\n     * @member VoiceProfileCancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {VoiceProfileResult} result - The result that was canceled.\n     * @returns {VoiceProfileCancellationDetails} The cancellation details object being created.\n     */\n    static fromResult(result) {\n        const reason = CancellationReason.Error;\n        let errorCode = CancellationErrorCode.NoError;\n        if (!!result.properties) {\n            errorCode = CancellationErrorCode[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])];\n        }\n        return new VoiceProfileCancellationDetails(reason, result.errorDetails, errorCode);\n    }\n}\n\n//# sourceMappingURL=VoiceProfileResult.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { CancellationErrorCodePropertyName } from \"../common.speech/Exports\";\nimport { Contracts } from \"./Contracts\";\nimport { CancellationDetailsBase, CancellationErrorCode, CancellationReason, PropertyCollection, PropertyId, ResultReason, } from \"./Exports\";\nexport var SpeakerRecognitionResultType;\n(function (SpeakerRecognitionResultType) {\n    SpeakerRecognitionResultType[SpeakerRecognitionResultType[\"Verify\"] = 0] = \"Verify\";\n    SpeakerRecognitionResultType[SpeakerRecognitionResultType[\"Identify\"] = 1] = \"Identify\";\n})(SpeakerRecognitionResultType || (SpeakerRecognitionResultType = {}));\n/**\n * Output format\n * @class SpeakerRecognitionResult\n */\nexport class SpeakerRecognitionResult {\n    constructor(resultType, data, profileId, resultReason = ResultReason.RecognizedSpeaker) {\n        this.privProperties = new PropertyCollection();\n        this.privReason = resultReason;\n        if (this.privReason !== ResultReason.Canceled) {\n            if (resultType === SpeakerRecognitionResultType.Identify) {\n                const json = JSON.parse(data);\n                Contracts.throwIfNullOrUndefined(json, \"JSON\");\n                this.privProfileId = json.identifiedProfile.profileId;\n                this.privScore = json.identifiedProfile.score;\n            }\n            else {\n                const json = JSON.parse(data);\n                Contracts.throwIfNullOrUndefined(json, \"JSON\");\n                this.privScore = json.score;\n                if (json.recognitionResult.toLowerCase() !== \"accept\") {\n                    this.privReason = ResultReason.NoMatch;\n                }\n                if (profileId !== undefined && profileId !== \"\") {\n                    this.privProfileId = profileId;\n                }\n            }\n        }\n        else {\n            const json = JSON.parse(data);\n            Contracts.throwIfNullOrUndefined(json, \"JSON\");\n            this.privErrorDetails = json.statusText;\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.ServiceError]);\n        }\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_JsonResult, data);\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get profileId() {\n        return this.privProfileId;\n    }\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    get score() {\n        return this.privScore;\n    }\n}\n/**\n * @class SpeakerRecognitionCancellationDetails\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class SpeakerRecognitionCancellationDetails extends CancellationDetailsBase {\n    constructor(reason, errorDetails, errorCode) {\n        super(reason, errorDetails, errorCode);\n    }\n    /**\n     * Creates an instance of SpeakerRecognitionCancellationDetails object for the canceled SpeakerRecognitionResult\n     * @member SpeakerRecognitionCancellationDetails.fromResult\n     * @function\n     * @public\n     * @param {SpeakerRecognitionResult} result - The result that was canceled.\n     * @returns {SpeakerRecognitionCancellationDetails} The cancellation details object being created.\n     */\n    static fromResult(result) {\n        const reason = CancellationReason.Error;\n        let errorCode = CancellationErrorCode.NoError;\n        if (!!result.properties) {\n            errorCode = CancellationErrorCode[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])];\n        }\n        return new SpeakerRecognitionCancellationDetails(reason, result.errorDetails, errorCode);\n    }\n}\n\n//# sourceMappingURL=SpeakerRecognitionResult.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Context, OS, SpeakerIdMessageAdapter, SpeakerRecognitionConfig, } from \"../common.speech/Exports\";\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\nimport { Contracts } from \"./Contracts\";\nimport { PropertyId, ResultReason, VoiceProfile, VoiceProfileEnrollmentResult, VoiceProfileResult, } from \"./Exports\";\n/**\n * Defines VoiceProfileClient class for Speaker Recognition\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\n * @class VoiceProfileClient\n */\nexport class VoiceProfileClient {\n    /**\n     * VoiceProfileClient constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer (authentication key, region, &c)\n     */\n    constructor(speechConfig) {\n        const speechConfigImpl = speechConfig;\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        this.privProperties = speechConfigImpl.properties.clone();\n        this.implClientSetup();\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member VoiceProfileClient.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member VoiceProfileClient.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * The collection of properties and their values defined for this VoiceProfileClient.\n     * @member VoiceProfileClient.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this VoiceProfileClient.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Create a speaker recognition voice profile\n     * @member VoiceProfileClient.prototype.createProfileAsync\n     * @function\n     * @public\n     * @param {VoiceProfileType} profileType Type of Voice Profile to be created\n     *        specifies the keyword to be recognized.\n     * @param {string} lang Language string (locale) for Voice Profile\n     * @param cb - Callback invoked once Voice Profile has been created.\n     * @param err - Callback invoked in case of an error.\n     */\n    createProfileAsync(profileType, lang, cb, err) {\n        marshalPromiseToCallbacks((() => __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.privAdapter.createProfile(profileType, lang);\n            const response = result.json();\n            const profile = new VoiceProfile(response.profileId, profileType);\n            return profile;\n        }))(), cb, err);\n    }\n    /**\n     * Create a speaker recognition voice profile\n     * @member VoiceProfileClient.prototype.enrollProfileAsync\n     * @function\n     * @public\n     * @param {VoiceProfile} profile Voice Profile to create enrollment for\n     * @param {AudioConfig} audioConfig source info from which to create enrollment\n     * @param cb - Callback invoked once Enrollment request has been submitted.\n     * @param err - Callback invoked in case of an error.\n     */\n    enrollProfileAsync(profile, audioConfig, cb, err) {\n        const configImpl = audioConfig;\n        Contracts.throwIfNullOrUndefined(configImpl, \"audioConfig\");\n        marshalPromiseToCallbacks((() => __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.privAdapter.createEnrollment(profile, configImpl);\n            const ret = new VoiceProfileEnrollmentResult(result.ok ? ResultReason.EnrolledVoiceProfile : ResultReason.Canceled, result.data, result.statusText);\n            return ret;\n        }))(), cb, err);\n    }\n    /**\n     * Delete a speaker recognition voice profile\n     * @member VoiceProfileClient.prototype.deleteProfileAsync\n     * @function\n     * @public\n     * @param {VoiceProfile} profile Voice Profile to be deleted\n     * @param cb - Callback invoked once Voice Profile has been deleted.\n     * @param err - Callback invoked in case of an error.\n     */\n    deleteProfileAsync(profile, cb, err) {\n        marshalPromiseToCallbacks((() => __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.privAdapter.deleteProfile(profile);\n            return this.getResult(result, ResultReason.DeletedVoiceProfile);\n        }))(), cb, err);\n    }\n    /**\n     * Remove all enrollments for a speaker recognition voice profile\n     * @member VoiceProfileClient.prototype.resetProfileAsync\n     * @function\n     * @public\n     * @param {VoiceProfile} profile Voice Profile to be reset\n     * @param cb - Callback invoked once Voice Profile has been reset.\n     * @param err - Callback invoked in case of an error.\n     */\n    resetProfileAsync(profile, cb, err) {\n        marshalPromiseToCallbacks((() => __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.privAdapter.resetProfile(profile);\n            return this.getResult(result, ResultReason.ResetVoiceProfile);\n        }))(), cb, err);\n    }\n    /**\n     * Included for compatibility\n     * @member VoiceProfileClient.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        return;\n    }\n    // Does class setup, swiped from Recognizer.\n    implClientSetup() {\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\n        let osName = \"unknown\";\n        let osVersion = \"unknown\";\n        if (typeof navigator !== \"undefined\") {\n            osPlatform = osPlatform + \"/\" + navigator.platform;\n            osName = navigator.userAgent;\n            osVersion = navigator.appVersion;\n        }\n        const recognizerConfig = new SpeakerRecognitionConfig(new Context(new OS(osPlatform, osName, osVersion)), this.privProperties);\n        this.privAdapter = new SpeakerIdMessageAdapter(recognizerConfig);\n    }\n    getResult(result, successReason, cb) {\n        const response = new VoiceProfileResult(result.ok ? successReason : ResultReason.Canceled, result.statusText);\n        return (response);\n    }\n}\n\n//# sourceMappingURL=VoiceProfileClient.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\nimport { VoiceProfileType, } from \"./Exports\";\n/**\n * Defines SpeakerIdentificationModel class for Speaker Recognition\n * Model contains a set of profiles against which to identify speaker(s)\n * @class SpeakerIdentificationModel\n */\nexport class SpeakerIdentificationModel {\n    constructor(profiles) {\n        this.privVoiceProfiles = [];\n        Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\n        if (profiles.length === 0) {\n            throw new Error(\"Empty Voice Profiles array\");\n        }\n        profiles.forEach((profile) => {\n            if (profile.profileType !== VoiceProfileType.TextIndependentIdentification) {\n                throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\n            }\n            this.privVoiceProfiles.push(profile);\n        });\n    }\n    static fromProfiles(profiles) {\n        return new SpeakerIdentificationModel(profiles);\n    }\n    get voiceProfileIds() {\n        return this.privVoiceProfiles.map((profile) => profile.profileId).join(\",\");\n    }\n}\n\n//# sourceMappingURL=SpeakerIdentificationModel.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\nimport { VoiceProfileType, } from \"./Exports\";\n/**\n * Defines SpeakerVerificationModel class for Speaker Recognition\n * Model contains a profile against which to verify a speaker\n * @class SpeakerVerificationModel\n */\nexport class SpeakerVerificationModel {\n    constructor(profile) {\n        Contracts.throwIfNullOrUndefined(profile, \"VoiceProfile\");\n        if (profile.profileType === VoiceProfileType.TextIndependentIdentification) {\n            throw new Error(\"Verification model cannot be created from Identification profile\");\n        }\n        this.privVoiceProfile = profile;\n    }\n    static fromProfile(profile) {\n        return new SpeakerVerificationModel(profile);\n    }\n    get voiceProfile() {\n        return this.privVoiceProfile;\n    }\n}\n\n//# sourceMappingURL=SpeakerVerificationModel.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Context, OS, SpeakerIdMessageAdapter, SpeakerRecognitionConfig, } from \"../common.speech/Exports\";\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\nimport { Contracts } from \"./Contracts\";\nimport { PropertyId, ResultReason, SpeakerIdentificationModel, SpeakerRecognitionResult, SpeakerRecognitionResultType, SpeakerVerificationModel, } from \"./Exports\";\n/**\n * Defines SpeakerRecognizer class for Speaker Recognition\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\n * @class SpeakerRecognizer\n */\nexport class SpeakerRecognizer {\n    /**\n     * SpeakerRecognizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this recognizer (authentication key, region, &c)\n     */\n    constructor(speechConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        this.privAudioConfigImpl = audioConfig;\n        Contracts.throwIfNull(this.privAudioConfigImpl, \"audioConfig\");\n        this.privProperties = speechConfigImpl.properties.clone();\n        this.implSRSetup();\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member SpeakerRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member SpeakerRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * The collection of properties and their values defined for this SpeakerRecognizer.\n     * @member SpeakerRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeakerRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Get recognition result for model using given audio\n     * @member SpeakerRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param {SpeakerIdentificationModel} model Model containing Voice Profiles to be identified\n     * @param cb - Callback invoked once result is returned.\n     * @param err - Callback invoked in case of an error.\n     */\n    recognizeOnceAsync(model, cb, err) {\n        if (model instanceof SpeakerIdentificationModel) {\n            const responsePromise = this.privAdapter.identifySpeaker(model, this.privAudioConfigImpl);\n            marshalPromiseToCallbacks(this.getResult(responsePromise, SpeakerRecognitionResultType.Identify, undefined), cb, err);\n        }\n        else if (model instanceof SpeakerVerificationModel) {\n            const responsePromise = this.privAdapter.verifySpeaker(model, this.privAudioConfigImpl);\n            marshalPromiseToCallbacks(this.getResult(responsePromise, SpeakerRecognitionResultType.Verify, model.voiceProfile.profileId), cb, err);\n        }\n        else {\n            throw new Error(\"SpeakerRecognizer.recognizeOnce: Unexpected model type\");\n        }\n    }\n    /**\n     * Included for compatibility\n     * @member SpeakerRecognizer.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        return;\n    }\n    // Does class setup, swiped from Recognizer.\n    implSRSetup() {\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\n        let osName = \"unknown\";\n        let osVersion = \"unknown\";\n        if (typeof navigator !== \"undefined\") {\n            osPlatform = osPlatform + \"/\" + navigator.platform;\n            osName = navigator.userAgent;\n            osVersion = navigator.appVersion;\n        }\n        const recognizerConfig = new SpeakerRecognitionConfig(new Context(new OS(osPlatform, osName, osVersion)), this.privProperties);\n        this.privAdapter = new SpeakerIdMessageAdapter(recognizerConfig);\n    }\n    getResult(responsePromise, resultType, profileId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield responsePromise;\n            return new SpeakerRecognitionResult(resultType, response.data, profileId, response.ok ? ResultReason.RecognizedSpeaker : ResultReason.Canceled);\n        });\n    }\n}\n\n//# sourceMappingURL=SpeakerRecognizer.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { AutoDetectSourceLanguagesOpenRangeOptionName } from \"../common.speech/Exports\";\nimport { Contracts } from \"./Contracts\";\nimport { PropertyCollection, PropertyId, } from \"./Exports\";\n/**\n * Language auto detect configuration.\n * @class AutoDetectSourceLanguageConfig\n * Added in version 1.13.0.\n */\nexport class AutoDetectSourceLanguageConfig {\n    constructor() {\n        this.privProperties = new PropertyCollection();\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.fromOpenRange\n     * @function\n     * @public\n     * Only [[SpeechSynthesizer]] supports source language auto detection from open range,\n     * for [[Recognizer]], please use AutoDetectSourceLanguageConfig with specific source languages.\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with open range.\n     */\n    static fromOpenRange() {\n        const config = new AutoDetectSourceLanguageConfig();\n        config.properties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, AutoDetectSourceLanguagesOpenRangeOptionName);\n        return config;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.fromLanguages\n     * @function\n     * @public\n     * @param {string[]} languages Comma-separated string of languages (eg. \"en-US,fr-FR\") to populate properties of config.\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with given languages.\n     */\n    static fromLanguages(languages) {\n        Contracts.throwIfArrayEmptyOrWhitespace(languages, \"languages\");\n        const config = new AutoDetectSourceLanguageConfig();\n        config.properties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, languages.join());\n        return config;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.fromSourceLanguageConfigs\n     * @function\n     * @public\n     * @param {SourceLanguageConfig[]} configs SourceLanguageConfigs to populate properties of config.\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with given SourceLanguageConfigs.\n     */\n    static fromSourceLanguageConfigs(configs) {\n        if (configs.length < 1) {\n            throw new Error(\"Expected non-empty SourceLanguageConfig array.\");\n        }\n        const autoConfig = new AutoDetectSourceLanguageConfig();\n        const langs = [];\n        configs.forEach((config) => {\n            langs.push(config.language);\n            if (config.endpointId !== undefined && config.endpointId !== \"\") {\n                const customProperty = config.language + PropertyId.SpeechServiceConnection_EndpointId.toString();\n                autoConfig.properties.setProperty(customProperty, config.endpointId);\n            }\n        });\n        autoConfig.properties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, langs.join());\n        return autoConfig;\n    }\n    /**\n     * @member AutoDetectSourceLanguageConfig.prototype.properties\n     * @function\n     * @public\n     * @return {PropertyCollection} Properties of the config.\n     * @summary Gets a auto detected language config properties\n     */\n    get properties() {\n        return this.privProperties;\n    }\n}\n\n//# sourceMappingURL=AutoDetectSourceLanguageConfig.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\n/**\n * Output format\n * @class AutoDetectSourceLanguageResult\n */\nexport class AutoDetectSourceLanguageResult {\n    constructor(language, languageDetectionConfidence) {\n        Contracts.throwIfNullOrUndefined(language, \"language\");\n        Contracts.throwIfNullOrUndefined(languageDetectionConfidence, \"languageDetectionConfidence\");\n        this.privLanguage = language;\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\n    }\n    /**\n     * Creates an instance of AutoDetectSourceLanguageResult object from a SpeechRecognitionResult instance.\n     * @member AutoDetectSourceLanguageResult.fromResult\n     * @function\n     * @public\n     * @param {SpeechRecognitionResult} result - The recognition result.\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\n     */\n    static fromResult(result) {\n        return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\n    }\n    get language() {\n        return this.privLanguage;\n    }\n    get languageDetectionConfidence() {\n        return this.privLanguageDetectionConfidence;\n    }\n}\n\n//# sourceMappingURL=AutoDetectSourceLanguageResult.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\n/**\n * Source Language configuration.\n * @class SourceLanguageConfig\n */\nexport class SourceLanguageConfig {\n    constructor(language, endpointId) {\n        Contracts.throwIfNullOrUndefined(language, \"language\");\n        this.privLanguage = language;\n        this.privEndpointId = endpointId;\n    }\n    /**\n     * @member SourceLanguageConfig.fromLanguage\n     * @function\n     * @public\n     * @param {string} language language (eg. \"en-US\") value of config.\n     * @param {string?} endpointId endpointId of model bound to given language of config.\n     * @return {SourceLanguageConfig} Instance of SourceLanguageConfig\n     * @summary Creates an instance of the SourceLanguageConfig with the given language and optional endpointId.\n     * Added in version 1.13.0.\n     */\n    static fromLanguage(language, endpointId) {\n        return new SourceLanguageConfig(language, endpointId);\n    }\n    get language() {\n        return this.privLanguage;\n    }\n    get endpointId() {\n        return this.privEndpointId;\n    }\n}\n\n//# sourceMappingURL=SourceLanguageConfig.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RestConfigBase } from \"../../common.browser/RestConfigBase\";\nexport class ConversationConnectionConfig extends RestConfigBase {\n    static get host() {\n        return ConversationConnectionConfig.privHost;\n    }\n    static get apiVersion() {\n        return ConversationConnectionConfig.privApiVersion;\n    }\n    static get clientAppId() {\n        return ConversationConnectionConfig.privClientAppId;\n    }\n    static get defaultLanguageCode() {\n        return ConversationConnectionConfig.privDefaultLanguageCode;\n    }\n    static get restPath() {\n        return ConversationConnectionConfig.privRestPath;\n    }\n    static get webSocketPath() {\n        return ConversationConnectionConfig.privWebSocketPath;\n    }\n    static get speechHost() {\n        return ConversationConnectionConfig.privSpeechHost;\n    }\n    static get speechPath() {\n        return ConversationConnectionConfig.privSpeechPath;\n    }\n    static get transcriptionEventKeys() {\n        return ConversationConnectionConfig.privTranscriptionEventKeys;\n    }\n}\nConversationConnectionConfig.privHost = \"dev.microsofttranslator.com\";\nConversationConnectionConfig.privRestPath = \"/capito/room\";\nConversationConnectionConfig.privApiVersion = \"2.0\";\nConversationConnectionConfig.privDefaultLanguageCode = \"en-US\";\nConversationConnectionConfig.privClientAppId = \"FC539C22-1767-4F1F-84BC-B4D811114F15\";\nConversationConnectionConfig.privWebSocketPath = \"/capito/translate\";\nConversationConnectionConfig.privSpeechHost = \"{region}.s2s.speech.microsoft.com\";\nConversationConnectionConfig.privSpeechPath = \"/speech/translation/cognitiveservices/v1\";\nConversationConnectionConfig.privTranscriptionEventKeys = [\"iCalUid\", \"callId\", \"organizer\", \"FLAC\", \"MTUri\", \"DifferenciateGuestSpeakers\", \"audiorecording\", \"Threadid\", \"OrganizerMri\", \"OrganizerTenantId\", \"UserToken\"];\n\n//# sourceMappingURL=ConversationConnectionConfig.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/** Users participating in the conversation */\nexport class InternalParticipants {\n    constructor(participants = [], meId) {\n        this.participants = participants;\n        this.meId = meId;\n    }\n    /**\n     * Add or update a participant\n     * @param value\n     */\n    addOrUpdateParticipant(value) {\n        if (value === undefined) {\n            return;\n        }\n        const exists = this.getParticipantIndex(value.id);\n        if (exists > -1) {\n            this.participants.splice(exists, 1, value);\n        }\n        else {\n            this.participants.push(value);\n        }\n        // ensure it was added ok\n        return this.getParticipant(value.id);\n    }\n    /**\n     * Find the participant's position in the participants list.\n     * @param id\n     */\n    getParticipantIndex(id) {\n        return this.participants.findIndex((p) => p.id === id);\n    }\n    /**\n     * Find the participant by id.\n     * @param id\n     */\n    getParticipant(id) {\n        return this.participants.find((p) => p.id === id);\n    }\n    /***\n     * Remove a participant from the participants list.\n     */\n    deleteParticipant(id) {\n        this.participants = this.participants.filter((p) => p.id !== id);\n    }\n    /***\n     * Helper to return the conversation host.\n     */\n    get host() {\n        return this.participants.find((p) => p.isHost === true);\n    }\n    /**\n     * Helper to return the current user.\n     */\n    get me() {\n        return this.getParticipant(this.meId);\n    }\n}\n/**\n * List of command message types\n */\nexport const ConversationTranslatorMessageTypes = {\n    command: \"command\",\n    final: \"final\",\n    info: \"info\",\n    instantMessage: \"instant_message\",\n    partial: \"partial\",\n    participantCommand: \"participant_command\",\n    translatedMessage: \"translated_message\"\n};\n/**\n * List of command types\n */\nexport const ConversationTranslatorCommandTypes = {\n    changeNickname: \"ChangeNickname\",\n    disconnectSession: \"DisconnectSession\",\n    ejectParticipant: \"EjectParticipant\",\n    instant_message: \"instant_message\",\n    joinSession: \"JoinSession\",\n    leaveSession: \"LeaveSession\",\n    participantList: \"ParticipantList\",\n    roomExpirationWarning: \"RoomExpirationWarning\",\n    setLockState: \"SetLockState\",\n    setMute: \"SetMute\",\n    setMuteAll: \"SetMuteAll\",\n    setProfanityFiltering: \"SetProfanityFiltering\",\n    setTranslateToLanguages: \"SetTranslateToLanguages\",\n    setUseTTS: \"SetUseTTS\"\n};\n\n//# sourceMappingURL=ConversationTranslatorInterfaces.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RestConfigBase } from \"../../common.browser/RestConfigBase\";\n/**\n * Config settings for Conversation Translator\n */\n/**\n * Helpers for sending / receiving HTTPS requests / responses.\n * @param params\n */\nfunction queryParams(params = {}) {\n    return Object.keys(params)\n        .map((k) => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k]))\n        .join(\"&\");\n}\nfunction withQuery(url, params = {}) {\n    const queryString = queryParams(params);\n    return queryString ? url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + queryString : url;\n}\nfunction parseXHRResult(xhr) {\n    return {\n        data: xhr.responseText,\n        headers: xhr.getAllResponseHeaders(),\n        json: () => JSON.parse(xhr.responseText),\n        ok: xhr.status >= 200 && xhr.status < 300,\n        status: xhr.status,\n        statusText: xhr.statusText,\n    };\n}\nfunction errorResponse(xhr, message = null) {\n    return {\n        data: message || xhr.statusText,\n        headers: xhr.getAllResponseHeaders(),\n        json: () => JSON.parse(message || (\"\\\"\" + xhr.statusText + \"\\\"\")),\n        ok: false,\n        status: xhr.status,\n        statusText: xhr.statusText,\n    };\n}\nexport function extractHeaderValue(headerKey, headers) {\n    let headerValue = \"\";\n    try {\n        const arr = headers.trim().split(/[\\r\\n]+/);\n        const headerMap = {};\n        arr.forEach((line) => {\n            const parts = line.split(\": \");\n            const header = parts.shift().toLowerCase();\n            const value = parts.join(\": \");\n            headerMap[header] = value;\n        });\n        headerValue = headerMap[headerKey.toLowerCase()];\n    }\n    catch (e) {\n        // ignore the error\n    }\n    return headerValue;\n}\nexport function request(method, url, queryParams = {}, body = null, options = {}, callback) {\n    const defaultRequestOptions = RestConfigBase.requestOptions;\n    const ignoreCache = options.ignoreCache || defaultRequestOptions.ignoreCache;\n    const headers = options.headers || defaultRequestOptions.headers;\n    const timeout = options.timeout || defaultRequestOptions.timeout;\n    const xhr = new XMLHttpRequest();\n    xhr.open(method, withQuery(url, queryParams), true);\n    if (headers) {\n        Object.keys(headers).forEach((key) => xhr.setRequestHeader(key, headers[key]));\n    }\n    if (ignoreCache) {\n        xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n    }\n    xhr.timeout = timeout;\n    xhr.onload = (evt) => {\n        callback(parseXHRResult(xhr));\n    };\n    xhr.onerror = (evt) => {\n        callback(errorResponse(xhr, \"Failed to make request.\"));\n    };\n    xhr.ontimeout = (evt) => {\n        callback(errorResponse(xhr, \"Request took longer than expected.\"));\n    };\n    if (method === \"post\" && body) {\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.send(JSON.stringify(body));\n    }\n    else {\n        xhr.send();\n    }\n}\nexport function PromiseToEmptyCallback(promise, cb, err) {\n    if (!!promise) {\n        promise.then((result) => {\n            try {\n                if (!!cb) {\n                    cb();\n                }\n            }\n            catch (e) {\n                if (!!err) {\n                    err(`'Unhandled error on promise callback: ${e}'`);\n                }\n            }\n        }, (reason) => {\n            try {\n                if (!!err) {\n                    err(reason);\n                }\n                /* tslint:disable:no-empty */\n            }\n            catch (error) {\n            }\n        });\n    }\n    else {\n        if (!!err) {\n            err(\"Null promise\");\n        }\n    }\n}\n\n//# sourceMappingURL=ConversationUtils.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"../../sdk/Contracts\";\nimport { PropertyId } from \"../../sdk/Exports\";\nimport { ConversationConnectionConfig } from \"./ConversationConnectionConfig\";\nimport { extractHeaderValue, request } from \"./ConversationUtils\";\nexport class ConversationManager {\n    constructor() {\n        //\n        this.privRequestParams = ConversationConnectionConfig.configParams;\n        this.privErrors = ConversationConnectionConfig.restErrors;\n        this.privHost = ConversationConnectionConfig.host;\n        this.privApiVersion = ConversationConnectionConfig.apiVersion;\n        this.privRestPath = ConversationConnectionConfig.restPath;\n    }\n    /**\n     * Make a POST request to the Conversation Manager service endpoint to create or join a conversation.\n     * @param args\n     * @param conversationCode\n     * @param callback\n     * @param errorCallback\n     */\n    createOrJoin(args, conversationCode, cb, err) {\n        try {\n            Contracts.throwIfNullOrUndefined(args, \"args\");\n            const languageCode = args.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, ConversationConnectionConfig.defaultLanguageCode);\n            const nickname = args.getProperty(PropertyId.ConversationTranslator_Name);\n            const endpointHost = args.getProperty(PropertyId.ConversationTranslator_Host, this.privHost);\n            const correlationId = args.getProperty(PropertyId.ConversationTranslator_CorrelationId);\n            const subscriptionKey = args.getProperty(PropertyId.SpeechServiceConnection_Key);\n            const subscriptionRegion = args.getProperty(PropertyId.SpeechServiceConnection_Region);\n            const authToken = args.getProperty(PropertyId.SpeechServiceAuthorization_Token);\n            Contracts.throwIfNullOrWhitespace(languageCode, \"languageCode\");\n            Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\n            Contracts.throwIfNullOrWhitespace(endpointHost, \"endpointHost\");\n            const queryParams = {};\n            queryParams[this.privRequestParams.apiVersion] = this.privApiVersion;\n            queryParams[this.privRequestParams.languageCode] = languageCode;\n            queryParams[this.privRequestParams.nickname] = nickname;\n            const headers = {};\n            if (correlationId) {\n                headers[this.privRequestParams.correlationId] = correlationId;\n            }\n            headers[this.privRequestParams.clientAppId] = ConversationConnectionConfig.clientAppId;\n            if (conversationCode !== undefined) {\n                queryParams[this.privRequestParams.roomId] = conversationCode;\n            }\n            else {\n                Contracts.throwIfNullOrUndefined(subscriptionRegion, this.privErrors.authInvalidSubscriptionRegion);\n                headers[this.privRequestParams.subscriptionRegion] = subscriptionRegion;\n                if (subscriptionKey) {\n                    headers[this.privRequestParams.subscriptionKey] = subscriptionKey;\n                }\n                else if (authToken) {\n                    headers[this.privRequestParams.authorization] = `Bearer ${authToken}`;\n                }\n                else {\n                    Contracts.throwIfNullOrUndefined(subscriptionKey, this.privErrors.authInvalidSubscriptionKey);\n                }\n            }\n            const config = {};\n            config.headers = headers;\n            const endpoint = `https://${endpointHost}${this.privRestPath}`;\n            // TODO: support a proxy and certificate validation\n            request(\"post\", endpoint, queryParams, null, config, (response) => {\n                const requestId = extractHeaderValue(this.privRequestParams.requestId, response.headers);\n                if (!response.ok) {\n                    if (!!err) {\n                        // get the error\n                        let errorMessage = this.privErrors.invalidCreateJoinConversationResponse.replace(\"{status}\", response.status.toString());\n                        let errMessageRaw;\n                        try {\n                            errMessageRaw = JSON.parse(response.data);\n                            errorMessage += ` [${errMessageRaw.error.code}: ${errMessageRaw.error.message}]`;\n                        }\n                        catch (e) {\n                            errorMessage += ` [${response.data}]`;\n                        }\n                        if (requestId) {\n                            errorMessage += ` ${requestId}`;\n                        }\n                        err(errorMessage);\n                    }\n                    return;\n                }\n                const conversation = JSON.parse(response.data);\n                if (conversation) {\n                    conversation.requestId = requestId;\n                }\n                if (!!cb) {\n                    try {\n                        cb(conversation);\n                    }\n                    catch (e) {\n                        if (!!err) {\n                            err(e);\n                        }\n                    }\n                    cb = undefined;\n                }\n            });\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    }\n    /**\n     * Make a DELETE request to the Conversation Manager service endpoint to leave the conversation.\n     * @param args\n     * @param sessionToken\n     * @param callback\n     */\n    leave(args, sessionToken) {\n        return new Promise((resolve, reject) => {\n            try {\n                Contracts.throwIfNullOrUndefined(args, this.privErrors.invalidArgs.replace(\"{arg}\", \"config\"));\n                Contracts.throwIfNullOrWhitespace(sessionToken, this.privErrors.invalidArgs.replace(\"{arg}\", \"token\"));\n                const endpointHost = args.getProperty(PropertyId.ConversationTranslator_Host, this.privHost);\n                const correlationId = args.getProperty(PropertyId.ConversationTranslator_CorrelationId);\n                const queryParams = {};\n                queryParams[this.privRequestParams.apiVersion] = this.privApiVersion;\n                queryParams[this.privRequestParams.sessionToken] = sessionToken;\n                const headers = {};\n                if (correlationId) {\n                    headers[this.privRequestParams.correlationId] = correlationId;\n                }\n                const config = {};\n                config.headers = headers;\n                const endpoint = `https://${endpointHost}${this.privRestPath}`;\n                // TODO: support a proxy and certificate validation\n                request(\"delete\", endpoint, queryParams, null, config, (response) => {\n                    if (!response.ok) {\n                        // ignore errors on delete\n                    }\n                    resolve();\n                });\n            }\n            catch (error) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    reject(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    reject(error);\n                }\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=ConversationManager.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ConnectionMessage } from \"../../common/Exports\";\nexport class ConversationConnectionMessage extends ConnectionMessage {\n    constructor(messageType, body, headers, id) {\n        super(messageType, body, headers, id);\n        const json = JSON.parse(this.textBody);\n        if (json.type !== undefined) {\n            this.privConversationMessageType = json.type;\n        }\n    }\n    get conversationMessageType() {\n        return this.privConversationMessageType;\n    }\n}\n\n//# sourceMappingURL=ConversationConnectionMessage.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Deferred, MessageType, RawWebsocketMessage, } from \"../../common/Exports\";\nimport { ConversationConnectionMessage } from \"./ConversationConnectionMessage\";\n/**\n * Based off WebsocketMessageFormatter. The messages for Conversation Translator have some variations from the Speech messages.\n */\nexport class ConversationWebsocketMessageFormatter {\n    constructor() {\n        /**\n         * Format incoming messages: text (speech partial/final, IM) or binary (tts)\n         */\n        this.toConnectionMessage = (message) => {\n            const deferral = new Deferred();\n            try {\n                if (message.messageType === MessageType.Text) {\n                    const incomingMessage = new ConversationConnectionMessage(message.messageType, message.textContent, {}, message.id);\n                    deferral.resolve(incomingMessage);\n                }\n                else if (message.messageType === MessageType.Binary) {\n                    deferral.resolve(new ConversationConnectionMessage(message.messageType, message.binaryContent, undefined, message.id));\n                }\n            }\n            catch (e) {\n                deferral.reject(`Error formatting the message. Error: ${e}`);\n            }\n            return deferral.promise;\n        };\n        /**\n         * Format outgoing messages: text (commands or IM)\n         */\n        this.fromConnectionMessage = (message) => {\n            const deferral = new Deferred();\n            try {\n                if (message.messageType === MessageType.Text) {\n                    const payload = `${message.textBody ? message.textBody : \"\"}`;\n                    deferral.resolve(new RawWebsocketMessage(MessageType.Text, payload, message.id));\n                }\n            }\n            catch (e) {\n                deferral.reject(`Error formatting the message. ${e}`);\n            }\n            return deferral.promise;\n        };\n    }\n}\n\n//# sourceMappingURL=ConversationWebsocketMessageFormatter.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ProxyInfo, WebsocketConnection } from \"../../common.browser/Exports\";\nimport { createGuid } from \"../../common/Exports\";\nimport { Contracts } from \"../../sdk/Contracts\";\nimport { PropertyId } from \"../../sdk/Exports\";\nimport { ConnectionFactoryBase } from \"../ConnectionFactoryBase\";\nimport { ConversationConnectionConfig } from \"./ConversationConnectionConfig\";\nimport { ConversationWebsocketMessageFormatter } from \"./ConversationWebsocketMessageFormatter\";\n/**\n * Create a connection to the Conversation Translator websocket for sending instant messages and commands, and for receiving translated messages.\n * The conversation must already have been started or joined.\n */\nexport class ConversationConnectionFactory extends ConnectionFactoryBase {\n    create(config, authInfo, connectionId) {\n        const endpointHost = config.parameters.getProperty(PropertyId.ConversationTranslator_Host, ConversationConnectionConfig.host);\n        const correlationId = config.parameters.getProperty(PropertyId.ConversationTranslator_CorrelationId, createGuid());\n        const endpoint = `wss://${endpointHost}${ConversationConnectionConfig.webSocketPath}`;\n        const token = config.parameters.getProperty(PropertyId.ConversationTranslator_Token, undefined);\n        Contracts.throwIfNullOrUndefined(token, \"token\");\n        const queryParams = {};\n        queryParams[ConversationConnectionConfig.configParams.apiVersion] = ConversationConnectionConfig.apiVersion;\n        queryParams[ConversationConnectionConfig.configParams.token] = token;\n        queryParams[ConversationConnectionConfig.configParams.correlationId] = correlationId;\n        return new WebsocketConnection(endpoint, queryParams, {}, new ConversationWebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), connectionId);\n    }\n}\n\n//# sourceMappingURL=ConversationConnectionFactory.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nimport { CancellationEventArgsBase } from \"../CancellationEventArgsBase\";\nexport class ConversationTranslationCanceledEventArgs extends CancellationEventArgsBase {\n}\n\n//# sourceMappingURL=ConversationTranslationCanceledEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nimport { SessionEventArgs } from \"../Exports\";\nexport class ConversationExpirationEventArgs extends SessionEventArgs {\n    constructor(expirationTime, sessionId) {\n        super(sessionId);\n        this.privExpirationTime = expirationTime;\n    }\n    /** How much longer until the conversation expires (in minutes). */\n    get expirationTime() {\n        return this.privExpirationTime;\n    }\n}\n\n//# sourceMappingURL=ConversationExpirationEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nimport { TranslationRecognitionResult } from \"../TranslationRecognitionResult\";\nexport class ConversationTranslationResult extends TranslationRecognitionResult {\n    constructor(participantId, translations, originalLanguage, resultId, reason, text, duration, offset, errorDetails, json, properties) {\n        super(translations, resultId, reason, text, duration, offset, errorDetails, json, properties);\n        this.privId = participantId;\n        this.privOrigLang = originalLanguage;\n    }\n    /**\n     * The unique identifier for the participant this result is for.\n     */\n    get participantId() {\n        return this.privId;\n    }\n    /**\n     * The original language this result was in.\n     */\n    get originalLang() {\n        return this.privOrigLang;\n    }\n}\n\n//# sourceMappingURL=ConversationTranslationResult.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createNoDashGuid, Deferred, } from \"../../common/Exports\";\n/**\n * Placeholder class for the Conversation Request Session. Based off RequestSession.\n * TODO: define what telemetry is required.\n */\nexport class ConversationRequestSession {\n    constructor(sessionId) {\n        this.privIsDisposed = false;\n        this.privDetachables = new Array();\n        this.onPreConnectionStart = (authFetchEventId, connectionId) => {\n            this.privSessionId = connectionId;\n        };\n        this.onAuthCompleted = (isError, error) => {\n            if (isError) {\n                this.onComplete();\n            }\n        };\n        this.onConnectionEstablishCompleted = (statusCode, reason) => {\n            if (statusCode === 200) {\n                return;\n            }\n            else if (statusCode === 403) {\n                this.onComplete();\n            }\n        };\n        this.onServiceTurnEndResponse = (continuousRecognition) => {\n            if (!continuousRecognition) {\n                this.onComplete();\n            }\n            else {\n                this.privRequestId = createNoDashGuid();\n            }\n        };\n        this.onComplete = () => {\n            //\n        };\n        this.privSessionId = sessionId;\n        this.privRequestId = createNoDashGuid();\n        this.privRequestCompletionDeferral = new Deferred();\n    }\n    get sessionId() {\n        return this.privSessionId;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get completionPromise() {\n        return this.privRequestCompletionDeferral.promise;\n    }\n    dispose(error) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.privIsDisposed) {\n                // we should have completed by now. If we did not its an unknown error.\n                this.privIsDisposed = true;\n                for (const detachable of this.privDetachables) {\n                    yield detachable.detach();\n                }\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=ConversationRequestSession.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { SessionEventArgs } from \"../../sdk/Exports\";\nexport class MuteAllEventArgs extends SessionEventArgs {\n    constructor(isMuted, sessionId) {\n        super(sessionId);\n        this.privIsMuted = isMuted;\n    }\n    get isMuted() {\n        return this.privIsMuted;\n    }\n}\n// tslint:disable-next-line: max-classes-per-file\nexport class LockRoomEventArgs extends SessionEventArgs {\n    constructor(isLocked, sessionId) {\n        super(sessionId);\n        this.privIsLocked = isLocked;\n    }\n    get isMuted() {\n        return this.privIsLocked;\n    }\n}\n// tslint:disable-next-line: max-classes-per-file\nexport class ParticipantEventArgs extends SessionEventArgs {\n    constructor(participant, sessionId) {\n        super(sessionId);\n        this.privParticipant = participant;\n    }\n    get participant() {\n        return this.privParticipant;\n    }\n}\n// tslint:disable-next-line: max-classes-per-file\nexport class ParticipantAttributeEventArgs extends SessionEventArgs {\n    constructor(participantId, key, value, sessionId) {\n        super(sessionId);\n        this.privKey = key;\n        this.privValue = value;\n        this.privParticipantId = participantId;\n    }\n    get value() {\n        return this.privValue;\n    }\n    get key() {\n        return this.privKey;\n    }\n    get id() {\n        return this.privParticipantId;\n    }\n}\n// tslint:disable-next-line: max-classes-per-file\nexport class ParticipantsListEventArgs extends SessionEventArgs {\n    constructor(conversationId, token, translateTo, profanityFilter, roomProfanityFilter, isRoomLocked, isMuteAll, participants, sessionId) {\n        super(sessionId);\n        this.privRoomId = conversationId;\n        this.privSessionToken = token;\n        this.privTranslateTo = translateTo;\n        this.privProfanityFilter = profanityFilter;\n        this.privRoomProfanityFilter = roomProfanityFilter;\n        this.privIsRoomLocked = isRoomLocked;\n        this.privIsRoomLocked = isMuteAll;\n        this.privParticipants = participants;\n    }\n    get sessionToken() {\n        return this.privSessionToken;\n    }\n    get conversationId() {\n        return this.privRoomId;\n    }\n    get translateTo() {\n        return this.privTranslateTo;\n    }\n    get profanityFilter() {\n        return this.privProfanityFilter;\n    }\n    get roomProfanityFilter() {\n        return this.privRoomProfanityFilter;\n    }\n    get isRoomLocked() {\n        return this.privIsRoomLocked;\n    }\n    get isMuteAll() {\n        return this.privIsMuteAll;\n    }\n    get participants() {\n        return this.privParticipants;\n    }\n}\n// tslint:disable-next-line: max-classes-per-file\nexport class ConversationReceivedTranslationEventArgs {\n    constructor(command, payload, sessionId) {\n        this.privPayload = payload;\n        this.privCommand = command;\n        this.privSessionId = sessionId;\n    }\n    get payload() {\n        return this.privPayload;\n    }\n    get command() {\n        return this.privCommand;\n    }\n    get sessionId() {\n        return this.privSessionId;\n    }\n}\n\n//# sourceMappingURL=ConversationTranslatorEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class CommandResponsePayload {\n    constructor(json) {\n        this.privCommandResponse = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new CommandResponsePayload(json);\n    }\n    get type() {\n        return this.privCommandResponse.type;\n    }\n    get command() {\n        return this.privCommandResponse.command;\n    }\n    get id() {\n        return this.privCommandResponse.id;\n    }\n    get nickname() {\n        return this.privCommandResponse.nickname;\n    }\n    get participantId() {\n        return this.privCommandResponse.participantId;\n    }\n    get roomid() {\n        return this.privCommandResponse.roomid;\n    }\n    get value() {\n        return this.privCommandResponse.value;\n    }\n}\n\n//# sourceMappingURL=CommandResponsePayload.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class ParticipantsListPayloadResponse {\n    constructor(json) {\n        this.privParticipantsPayloadResponse = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new ParticipantsListPayloadResponse(json);\n    }\n    get roomid() {\n        return this.privParticipantsPayloadResponse.roomid;\n    }\n    get id() {\n        return this.privParticipantsPayloadResponse.id;\n    }\n    get command() {\n        return this.privParticipantsPayloadResponse.command;\n    }\n    get participants() {\n        return this.privParticipantsPayloadResponse.participants;\n    }\n    get token() {\n        return this.privParticipantsPayloadResponse.token;\n    }\n    get translateTo() {\n        return this.privParticipantsPayloadResponse.translateTo;\n    }\n    get profanityFilter() {\n        return this.privParticipantsPayloadResponse.profanityFilter;\n    }\n    get roomProfanityFilter() {\n        return this.privParticipantsPayloadResponse.roomProfanityFilter;\n    }\n    get roomLocked() {\n        return this.privParticipantsPayloadResponse.roomLocked;\n    }\n    get muteAll() {\n        return this.privParticipantsPayloadResponse.muteAll;\n    }\n    get type() {\n        return this.privParticipantsPayloadResponse.type;\n    }\n}\n// tslint:disable-next-line: max-classes-per-file\nexport class ParticipantPayloadResponse {\n    constructor(json) {\n        this.privParticipantPayloadResponse = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new ParticipantPayloadResponse(json);\n    }\n    get nickname() {\n        return this.privParticipantPayloadResponse.nickname;\n    }\n    get locale() {\n        return this.privParticipantPayloadResponse.locale;\n    }\n    get usetts() {\n        return this.privParticipantPayloadResponse.usetts;\n    }\n    get ismuted() {\n        return this.privParticipantPayloadResponse.ismuted;\n    }\n    get ishost() {\n        return this.privParticipantPayloadResponse.ishost;\n    }\n    get participantId() {\n        return this.privParticipantPayloadResponse.participantId;\n    }\n    get avatar() {\n        return this.privParticipantPayloadResponse.avatar;\n    }\n}\n\n//# sourceMappingURL=ParticipantResponsePayload.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class SpeechResponsePayload {\n    constructor(json) {\n        this.privSpeechResponse = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new SpeechResponsePayload(json);\n    }\n    get recognition() {\n        return this.privSpeechResponse.recognition;\n    }\n    get translations() {\n        return this.privSpeechResponse.translations;\n    }\n    get id() {\n        return this.privSpeechResponse.id;\n    }\n    get language() {\n        return this.privSpeechResponse.language;\n    }\n    get nickname() {\n        return this.privSpeechResponse.nickname;\n    }\n    get participantId() {\n        return this.privSpeechResponse.participantId;\n    }\n    get roomid() {\n        return this.privSpeechResponse.roomid;\n    }\n    get timestamp() {\n        return this.privSpeechResponse.timestamp;\n    }\n    get type() {\n        return this.privSpeechResponse.type;\n    }\n    get isFinal() {\n        return this.privSpeechResponse.type === \"final\";\n    }\n}\n// tslint:disable-next-line: max-classes-per-file\nexport class TextResponsePayload {\n    constructor(json) {\n        this.privTextResponse = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new TextResponsePayload(json);\n    }\n    get originalText() {\n        return this.privTextResponse.originalText;\n    }\n    get translations() {\n        return this.privTextResponse.translations;\n    }\n    get id() {\n        return this.privTextResponse.id;\n    }\n    get language() {\n        return this.privTextResponse.language;\n    }\n    get nickname() {\n        return this.privTextResponse.nickname;\n    }\n    get participantId() {\n        return this.privTextResponse.participantId;\n    }\n    get roomid() {\n        return this.privTextResponse.roomid;\n    }\n    get timestamp() {\n        return this.privTextResponse.timestamp;\n    }\n    get type() {\n        return this.privTextResponse.type;\n    }\n}\n\n//# sourceMappingURL=TranslationResponsePayload.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ConnectionState, createNoDashGuid, Deferred, MessageType, } from \"../../common/Exports\";\nimport { CancellationErrorCode, CancellationReason, ConversationExpirationEventArgs, ConversationTranslationCanceledEventArgs, ConversationTranslationResult, Translations } from \"../../sdk/Exports\";\nimport { ServiceRecognizerBase } from \"../Exports\";\nimport { ConversationConnectionMessage } from \"./ConversationConnectionMessage\";\nimport { ConversationRequestSession } from \"./ConversationRequestSession\";\nimport { ConversationReceivedTranslationEventArgs, LockRoomEventArgs, MuteAllEventArgs, ParticipantAttributeEventArgs, ParticipantEventArgs, ParticipantsListEventArgs } from \"./ConversationTranslatorEventArgs\";\nimport { ConversationTranslatorCommandTypes, ConversationTranslatorMessageTypes } from \"./ConversationTranslatorInterfaces\";\nimport { CommandResponsePayload, ParticipantPayloadResponse, ParticipantsListPayloadResponse, SpeechResponsePayload, TextResponsePayload } from \"./ServiceMessages/Exports\";\n/***\n * The service adapter handles sending and receiving messages to the Conversation Translator websocket.\n */\nexport class ConversationServiceAdapter extends ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, conversationServiceConnector) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, conversationServiceConnector);\n        this.privLastPartialUtteranceId = \"\";\n        this.noOp = () => {\n            // operation not supported\n        };\n        this.privConversationServiceConnector = conversationServiceConnector;\n        this.privConversationAuthentication = authentication;\n        this.receiveMessageOverride = this.receiveConversationMessageOverride;\n        this.recognizeOverride = this.noOp;\n        this.postConnectImplOverride = this.conversationConnectImpl;\n        this.configConnectionOverride = this.configConnection;\n        this.disconnectOverride = this.privDisconnect;\n        this.privConversationRequestSession = new ConversationRequestSession(createNoDashGuid());\n        this.privConversationConnectionFactory = connectionFactory;\n        this.privConversationIsDisposed = false;\n    }\n    isDisposed() {\n        return this.privConversationIsDisposed;\n    }\n    dispose(reason) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.privConversationIsDisposed = true;\n            if (this.privConnectionConfigPromise) {\n                const connection = yield this.privConnectionConfigPromise;\n                yield connection.dispose(reason);\n            }\n        });\n    }\n    sendMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.fetchConnection();\n            return connection.send(new ConversationConnectionMessage(MessageType.Text, message));\n        });\n    }\n    sendMessageAsync(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const sink = new Deferred();\n            const connection = yield this.fetchConnection();\n            yield connection.send(new ConversationConnectionMessage(MessageType.Text, message));\n        });\n    }\n    privDisconnect() {\n        if (this.terminateMessageLoop) {\n            return;\n        }\n        this.cancelRecognition(this.privConversationRequestSession.sessionId, this.privConversationRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.NoError, \"Disconnecting\");\n        this.terminateMessageLoop = true;\n        return Promise.resolve();\n    }\n    processTypeSpecificMessages(connectionMessage, successCallback, errorCallBack) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return true;\n        });\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        this.terminateMessageLoop = true;\n        const cancelEvent = new ConversationTranslationCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n        try {\n            if (!!this.privConversationServiceConnector.canceled) {\n                this.privConversationServiceConnector.canceled(this.privConversationServiceConnector, cancelEvent);\n            }\n        }\n        catch (_a) {\n            // continue on error\n        }\n    }\n    /**\n     * Establishes a websocket connection to the end point.\n     * @param isUnAuthorized\n     */\n    conversationConnectImpl(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.privConnectionLoop = this.startMessageLoop();\n            return connection;\n        });\n    }\n    /**\n     * Process incoming websocket messages\n     */\n    receiveConversationMessageOverride() {\n        // we won't rely on the cascading promises of the connection since we want to continually be available to receive messages\n        const communicationCustodian = new Deferred();\n        this.fetchConnection().then((connection) => __awaiter(this, void 0, void 0, function* () {\n            const isDisposed = this.isDisposed();\n            const terminateMessageLoop = (!this.isDisposed() && this.terminateMessageLoop);\n            if (isDisposed || terminateMessageLoop) {\n                // We're done.\n                communicationCustodian.resolve();\n                return Promise.resolve();\n            }\n            const message = yield connection.read();\n            const sessionId = this.privConversationRequestSession.sessionId;\n            let sendFinal = false;\n            if (!message) {\n                return this.receiveConversationMessageOverride();\n            }\n            try {\n                switch (message.conversationMessageType.toLowerCase()) {\n                    case \"info\":\n                    case \"participant_command\":\n                    case \"command\":\n                        const commandPayload = CommandResponsePayload.fromJSON(message.textBody);\n                        switch (commandPayload.command.toLowerCase()) {\n                            /**\n                             * 'ParticpantList' is the first message sent to the user after the websocket connection has opened.\n                             * The consuming client must wait for this message to arrive\n                             * before starting to send their own data.\n                             */\n                            case \"participantlist\":\n                                const participantsPayload = ParticipantsListPayloadResponse.fromJSON(message.textBody);\n                                const participantsResult = participantsPayload.participants.map((p) => {\n                                    const participant = {\n                                        avatar: p.avatar,\n                                        displayName: p.nickname,\n                                        id: p.participantId,\n                                        isHost: p.ishost,\n                                        isMuted: p.ismuted,\n                                        isUsingTts: p.usetts,\n                                        preferredLanguage: p.locale\n                                    };\n                                    return participant;\n                                });\n                                if (!!this.privConversationServiceConnector.participantsListReceived) {\n                                    this.privConversationServiceConnector.participantsListReceived(this.privConversationServiceConnector, new ParticipantsListEventArgs(participantsPayload.roomid, participantsPayload.token, participantsPayload.translateTo, participantsPayload.profanityFilter, participantsPayload.roomProfanityFilter, participantsPayload.roomLocked, participantsPayload.muteAll, participantsResult, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetTranslateToLanguages' represents the list of languages being used in the Conversation by all users(?).\n                             * This is sent at the start of the Conversation\n                             */\n                            case \"settranslatetolanguages\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorCommandTypes.setTranslateToLanguages, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetProfanityFiltering' lets the client set the level of profanity filtering.\n                             * If sent by the participant the setting will effect only their own profanity level.\n                             * If sent by the host, the setting will effect all participants including the host.\n                             * Note: the profanity filters differ from Speech Service (?): 'marked', 'raw', 'removed', 'tagged'\n                             */\n                            case \"setprofanityfiltering\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorCommandTypes.setProfanityFiltering, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetMute' is sent if the participant has been muted by the host.\n                             * Check the 'participantId' to determine if the current user has been muted.\n                             */\n                            case \"setmute\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorCommandTypes.setMute, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetMuteAll' is sent if the Conversation has been muted by the host.\n                             */\n                            case \"setmuteall\":\n                                if (!!this.privConversationServiceConnector.muteAllCommandReceived) {\n                                    this.privConversationServiceConnector.muteAllCommandReceived(this.privConversationServiceConnector, new MuteAllEventArgs(commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'RoomExpirationWarning' is sent towards the end of the Conversation session to give a timeout warning.\n                             */\n                            case \"roomexpirationwarning\":\n                                if (!!this.privConversationServiceConnector.conversationExpiration) {\n                                    this.privConversationServiceConnector.conversationExpiration(this.privConversationServiceConnector, new ConversationExpirationEventArgs(commandPayload.value, this.privConversationRequestSession.sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetUseTts' is sent as a confirmation if the user requests TTS to be turned on or off.\n                             */\n                            case \"setusetts\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorCommandTypes.setUseTTS, commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'SetLockState' is set if the host has locked or unlocked the Conversation.\n                             */\n                            case \"setlockstate\":\n                                if (!!this.privConversationServiceConnector.lockRoomCommandReceived) {\n                                    this.privConversationServiceConnector.lockRoomCommandReceived(this.privConversationServiceConnector, new LockRoomEventArgs(commandPayload.value, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'ChangeNickname' is received if a user changes their display name.\n                             * Any cached particpiants list should be updated to reflect the display name.\n                             */\n                            case \"changenickname\":\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector, new ParticipantAttributeEventArgs(commandPayload.participantId, ConversationTranslatorCommandTypes.changeNickname, commandPayload.nickname, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'JoinSession' is sent when a user joins the Conversation.\n                             */\n                            case \"joinsession\":\n                                const joinParticipantPayload = ParticipantPayloadResponse.fromJSON(message.textBody);\n                                const joiningParticipant = {\n                                    avatar: joinParticipantPayload.avatar,\n                                    displayName: joinParticipantPayload.nickname,\n                                    id: joinParticipantPayload.participantId,\n                                    isHost: joinParticipantPayload.ishost,\n                                    isMuted: joinParticipantPayload.ismuted,\n                                    isUsingTts: joinParticipantPayload.usetts,\n                                    preferredLanguage: joinParticipantPayload.locale,\n                                };\n                                if (!!this.privConversationServiceConnector.participantJoinCommandReceived) {\n                                    this.privConversationServiceConnector.participantJoinCommandReceived(this.privConversationServiceConnector, new ParticipantEventArgs(joiningParticipant, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'LeaveSession' is sent when a user leaves the Conversation'.\n                             */\n                            case \"leavesession\":\n                                const leavingParticipant = {\n                                    id: commandPayload.participantId\n                                };\n                                if (!!this.privConversationServiceConnector.participantLeaveCommandReceived) {\n                                    this.privConversationServiceConnector.participantLeaveCommandReceived(this.privConversationServiceConnector, new ParticipantEventArgs(leavingParticipant, sessionId));\n                                }\n                                break;\n                            /**\n                             * 'DisconnectSession' is sent when a user is disconnected from the session (e.g. network problem).\n                             * Check the 'ParticipantId' to check whether the message is for the current user.\n                             */\n                            case \"disconnectsession\":\n                                const disconnectParticipant = {\n                                    id: commandPayload.participantId\n                                };\n                                break;\n                            /**\n                             * Message not recognized.\n                             */\n                            default:\n                                break;\n                        }\n                        break;\n                    /**\n                     * 'partial' (or 'hypothesis') represents a unfinalized speech message.\n                     */\n                    case \"partial\":\n                    /**\n                     * 'final' (or 'phrase') represents a finalized speech message.\n                     */\n                    case \"final\":\n                        const speechPayload = SpeechResponsePayload.fromJSON(message.textBody);\n                        const speechResult = new ConversationTranslationResult(speechPayload.participantId, this.getTranslations(speechPayload.translations), speechPayload.language, undefined, undefined, speechPayload.recognition, undefined, undefined, message.textBody, undefined);\n                        if (speechPayload.isFinal) {\n                            // check the length, sometimes empty finals are returned\n                            if (speechResult.text !== undefined && speechResult.text.length > 0) {\n                                sendFinal = true;\n                            }\n                            else if (speechPayload.id === this.privLastPartialUtteranceId) {\n                                // send final as normal. We had a non-empty partial for this same utterance\n                                // so sending the empty final is important\n                                sendFinal = true;\n                            }\n                            else {\n                                // suppress unneeded final\n                            }\n                            if (sendFinal) {\n                                if (!!this.privConversationServiceConnector.translationReceived) {\n                                    this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector, new ConversationReceivedTranslationEventArgs(ConversationTranslatorMessageTypes.final, speechResult, sessionId));\n                                }\n                            }\n                        }\n                        else if (speechResult.text !== undefined) {\n                            this.privLastPartialUtteranceId = speechPayload.id;\n                            if (!!this.privConversationServiceConnector.translationReceived) {\n                                this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector, new ConversationReceivedTranslationEventArgs(ConversationTranslatorMessageTypes.partial, speechResult, sessionId));\n                            }\n                        }\n                        break;\n                    /**\n                     * \"translated_message\" is a text message or instant message (IM).\n                     */\n                    case \"translated_message\":\n                        const textPayload = TextResponsePayload.fromJSON(message.textBody);\n                        const textResult = new ConversationTranslationResult(textPayload.participantId, this.getTranslations(textPayload.translations), textPayload.language, undefined, undefined, textPayload.originalText, undefined, undefined, undefined, message.textBody, undefined);\n                        if (!!this.privConversationServiceConnector.translationReceived) {\n                            this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector, new ConversationReceivedTranslationEventArgs(ConversationTranslatorMessageTypes.instantMessage, textResult, sessionId));\n                        }\n                        break;\n                    default:\n                        // ignore any unsupported message types\n                        break;\n                }\n            }\n            catch (e) {\n                // continue\n            }\n            return this.receiveConversationMessageOverride();\n        }), (error) => {\n            this.terminateMessageLoop = true;\n        });\n        return communicationCustodian.promise;\n    }\n    startMessageLoop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.terminateMessageLoop = false;\n            const messageRetrievalPromise = this.receiveConversationMessageOverride();\n            try {\n                const r = yield messageRetrievalPromise;\n                return r;\n            }\n            catch (error) {\n                this.cancelRecognition(this.privRequestSession ? this.privRequestSession.sessionId : \"\", this.privRequestSession ? this.privRequestSession.requestId : \"\", CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\n                return null;\n            }\n        });\n    }\n    // Takes an established websocket connection to the endpoint\n    configConnection() {\n        if (this.privConnectionConfigPromise) {\n            return this.privConnectionConfigPromise.then((connection) => {\n                if (connection.state() === ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionConfigPromise = null;\n                    return this.configConnection();\n                }\n                return this.privConnectionConfigPromise;\n            }, (error) => {\n                this.privConnectionId = null;\n                this.privConnectionConfigPromise = null;\n                return this.configConnection();\n            });\n        }\n        if (this.terminateMessageLoop) {\n            return Promise.resolve(undefined);\n        }\n        this.privConnectionConfigPromise = this.connectImpl().then((connection) => {\n            return connection;\n        });\n        return this.privConnectionConfigPromise;\n    }\n    getTranslations(serviceResultTranslations) {\n        let translations;\n        if (undefined !== serviceResultTranslations) {\n            translations = new Translations();\n            for (const translation of serviceResultTranslations) {\n                translations.set(translation.lang, translation.translation);\n            }\n        }\n        return translations;\n    }\n}\n\n//# sourceMappingURL=ConversationServiceAdapter.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { RecognizerConfig } from \"../../common.speech/Exports\";\nimport { BackgroundEvent, Events } from \"../../common/Exports\";\nimport { Contracts } from \"../../sdk/Contracts\";\nimport { Connection, Recognizer } from \"../../sdk/Exports\";\nimport { ConversationConnectionFactory } from \"./ConversationConnectionFactory\";\nimport { ConversationServiceAdapter } from \"./ConversationServiceAdapter\";\nimport { PromiseToEmptyCallback } from \"./ConversationUtils\";\nexport class ConversationRecognizerFactory {\n    static fromConfig(speechConfig, audioConfig) {\n        return new ConversationTranslatorRecognizer(speechConfig, audioConfig);\n    }\n}\n/**\n * Sends messages to the Conversation Translator websocket and listens for incoming events containing websocket messages.\n * Based off the recognizers in the SDK folder.\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class ConversationTranslatorRecognizer extends Recognizer {\n    constructor(speechConfig, audioConfig) {\n        const serviceConfigImpl = speechConfig;\n        Contracts.throwIfNull(serviceConfigImpl, \"speechConfig\");\n        super(audioConfig, serviceConfigImpl.properties, new ConversationConnectionFactory());\n        this.privIsDisposed = false;\n        this.privProperties = serviceConfigImpl.properties.clone();\n        this.privConnection = Connection.fromRecognizer(this);\n    }\n    set connected(cb) {\n        this.privConnection.connected = cb;\n    }\n    set disconnected(cb) {\n        this.privConnection.disconnected = cb;\n    }\n    /**\n     * Return the speech language used by the recognizer\n     */\n    get speechRecognitionLanguage() {\n        return this.privSpeechRecognitionLanguage;\n    }\n    /**\n     * Return the properties for the recognizer\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    /**\n     * Connect to the recognizer\n     * @param token\n     */\n    connect(token, cb, err) {\n        try {\n            Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts.throwIfNullOrWhitespace(token, \"token\");\n            this.privReco.conversationTranslatorToken = token;\n            this.privReco.connectAsync(cb, err);\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n        }\n    }\n    /**\n     * Disconnect from the recognizer\n     */\n    disconnect(cb, err) {\n        try {\n            Contracts.throwIfDisposed(this.privIsDisposed);\n            this.privReco.disconnect().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n            // Destroy the recognizer.\n            this.dispose(true).catch((reason) => {\n                Events.instance.onEvent(new BackgroundEvent(reason));\n            });\n        }\n    }\n    /**\n     * Send the mute all participants command to the websocket\n     * @param conversationId\n     * @param participantId\n     * @param isMuted\n     */\n    sendRequest(command, cb, err) {\n        try {\n            Contracts.throwIfDisposed(this.privIsDisposed);\n            this.sendMessage(command, cb, err);\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n            // Destroy the recognizer.\n            this.dispose(true).catch((reason) => {\n                Events.instance.onEvent(new BackgroundEvent(reason));\n            });\n        }\n    }\n    /**\n     * Close and dispose the recognizer\n     */\n    close() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            Contracts.throwIfDisposed(this.privIsDisposed);\n            (_a = this.privConnection) === null || _a === void 0 ? void 0 : _a.closeConnection();\n            (_b = this.privConnection) === null || _b === void 0 ? void 0 : _b.close();\n            this.privConnection = undefined;\n            yield this.dispose(true);\n        });\n    }\n    /**\n     * Dispose the recognizer\n     * @param disposing\n     */\n    dispose(disposing) {\n        const _super = Object.create(null, {\n            dispose: { get: () => super.dispose }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.privIsDisposed) {\n                return;\n            }\n            if (disposing) {\n                this.privIsDisposed = true;\n                if (!!this.privConnection) {\n                    this.privConnection.closeConnection();\n                    this.privConnection.close();\n                    this.privConnection = undefined;\n                }\n                yield _super.dispose.call(this, disposing);\n            }\n        });\n    }\n    /**\n     * Create the config for the recognizer\n     * @param speechConfig\n     */\n    createRecognizerConfig(speechConfig) {\n        return new RecognizerConfig(speechConfig, this.privProperties);\n    }\n    /**\n     * Create the service recognizer.\n     * The audio source is redundnant here but is required by the implementation.\n     * @param authentication\n     * @param connectionFactory\n     * @param audioConfig\n     * @param recognizerConfig\n     */\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const audioSource = audioConfig;\n        return new ConversationServiceAdapter(authentication, connectionFactory, audioSource, recognizerConfig, this);\n    }\n    sendMessage(msg, cb, err) {\n        const withAsync = this.privReco;\n        PromiseToEmptyCallback(withAsync.sendMessageAsync(msg), cb, err);\n    }\n}\n\n//# sourceMappingURL=ConversationTranslatorRecognizer.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nexport var ParticipantChangedReason;\n(function (ParticipantChangedReason) {\n    /** Participant has joined the conversation. */\n    ParticipantChangedReason[ParticipantChangedReason[\"JoinedConversation\"] = 0] = \"JoinedConversation\";\n    /** Participant has left the conversation. This could be voluntary, or involuntary\n     *  (e.g. they are experiencing networking issues).\n     */\n    ParticipantChangedReason[ParticipantChangedReason[\"LeftConversation\"] = 1] = \"LeftConversation\";\n    /** The participants' state has changed (e.g. they became muted, changed their nickname). */\n    ParticipantChangedReason[ParticipantChangedReason[\"Updated\"] = 2] = \"Updated\";\n})(ParticipantChangedReason || (ParticipantChangedReason = {}));\n\n//# sourceMappingURL=ParticipantChangedReason.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nimport { SessionEventArgs } from \"../Exports\";\nexport class ConversationParticipantsChangedEventArgs extends SessionEventArgs {\n    constructor(reason, participants, sessionId) {\n        super(sessionId);\n        this.privReason = reason;\n        this.privParticipant = participants;\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get participants() {\n        return this.privParticipant;\n    }\n}\n\n//# sourceMappingURL=ConversationParticipantsChangedEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nimport { RecognitionEventArgs } from \"../Exports\";\nexport class ConversationTranslationEventArgs extends RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {ConversationTranslationResult} result - The translation recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the recognition result.\n     * @returns {ConversationTranslationResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\n\n//# sourceMappingURL=ConversationTranslationEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nimport { PropertyCollection } from \"../Exports\";\nexport class User {\n    constructor(userId) {\n        this.privUserId = userId;\n    }\n    get userId() {\n        return this.privUserId;\n    }\n}\n// tslint:disable-next-line: max-classes-per-file\nexport class Participant {\n    constructor(id, avatar, displayName, isHost, isMuted, isUsingTts, preferredLanguage, voice) {\n        this.privId = id;\n        this.privAvatar = avatar;\n        this.privDisplayName = displayName;\n        this.privIsHost = isHost;\n        this.privIsMuted = isMuted;\n        this.privIsUsingTts = isUsingTts;\n        this.privPreferredLanguage = preferredLanguage;\n        this.privVoice = voice;\n        this.privProperties = new PropertyCollection();\n    }\n    static From(id, language, voice) {\n        return new Participant(id, \"\", id, false, false, false, language, voice);\n    }\n    get avatar() {\n        return this.privAvatar;\n    }\n    get displayName() {\n        return this.privDisplayName;\n    }\n    get id() {\n        return this.privId;\n    }\n    get preferredLanguage() {\n        return this.privPreferredLanguage;\n    }\n    get isHost() {\n        return this.privIsHost;\n    }\n    get isMuted() {\n        return this.privIsMuted;\n    }\n    get isUsingTts() {\n        return this.privIsUsingTts;\n    }\n    get voice() {\n        return this.privVoice;\n    }\n    get properties() {\n        return this.privProperties;\n    }\n}\n\n//# sourceMappingURL=IParticipant.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ConversationConnectionConfig, ConversationManager, ConversationRecognizerFactory, ConversationTranslatorCommandTypes, ConversationTranslatorMessageTypes, InternalParticipants } from \"../../common.speech/Exports\";\nimport { marshalPromiseToCallbacks } from \"../../common/Exports\";\nimport { Contracts } from \"../Contracts\";\nimport { ConversationParticipantsChangedEventArgs, ConversationTranslationEventArgs, Participant, ParticipantChangedReason, ProfanityOption, PropertyCollection, PropertyId, } from \"../Exports\";\nexport class Conversation {\n    constructor() { }\n    /**\n     * Create a conversation\n     * @param speechConfig\n     * @param cb\n     * @param err\n     */\n    static createConversationAsync(speechConfig, arg2, arg3, arg4) {\n        Contracts.throwIfNullOrUndefined(speechConfig, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"config\"));\n        Contracts.throwIfNullOrUndefined(speechConfig.region, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Region\"));\n        if (!speechConfig.subscriptionKey && !speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceAuthorization_Token])) {\n            Contracts.throwIfNullOrUndefined(speechConfig.subscriptionKey, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Key\"));\n        }\n        if (typeof arg2 === \"string\") {\n            const conversationImpl = new ConversationImpl(speechConfig, arg2);\n            marshalPromiseToCallbacks((() => __awaiter(this, void 0, void 0, function* () { return; }))(), arg3, arg4);\n            return conversationImpl;\n        }\n        else {\n            const conversationImpl = new ConversationImpl(speechConfig);\n            const cb = arg2;\n            const err = arg3;\n            conversationImpl.createConversationAsync((() => {\n                if (!!cb) {\n                    cb();\n                }\n            }), (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n            return conversationImpl;\n        }\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class ConversationImpl extends Conversation {\n    /**\n     * Create a conversation impl\n     * @param speechConfig\n     * @param {string} id - optional conversationId\n     */\n    constructor(speechConfig, id) {\n        super();\n        this.privIsDisposed = false;\n        this.privIsConnected = false;\n        this.privErrors = ConversationConnectionConfig.restErrors;\n        this.privConversationId = \"\";\n        /** websocket callbacks */\n        this.onConnected = (e) => {\n            this.privIsConnected = true;\n            try {\n                if (!!this.privConversationTranslator.sessionStarted) {\n                    this.privConversationTranslator.sessionStarted(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onDisconnected = (e) => __awaiter(this, void 0, void 0, function* () {\n            yield this.close(false);\n            try {\n                if (!!this.privConversationTranslator.sessionStopped) {\n                    this.privConversationTranslator.sessionStopped(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        });\n        this.onCanceled = (r, e) => __awaiter(this, void 0, void 0, function* () {\n            yield this.close(false); // ?\n            try {\n                if (!!this.privConversationTranslator.canceled) {\n                    this.privConversationTranslator.canceled(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        });\n        this.onParticipantUpdateCommandReceived = (r, e) => {\n            var _a, _b;\n            try {\n                const updatedParticipant = this.privParticipants.getParticipant(e.id);\n                if (updatedParticipant !== undefined) {\n                    switch (e.key) {\n                        case ConversationTranslatorCommandTypes.changeNickname:\n                            updatedParticipant.displayName = e.value;\n                            break;\n                        case ConversationTranslatorCommandTypes.setUseTTS:\n                            updatedParticipant.useTts = e.value;\n                            break;\n                        case ConversationTranslatorCommandTypes.setProfanityFiltering:\n                            updatedParticipant.profanity = e.value;\n                            break;\n                        case ConversationTranslatorCommandTypes.setMute:\n                            updatedParticipant.isMuted = e.value;\n                            break;\n                        case ConversationTranslatorCommandTypes.setTranslateToLanguages:\n                            updatedParticipant.translateToLanguages = e.value;\n                            break;\n                    }\n                    this.privParticipants.addOrUpdateParticipant(updatedParticipant);\n                    if (!!((_a = this.privConversationTranslator) === null || _a === void 0 ? void 0 : _a.participantsChanged)) {\n                        (_b = this.privConversationTranslator) === null || _b === void 0 ? void 0 : _b.participantsChanged(this.privConversationTranslator, new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.Updated, [this.toParticipant(updatedParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onLockRoomCommandReceived = (r, e) => {\n            // TODO\n        };\n        this.onMuteAllCommandReceived = (r, e) => {\n            var _a, _b;\n            try {\n                this.privParticipants.participants.forEach((p) => p.isMuted = (p.isHost ? false : e.isMuted));\n                if (!!((_a = this.privConversationTranslator) === null || _a === void 0 ? void 0 : _a.participantsChanged)) {\n                    (_b = this.privConversationTranslator) === null || _b === void 0 ? void 0 : _b.participantsChanged(this.privConversationTranslator, new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.Updated, this.toParticipants(false), e.sessionId));\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantJoinCommandReceived = (r, e) => {\n            var _a, _b;\n            try {\n                const newParticipant = this.privParticipants.addOrUpdateParticipant(e.participant);\n                if (newParticipant !== undefined) {\n                    if (!!((_a = this.privConversationTranslator) === null || _a === void 0 ? void 0 : _a.participantsChanged)) {\n                        (_b = this.privConversationTranslator) === null || _b === void 0 ? void 0 : _b.participantsChanged(this.privConversationTranslator, new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.JoinedConversation, [this.toParticipant(newParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantLeaveCommandReceived = (r, e) => {\n            var _a, _b;\n            try {\n                const ejectedParticipant = this.privParticipants.getParticipant(e.participant.id);\n                if (ejectedParticipant !== undefined) {\n                    // remove the participant from the internal participants list\n                    this.privParticipants.deleteParticipant(e.participant.id);\n                    if (!!((_a = this.privConversationTranslator) === null || _a === void 0 ? void 0 : _a.participantsChanged)) {\n                        // notify subscribers that the participant has left the conversation\n                        (_b = this.privConversationTranslator) === null || _b === void 0 ? void 0 : _b.participantsChanged(this.privConversationTranslator, new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.LeftConversation, [this.toParticipant(ejectedParticipant)], e.sessionId));\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onTranslationReceived = (r, e) => {\n            var _a, _b, _c, _d, _e, _f;\n            try {\n                switch (e.command) {\n                    case ConversationTranslatorMessageTypes.final:\n                        if (!!((_a = this.privConversationTranslator) === null || _a === void 0 ? void 0 : _a.transcribed)) {\n                            (_b = this.privConversationTranslator) === null || _b === void 0 ? void 0 : _b.transcribed(this.privConversationTranslator, new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                    case ConversationTranslatorMessageTypes.partial:\n                        if (!!((_c = this.privConversationTranslator) === null || _c === void 0 ? void 0 : _c.transcribing)) {\n                            (_d = this.privConversationTranslator) === null || _d === void 0 ? void 0 : _d.transcribing(this.privConversationTranslator, new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                    case ConversationTranslatorMessageTypes.instantMessage:\n                        if (!!((_e = this.privConversationTranslator) === null || _e === void 0 ? void 0 : _e.textMessageReceived)) {\n                            (_f = this.privConversationTranslator) === null || _f === void 0 ? void 0 : _f.textMessageReceived(this.privConversationTranslator, new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\n                        }\n                        break;\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onParticipantsListReceived = (r, e) => {\n            var _a, _b, _c;\n            try {\n                // check if the session token needs to be updated\n                if (e.sessionToken !== undefined && e.sessionToken !== null) {\n                    this.privRoom.token = e.sessionToken;\n                }\n                // save the participants\n                this.privParticipants.participants = [...e.participants];\n                // enable the conversation\n                if (this.privParticipants.me !== undefined) {\n                    this.privIsReady = true;\n                }\n                if (!!((_a = this.privConversationTranslator) === null || _a === void 0 ? void 0 : _a.participantsChanged)) {\n                    (_b = this.privConversationTranslator) === null || _b === void 0 ? void 0 : _b.participantsChanged(this.privConversationTranslator, new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.JoinedConversation, this.toParticipants(true), e.sessionId));\n                }\n                // if this is the host, update the nickname if needed\n                if (this.me.isHost) {\n                    const nickname = (_c = this.privConversationTranslator) === null || _c === void 0 ? void 0 : _c.properties.getProperty(PropertyId.ConversationTranslator_Name);\n                    if (nickname !== undefined && nickname.length > 0 && nickname !== this.me.displayName) {\n                        // issue a change nickname request\n                        this.changeNicknameAsync(nickname);\n                    }\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.onConversationExpiration = (r, e) => {\n            var _a, _b;\n            try {\n                if (!!((_a = this.privConversationTranslator) === null || _a === void 0 ? void 0 : _a.conversationExpiration)) {\n                    (_b = this.privConversationTranslator) === null || _b === void 0 ? void 0 : _b.conversationExpiration(this.privConversationTranslator, e);\n                }\n            }\n            catch (e) {\n                //\n            }\n        };\n        this.privProperties = new PropertyCollection();\n        this.privManager = new ConversationManager();\n        // check the speech language\n        const language = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\n        if (!language) {\n            speechConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage], ConversationConnectionConfig.defaultLanguageCode);\n        }\n        this.privLanguage = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\n        if (!id) {\n            // check the target language(s)\n            if (speechConfig.targetLanguages.length === 0) {\n                speechConfig.addTargetLanguage(this.privLanguage);\n            }\n            // check the profanity setting: speech and conversationTranslator should be in sync\n            const profanity = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceResponse_ProfanityOption]);\n            if (!profanity) {\n                speechConfig.setProfanity(ProfanityOption.Masked);\n            }\n            // check the nickname: it should pass this regex: ^\\w+([\\s-][\\w\\(\\)]+)*$\"\n            // TODO: specify the regex required. Nicknames must be unique or get the duplicate nickname error\n            // TODO: check what the max length is and if a truncation is required or if the service handles it without an error\n            let hostNickname = speechConfig.getProperty(PropertyId[PropertyId.ConversationTranslator_Name]);\n            if (hostNickname === undefined || hostNickname === null || hostNickname.length <= 1 || hostNickname.length > 50) {\n                hostNickname = \"Host\";\n            }\n            speechConfig.setProperty(PropertyId[PropertyId.ConversationTranslator_Name], hostNickname);\n        }\n        else {\n            this.privConversationId = id;\n        }\n        // save the speech config for future usage\n        this.privConfig = speechConfig;\n        // save the config properties\n        const configImpl = speechConfig;\n        Contracts.throwIfNull(configImpl, \"speechConfig\");\n        this.privProperties = configImpl.properties.clone();\n        this.privIsConnected = false;\n        this.privParticipants = new InternalParticipants();\n        this.privIsReady = false;\n        this.privTextMessageMaxLength = 1000;\n    }\n    set conversationTranslator(value) {\n        this.privConversationTranslator = value;\n    }\n    // get the internal data about a conversation\n    get room() {\n        return this.privRoom;\n    }\n    // get the wrapper for connecting to the websockets\n    get connection() {\n        return this.privConversationRecognizer; // this.privConnection;\n    }\n    // get / set the speech auth token\n    get authorizationToken() {\n        return this.privToken;\n    }\n    set authorizationToken(value) {\n        Contracts.throwIfNullOrWhitespace(value, \"authorizationToken\");\n        this.privToken = value;\n    }\n    // get the config\n    get config() {\n        return this.privConfig;\n    }\n    // get the conversation Id\n    get conversationId() {\n        return this.privRoom ? this.privRoom.roomId : this.privConversationId;\n    }\n    // get the properties\n    get properties() {\n        return this.privProperties;\n    }\n    // get the speech language\n    get speechRecognitionLanguage() {\n        return this.privLanguage;\n    }\n    get isMutedByHost() {\n        var _a, _b;\n        return ((_a = this.privParticipants.me) === null || _a === void 0 ? void 0 : _a.isHost) ? false : (_b = this.privParticipants.me) === null || _b === void 0 ? void 0 : _b.isMuted;\n    }\n    get isConnected() {\n        return this.privIsConnected && this.privIsReady;\n    }\n    get participants() {\n        return this.toParticipants(true);\n    }\n    get me() {\n        return this.toParticipant(this.privParticipants.me);\n    }\n    get host() {\n        return this.toParticipant(this.privParticipants.host);\n    }\n    /**\n     * Create a new conversation as Host\n     * @param cb\n     * @param err\n     */\n    createConversationAsync(cb, err) {\n        try {\n            if (!!this.privConversationRecognizer) {\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\n            }\n            this.privManager.createOrJoin(this.privProperties, undefined, ((room) => {\n                if (!room) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedConnect), err);\n                }\n                this.privRoom = room;\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Starts a new conversation as host.\n     * @param cb\n     * @param err\n     */\n    startConversationAsync(cb, err) {\n        try {\n            // check if there is already a recognizer\n            if (!!this.privConversationRecognizer) {\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\n            }\n            // check if there is conversation data available\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedConnect);\n            // connect to the conversation websocket\n            this.privParticipants.meId = this.privRoom.participantId;\n            this.privConversationRecognizer = ConversationRecognizerFactory.fromConfig(this.privConfig);\n            // Because ConversationTranslator manually sets up and manages the connection, Conversation\n            // has to forward serviceRecognizer connection events that usually get passed automatically\n            this.privConversationRecognizer.connected = this.onConnected;\n            this.privConversationRecognizer.disconnected = this.onDisconnected;\n            this.privConversationRecognizer.canceled = this.onCanceled;\n            this.privConversationRecognizer.participantUpdateCommandReceived = this.onParticipantUpdateCommandReceived;\n            this.privConversationRecognizer.lockRoomCommandReceived = this.onLockRoomCommandReceived;\n            this.privConversationRecognizer.muteAllCommandReceived = this.onMuteAllCommandReceived;\n            this.privConversationRecognizer.participantJoinCommandReceived = this.onParticipantJoinCommandReceived;\n            this.privConversationRecognizer.participantLeaveCommandReceived = this.onParticipantLeaveCommandReceived;\n            this.privConversationRecognizer.translationReceived = this.onTranslationReceived;\n            this.privConversationRecognizer.participantsListReceived = this.onParticipantsListReceived;\n            this.privConversationRecognizer.conversationExpiration = this.onConversationExpiration;\n            this.privConversationRecognizer.connect(this.privRoom.token, (() => {\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Join a conversation as a participant.\n     * @param { IParticipant } participant - participant to add\n     * @param cb\n     * @param err\n     */\n    addParticipantAsync(participant, cb, err) {\n        Contracts.throwIfNullOrUndefined(participant, \"Participant\");\n        marshalPromiseToCallbacks(this.addParticipantImplAsync(participant), cb, err);\n    }\n    /**\n     * Join a conversation as a participant.\n     * @param conversation\n     * @param nickname\n     * @param lang\n     * @param cb\n     * @param err\n     */\n    joinConversationAsync(conversationId, nickname, lang, cb, err) {\n        try {\n            // TODO\n            // if (!!this.privConversationRecognizer) {\n            //     throw new Error(this.privErrors.permissionDeniedStart);\n            // }\n            Contracts.throwIfNullOrWhitespace(conversationId, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversationId\"));\n            Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n            Contracts.throwIfNullOrWhitespace(lang, this.privErrors.invalidArgs.replace(\"{arg}\", \"language\"));\n            // join the conversation\n            this.privManager.createOrJoin(this.privProperties, conversationId, ((room) => {\n                Contracts.throwIfNullOrUndefined(room, this.privErrors.permissionDeniedConnect);\n                this.privRoom = room;\n                this.privConfig.authorizationToken = room.cognitiveSpeechAuthToken;\n                // join callback\n                if (!!cb) {\n                    cb(room.cognitiveSpeechAuthToken);\n                }\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Deletes a conversation\n     * @param cb\n     * @param err\n     */\n    deleteConversationAsync(cb, err) {\n        marshalPromiseToCallbacks(this.deleteConversationImplAsync(), cb, err);\n    }\n    deleteConversationImplAsync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            Contracts.throwIfNullOrUndefined(this.privProperties, this.privErrors.permissionDeniedConnect);\n            Contracts.throwIfNullOrWhitespace(this.privRoom.token, this.privErrors.permissionDeniedConnect);\n            yield this.privManager.leave(this.privProperties, this.privRoom.token);\n            this.dispose();\n        });\n    }\n    /**\n     * Issues a request to close the client websockets\n     * @param cb\n     * @param err\n     */\n    endConversationAsync(cb, err) {\n        marshalPromiseToCallbacks(this.endConversationImplAsync(), cb, err);\n    }\n    endConversationImplAsync() {\n        return this.close(true);\n    }\n    /**\n     * Issues a request to lock the conversation\n     * @param cb\n     * @param err\n     */\n    lockConversationAsync(cb, err) {\n        var _a;\n        try {\n            Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"lock\")), err);\n            }\n            (_a = this.privConversationRecognizer) === null || _a === void 0 ? void 0 : _a.sendRequest(this.getLockCommand(true), (() => {\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to mute the conversation\n     * @param cb\n     * @param err\n     */\n    muteAllParticipantsAsync(cb, err) {\n        var _a;\n        try {\n            Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts.throwIfNullOrUndefined(this.privConversationRecognizer, this.privErrors.permissionDeniedSend);\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the user's permissions\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"mute\")), err);\n            }\n            (_a = this.privConversationRecognizer) === null || _a === void 0 ? void 0 : _a.sendRequest(this.getMuteAllCommand(true), (() => {\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to mute a participant in the conversation\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    muteParticipantAsync(userId, cb, err) {\n        var _a;\n        try {\n            Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the connection is open (host + participant can perform the mute command)\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // if not host, check the participant is not muting another participant\n            if (!this.me.isHost && this.me.id !== userId) {\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\n            }\n            // check the user exists\n            const exists = this.privParticipants.getParticipantIndex(userId);\n            if (exists === -1) {\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n            }\n            (_a = this.privConversationRecognizer) === null || _a === void 0 ? void 0 : _a.sendRequest(this.getMuteCommand(userId, true), (() => {\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to remove a participant from the conversation\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    removeParticipantAsync(userId, cb, err) {\n        var _a;\n        try {\n            Contracts.throwIfDisposed(this.privIsDisposed);\n            if (!!this.privTranscriberRecognizer && userId.hasOwnProperty(\"id\")) {\n                // Assume this is a transcription participant\n                marshalPromiseToCallbacks(this.removeParticipantImplAsync(userId), cb, err);\n            }\n            else {\n                Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n                Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n                if (!this.canSendAsHost) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"remove\")), err);\n                }\n                let participantId = \"\";\n                if (typeof userId === \"string\") {\n                    participantId = userId;\n                }\n                else if (userId.hasOwnProperty(\"id\")) {\n                    const participant = userId;\n                    participantId = participant.id;\n                }\n                else if (userId.hasOwnProperty(\"userId\")) {\n                    const user = userId;\n                    participantId = user.userId;\n                }\n                Contracts.throwIfNullOrWhitespace(participantId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n                // check the participant exists\n                const index = this.participants.findIndex((p) => p.id === participantId);\n                if (index === -1) {\n                    this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n                }\n                (_a = this.privConversationRecognizer) === null || _a === void 0 ? void 0 : _a.sendRequest(this.getEjectCommand(participantId), (() => {\n                    this.handleCallback(cb, err);\n                }), ((error) => {\n                    this.handleError(error, err);\n                }));\n            }\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unlock the conversation\n     * @param cb\n     * @param err\n     */\n    unlockConversationAsync(cb, err) {\n        var _a;\n        try {\n            Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unlock\")), err);\n            }\n            (_a = this.privConversationRecognizer) === null || _a === void 0 ? void 0 : _a.sendRequest(this.getLockCommand(false), (() => {\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unmute all participants in the conversation\n     * @param cb\n     * @param err\n     */\n    unmuteAllParticipantsAsync(cb, err) {\n        var _a;\n        try {\n            Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSendAsHost) {\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unmute all\")), err);\n            }\n            (_a = this.privConversationRecognizer) === null || _a === void 0 ? void 0 : _a.sendRequest(this.getMuteAllCommand(false), (() => {\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Issues a request to unmute a participant in the conversation\n     * @param userId\n     * @param cb\n     * @param err\n     */\n    unmuteParticipantAsync(userId, cb, err) {\n        var _a;\n        try {\n            Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            // check the connection is open (host + participant can perform the mute command)\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // if not host, check the participant is not muting another participant\n            if (!this.me.isHost && this.me.id !== userId) {\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\n            }\n            // check the user exists\n            const exists = this.privParticipants.getParticipantIndex(userId);\n            if (exists === -1) {\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\n            }\n            (_a = this.privConversationRecognizer) === null || _a === void 0 ? void 0 : _a.sendRequest(this.getMuteCommand(userId, false), (() => {\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Send a text message\n     * @param message\n     * @param cb\n     * @param err\n     */\n    sendTextMessageAsync(message, cb, err) {\n        var _a;\n        try {\n            Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", \"message\"));\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            // TODO: is a max length check required?\n            if (message.length > this.privTextMessageMaxLength) {\n                this.handleError(new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"message length\")), err);\n            }\n            (_a = this.privConversationRecognizer) === null || _a === void 0 ? void 0 : _a.sendRequest(this.getMessageCommand(message), (() => {\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Change nickname\n     * @param message\n     * @param cb\n     * @param err\n     */\n    changeNicknameAsync(nickname, cb, err) {\n        var _a;\n        try {\n            Contracts.throwIfDisposed(this.privIsDisposed);\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\n            Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\n            if (!this.canSend) {\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n            }\n            (_a = this.privConversationRecognizer) === null || _a === void 0 ? void 0 : _a.sendRequest(this.getChangeNicknameCommand(nickname), (() => {\n                this.handleCallback(cb, err);\n            }), ((error) => {\n                this.handleError(error, err);\n            }));\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    dispose(reason) {\n        var _a;\n        if (this.isDisposed) {\n            return;\n        }\n        this.privIsDisposed = true;\n        (_a = this.config) === null || _a === void 0 ? void 0 : _a.close();\n        this.privConfig = undefined;\n        this.privLanguage = undefined;\n        this.privProperties = undefined;\n        this.privRoom = undefined;\n        this.privToken = undefined;\n        this.privManager = undefined;\n        this.privConversationRecognizer = undefined;\n        this.privIsConnected = false;\n        this.privIsReady = false;\n        this.privParticipants = undefined;\n    }\n    get transcriberRecognizer() {\n        return this.privTranscriberRecognizer;\n    }\n    connectTranscriberRecognizer(recognizer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!!this.privTranscriberRecognizer) {\n                yield this.privTranscriberRecognizer.close();\n            }\n            this.privTranscriberRecognizer = recognizer;\n            this.privTranscriberRecognizer.conversation = this;\n        });\n    }\n    get conversationInfo() {\n        const convId = this.conversationId;\n        const p = this.participants.map((part) => {\n            return {\n                id: part.id,\n                preferredLanguage: part.preferredLanguage,\n                voice: part.voice\n            };\n        });\n        const props = {};\n        for (const key of ConversationConnectionConfig.transcriptionEventKeys) {\n            const val = this.properties.getProperty(key, \"\");\n            if (val !== \"\") {\n                props[key] = val;\n            }\n        }\n        const info = { id: convId, participants: p, conversationProperties: props };\n        return info;\n    }\n    addParticipantImplAsync(participant) {\n        const newParticipant = this.privParticipants.addOrUpdateParticipant(participant);\n        if (newParticipant !== undefined) {\n            if (!!this.privTranscriberRecognizer) {\n                const conversationInfo = this.conversationInfo;\n                conversationInfo.participants = [participant];\n                return this.privTranscriberRecognizer.pushConversationEvent(conversationInfo, \"join\");\n            }\n        }\n    }\n    removeParticipantImplAsync(participant) {\n        this.privParticipants.deleteParticipant(participant.id);\n        const conversationInfo = this.conversationInfo;\n        conversationInfo.participants = [participant];\n        return this.privTranscriberRecognizer.pushConversationEvent(conversationInfo, \"leave\");\n    }\n    close(dispose) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.privIsConnected = false;\n                yield this.privConversationRecognizer.close();\n                yield ((_a = this.privTranscriberRecognizer) === null || _a === void 0 ? void 0 : _a.close());\n                this.privConversationRecognizer = undefined;\n                (_b = this.privConversationTranslator) === null || _b === void 0 ? void 0 : _b.dispose();\n            }\n            catch (e) {\n                // ignore error\n            }\n            if (dispose) {\n                this.dispose();\n            }\n        });\n    }\n    /** Helpers */\n    get canSend() {\n        var _a;\n        return this.privIsConnected && !((_a = this.privParticipants.me) === null || _a === void 0 ? void 0 : _a.isMuted);\n    }\n    get canSendAsHost() {\n        var _a;\n        return this.privIsConnected && ((_a = this.privParticipants.me) === null || _a === void 0 ? void 0 : _a.isHost);\n    }\n    handleCallback(cb, err) {\n        if (!!cb) {\n            try {\n                cb();\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n            cb = undefined;\n        }\n    }\n    handleError(error, err) {\n        if (!!err) {\n            if (error instanceof Error) {\n                const typedError = error;\n                err(typedError.name + \": \" + typedError.message);\n            }\n            else {\n                err(error);\n            }\n        }\n    }\n    /** Participant Helpers */\n    toParticipants(includeHost) {\n        const participants = this.privParticipants.participants.map((p) => {\n            return this.toParticipant(p);\n        });\n        if (!includeHost) {\n            return participants.filter((p) => p.isHost === false);\n        }\n        else {\n            return participants;\n        }\n    }\n    toParticipant(p) {\n        return new Participant(p.id, p.avatar, p.displayName, p.isHost, p.isMuted, p.isUsingTts, p.preferredLanguage, p.voice);\n    }\n    getMuteAllCommand(isMuted) {\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: ConversationTranslatorCommandTypes.setMuteAll,\n            // tslint:disable-next-line: object-literal-shorthand\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: ConversationTranslatorMessageTypes.participantCommand,\n            value: isMuted\n        });\n    }\n    getMuteCommand(participantId, isMuted) {\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\n        return JSON.stringify({\n            command: ConversationTranslatorCommandTypes.setMute,\n            // tslint:disable-next-line: object-literal-shorthand\n            participantId: participantId,\n            roomid: this.privRoom.roomId,\n            type: ConversationTranslatorMessageTypes.participantCommand,\n            value: isMuted\n        });\n    }\n    getLockCommand(isLocked) {\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: ConversationTranslatorCommandTypes.setLockState,\n            // tslint:disable-next-line: object-literal-shorthand\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: ConversationTranslatorMessageTypes.participantCommand,\n            value: isLocked\n        });\n    }\n    getEjectCommand(participantId) {\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\n        return JSON.stringify({\n            command: ConversationTranslatorCommandTypes.ejectParticipant,\n            // tslint:disable-next-line: object-literal-shorthand\n            participantId: participantId,\n            roomid: this.privRoom.roomId,\n            type: ConversationTranslatorMessageTypes.participantCommand,\n        });\n    }\n    getChangeNicknameCommand(nickname) {\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        return JSON.stringify({\n            command: ConversationTranslatorCommandTypes.changeNickname,\n            nickname,\n            // tslint:disable-next-line: object-literal-shorthand\n            participantId: this.privRoom.participantId,\n            roomid: this.privRoom.roomId,\n            type: ConversationTranslatorMessageTypes.participantCommand,\n            value: nickname\n        });\n    }\n    getMessageCommand(message) {\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\n        Contracts.throwIfNullOrWhitespace(message, \"message\");\n        return JSON.stringify({\n            // tslint:disable-next-line: object-literal-shorthand\n            participantId: this.privRoom.participantId,\n            roomId: this.privRoom.roomId,\n            text: message,\n            type: ConversationTranslatorMessageTypes.instantMessage\n        });\n    }\n}\n\n//# sourceMappingURL=Conversation.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ConversationConnectionConfig } from \"../../common.speech/Exports\";\nimport { marshalPromiseToCallbacks } from \"../../common/Exports\";\nimport { Contracts } from \"../Contracts\";\nimport { AudioConfig, CancellationErrorCode, CancellationReason, Connection, ProfanityOption, PropertyCollection, PropertyId, SpeechTranslationConfig, TranslationRecognizer } from \"../Exports\";\nimport { ConversationImpl } from \"./Conversation\";\nimport { ConversationCommon, ConversationTranslationCanceledEventArgs, } from \"./Exports\";\nexport var SpeechState;\n(function (SpeechState) {\n    SpeechState[SpeechState[\"Inactive\"] = 0] = \"Inactive\";\n    SpeechState[SpeechState[\"Connecting\"] = 1] = \"Connecting\";\n    SpeechState[SpeechState[\"Connected\"] = 2] = \"Connected\";\n})(SpeechState || (SpeechState = {}));\n/***\n * Join, leave or connect to a conversation.\n */\nexport class ConversationTranslator extends ConversationCommon {\n    constructor(audioConfig) {\n        super(audioConfig);\n        this.privIsDisposed = false;\n        this.privIsSpeaking = false;\n        this.privSpeechState = SpeechState.Inactive;\n        this.privErrors = ConversationConnectionConfig.restErrors;\n        this.privPlaceholderKey = \"abcdefghijklmnopqrstuvwxyz012345\";\n        this.privPlaceholderRegion = \"westus\";\n        /** Recognizer callbacks */\n        this.onSpeechConnected = (e) => {\n            this.privSpeechState = SpeechState.Connected;\n        };\n        this.onSpeechRecognizing = (r, e) => {\n            // TODO: add support for getting recognitions from here if own speech\n        };\n        this.onSpeechSessionStarted = (r, e) => {\n            this.privSpeechState = SpeechState.Connected;\n        };\n        this.onSpeechSessionStopped = (r, e) => {\n            this.privSpeechState = SpeechState.Inactive;\n        };\n        this.privProperties = new PropertyCollection();\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get speechRecognitionLanguage() {\n        return this.privSpeechRecognitionLanguage;\n    }\n    get participants() {\n        var _a;\n        return (_a = this.privConversation) === null || _a === void 0 ? void 0 : _a.participants;\n    }\n    joinConversationAsync(conversation, nickname, param1, param2, param3) {\n        try {\n            if (typeof conversation === \"string\") {\n                Contracts.throwIfNullOrUndefined(conversation, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversation id\"));\n                Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n                if (!!this.privConversation) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedStart), param3);\n                }\n                let lang = param1;\n                if (lang === undefined || lang === null || lang === \"\") {\n                    lang = ConversationConnectionConfig.defaultLanguageCode;\n                }\n                // create a placeholder config\n                this.privSpeechTranslationConfig = SpeechTranslationConfig.fromSubscription(this.privPlaceholderKey, this.privPlaceholderRegion);\n                this.privSpeechTranslationConfig.setProfanity(ProfanityOption.Masked);\n                this.privSpeechTranslationConfig.addTargetLanguage(lang);\n                this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage], lang);\n                this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.ConversationTranslator_Name], nickname);\n                const endpoint = this.privProperties.getProperty(PropertyId.ConversationTranslator_Host);\n                if (endpoint) {\n                    this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.ConversationTranslator_Host], endpoint);\n                }\n                const speechEndpointHost = this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Host);\n                if (speechEndpointHost) {\n                    this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_Host], speechEndpointHost);\n                }\n                // join the conversation\n                this.privConversation = new ConversationImpl(this.privSpeechTranslationConfig);\n                this.privConversation.conversationTranslator = this;\n                this.privConversation.joinConversationAsync(conversation, nickname, lang, ((result) => {\n                    if (!result) {\n                        this.handleError(new Error(this.privErrors.permissionDeniedConnect), param3);\n                    }\n                    this.privSpeechTranslationConfig.authorizationToken = result;\n                    // connect to the ws\n                    this.privConversation.startConversationAsync((() => {\n                        this.handleCallback(param2, param3);\n                    }), ((error) => {\n                        this.handleError(error, param3);\n                    }));\n                }), ((error) => {\n                    this.handleError(error, param3);\n                }));\n            }\n            else if (typeof conversation === \"object\") {\n                Contracts.throwIfNullOrUndefined(conversation, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversation id\"));\n                Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\n                // save the nickname\n                this.privProperties.setProperty(PropertyId.ConversationTranslator_Name, nickname);\n                // ref the conversation object\n                this.privConversation = conversation;\n                // ref the conversation translator object\n                this.privConversation.conversationTranslator = this;\n                Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedConnect);\n                Contracts.throwIfNullOrUndefined(this.privConversation.room.token, this.privErrors.permissionDeniedConnect);\n                this.privSpeechTranslationConfig = conversation.config;\n                this.handleCallback(param1, param2);\n            }\n            else {\n                this.handleError(new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"invalid conversation type\")), param2);\n            }\n        }\n        catch (error) {\n            this.handleError(error, typeof param1 === \"string\" ? param3 : param2);\n        }\n    }\n    /**\n     * Leave the conversation\n     * @param cb\n     * @param err\n     */\n    leaveConversationAsync(cb, err) {\n        marshalPromiseToCallbacks((() => __awaiter(this, void 0, void 0, function* () {\n            // stop the speech websocket\n            yield this.cancelSpeech();\n            // stop the websocket\n            yield this.privConversation.endConversationImplAsync();\n            // https delete request\n            yield this.privConversation.deleteConversationImplAsync();\n            this.dispose();\n        }))(), cb, err);\n    }\n    /**\n     * Send a text message\n     * @param message\n     * @param cb\n     * @param err\n     */\n    sendTextMessageAsync(message, cb, err) {\n        var _a;\n        try {\n            Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedSend);\n            Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", message));\n            (_a = this.privConversation) === null || _a === void 0 ? void 0 : _a.sendTextMessageAsync(message, cb, err);\n        }\n        catch (error) {\n            this.handleError(error, err);\n        }\n    }\n    /**\n     * Start speaking\n     * @param cb\n     * @param err\n     */\n    startTranscribingAsync(cb, err) {\n        marshalPromiseToCallbacks((() => __awaiter(this, void 0, void 0, function* () {\n            try {\n                Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedSend);\n                Contracts.throwIfNullOrUndefined(this.privConversation.room.token, this.privErrors.permissionDeniedConnect);\n                if (!this.canSpeak) {\n                    this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\n                }\n                if (this.privTranslationRecognizer === undefined) {\n                    yield this.connectTranslatorRecognizer();\n                }\n                yield this.startContinuousRecognition();\n                this.privIsSpeaking = true;\n            }\n            catch (error) {\n                this.privIsSpeaking = false;\n                // this.fireCancelEvent(error);\n                yield this.cancelSpeech();\n                throw error;\n            }\n        }))(), cb, err);\n    }\n    /**\n     * Stop speaking\n     * @param cb\n     * @param err\n     */\n    stopTranscribingAsync(cb, err) {\n        marshalPromiseToCallbacks((() => __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!this.privIsSpeaking) {\n                    // stop speech\n                    yield this.cancelSpeech();\n                    return;\n                }\n                // stop the recognition but leave the websocket open\n                this.privIsSpeaking = false;\n                yield new Promise((resolve, reject) => {\n                    var _a;\n                    (_a = this.privTranslationRecognizer) === null || _a === void 0 ? void 0 : _a.stopContinuousRecognitionAsync(resolve, reject);\n                });\n            }\n            catch (error) {\n                yield this.cancelSpeech();\n            }\n        }))(), cb, err);\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    dispose(reason, success, err) {\n        marshalPromiseToCallbacks((() => __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            if (this.isDisposed && !this.privIsSpeaking) {\n                return;\n            }\n            yield this.cancelSpeech();\n            this.privIsDisposed = true;\n            (_a = this.privSpeechTranslationConfig) === null || _a === void 0 ? void 0 : _a.close();\n            this.privSpeechRecognitionLanguage = undefined;\n            this.privProperties = undefined;\n            this.privAudioConfig = undefined;\n            this.privSpeechTranslationConfig = undefined;\n            (_b = this.privConversation) === null || _b === void 0 ? void 0 : _b.dispose();\n            this.privConversation = undefined;\n        }))(), success, err);\n    }\n    /**\n     * Cancel the speech websocket\n     */\n    cancelSpeech() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.privIsSpeaking = false;\n                (_a = this.privTranslationRecognizer) === null || _a === void 0 ? void 0 : _a.stopContinuousRecognitionAsync();\n                yield ((_b = this.privTranslationRecognizerConnection) === null || _b === void 0 ? void 0 : _b.closeConnection());\n                this.privTranslationRecognizerConnection = undefined;\n                this.privTranslationRecognizer = undefined;\n                this.privSpeechState = SpeechState.Inactive;\n            }\n            catch (e) {\n                // ignore the error\n            }\n        });\n    }\n    /**\n     * Connect to the speech translation recognizer.\n     * Currently there is no language validation performed before sending the SpeechLanguage code to the service.\n     * If it's an invalid language the raw error will be: 'Error during WebSocket handshake: Unexpected response code: 400'\n     * e.g. pass in 'fr' instead of 'fr-FR', or a text-only language 'cy'\n     * @param cb\n     * @param err\n     */\n    connectTranslatorRecognizer() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.privAudioConfig === undefined) {\n                    this.privAudioConfig = AudioConfig.fromDefaultMicrophoneInput();\n                }\n                // clear the temp subscription key if it's a participant joining\n                if (this.privSpeechTranslationConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_Key])\n                    === this.privPlaceholderKey) {\n                    this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_Key], \"\");\n                }\n                // TODO\n                const token = encodeURIComponent(this.privConversation.room.token);\n                let endpointHost = this.privSpeechTranslationConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_Host], ConversationConnectionConfig.speechHost);\n                endpointHost = endpointHost.replace(\"{region}\", this.privConversation.room.cognitiveSpeechRegion);\n                const url = `wss://${endpointHost}${ConversationConnectionConfig.speechPath}?${ConversationConnectionConfig.configParams.token}=${token}`;\n                this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_Endpoint], url);\n                this.privTranslationRecognizer = new TranslationRecognizer(this.privSpeechTranslationConfig, this.privAudioConfig);\n                this.privTranslationRecognizerConnection = Connection.fromRecognizer(this.privTranslationRecognizer);\n                this.privTranslationRecognizerConnection.connected = this.onSpeechConnected;\n                this.privTranslationRecognizerConnection.disconnected = this.onSpeechDisconnected;\n                this.privTranslationRecognizer.recognized = this.onSpeechRecognized;\n                this.privTranslationRecognizer.recognizing = this.onSpeechRecognizing;\n                this.privTranslationRecognizer.canceled = this.onSpeechCanceled;\n                this.privTranslationRecognizer.sessionStarted = this.onSpeechSessionStarted;\n                this.privTranslationRecognizer.sessionStopped = this.onSpeechSessionStopped;\n            }\n            catch (error) {\n                yield this.cancelSpeech();\n                throw error;\n            }\n        });\n    }\n    /**\n     * Handle the start speaking request\n     * @param cb\n     * @param err\n     */\n    startContinuousRecognition() {\n        return new Promise((resolve, reject) => {\n            this.privTranslationRecognizer.startContinuousRecognitionAsync(resolve, reject);\n        });\n    }\n    onSpeechDisconnected(e) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.privSpeechState = SpeechState.Inactive;\n            yield this.cancelSpeech();\n        });\n    }\n    onSpeechRecognized(r, e) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: add support for getting recognitions from here if own speech\n            // if there is an error connecting to the conversation service from the speech service the error will be returned in the ErrorDetails field.\n            if ((_a = e.result) === null || _a === void 0 ? void 0 : _a.errorDetails) {\n                yield this.cancelSpeech();\n                // TODO: format the error message contained in 'errorDetails'\n                this.fireCancelEvent(e.result.errorDetails);\n            }\n        });\n    }\n    onSpeechCanceled(r, e) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.privSpeechState !== SpeechState.Inactive) {\n                try {\n                    yield this.cancelSpeech();\n                }\n                catch (error) {\n                    this.privSpeechState = SpeechState.Inactive;\n                }\n            }\n        });\n    }\n    /**\n     * Fire a cancel event\n     * @param error\n     */\n    fireCancelEvent(error) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        try {\n            if (!!this.canceled) {\n                const cancelEvent = new ConversationTranslationCanceledEventArgs((_b = (_a = error) === null || _a === void 0 ? void 0 : _a.reason, (_b !== null && _b !== void 0 ? _b : CancellationReason.Error)), (_d = (_c = error) === null || _c === void 0 ? void 0 : _c.errorDetails, (_d !== null && _d !== void 0 ? _d : error)), (_f = (_e = error) === null || _e === void 0 ? void 0 : _e.errorCode, (_f !== null && _f !== void 0 ? _f : CancellationErrorCode.RuntimeError)), undefined, (_g = error) === null || _g === void 0 ? void 0 : _g.sessionId);\n                this.canceled(this, cancelEvent);\n            }\n        }\n        catch (e) {\n            //\n        }\n    }\n    get canSpeak() {\n        // is there a Conversation websocket available\n        if (!this.privConversation.isConnected) {\n            return false;\n        }\n        // is the user already speaking\n        if (this.privIsSpeaking || this.privSpeechState === SpeechState.Connected || this.privSpeechState === SpeechState.Connecting) {\n            return false;\n        }\n        // is the user muted\n        if (this.privConversation.isMutedByHost) {\n            return false;\n        }\n        return true;\n    }\n}\n\n//# sourceMappingURL=ConversationTranslator.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class ConversationCommon {\n    constructor(audioConfig) {\n        this.privAudioConfig = audioConfig;\n    }\n    handleCallback(cb, err) {\n        if (!!cb) {\n            try {\n                cb();\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n            cb = undefined;\n        }\n    }\n    handleError(error, err) {\n        if (!!err) {\n            if (error instanceof Error) {\n                const typedError = error;\n                err(typedError.name + \": \" + typedError.message);\n            }\n            else {\n                err(error);\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=ConversationCommon.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { marshalPromiseToCallbacks } from \"../../common/Exports\";\nimport { Contracts } from \"../../sdk/Contracts\";\nimport { PropertyId, Recognizer, } from \"../../sdk/Exports\";\nimport { RecognitionMode, RecognizerConfig, TranscriberConnectionFactory, TranscriptionServiceRecognizer, } from \"../Exports\";\nexport class TranscriberRecognizer extends Recognizer {\n    /**\n     * TranscriberRecognizer constructor.\n     * @constructor\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    constructor(speechTranslationConfig, audioConfig) {\n        const speechTranslationConfigImpl = speechTranslationConfig;\n        Contracts.throwIfNull(speechTranslationConfigImpl, \"speechTranslationConfig\");\n        Contracts.throwIfNullOrWhitespace(speechTranslationConfigImpl.speechRecognitionLanguage, PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\n        super(audioConfig, speechTranslationConfigImpl.properties, new TranscriberConnectionFactory());\n        this.privDisposedRecognizer = false;\n    }\n    getConversationInfo() {\n        Contracts.throwIfNullOrUndefined(this.privConversation, \"Conversation\");\n        return this.privConversation.conversationInfo;\n    }\n    get authorizationToken() {\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\n    }\n    set authorizationToken(token) {\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    set conversation(c) {\n        Contracts.throwIfNullOrUndefined(c, \"Conversation\");\n        this.privConversation = c;\n    }\n    get speechRecognitionLanguage() {\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    startContinuousRecognitionAsync(cb, err) {\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\n    }\n    stopContinuousRecognitionAsync(cb, err) {\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            Contracts.throwIfDisposed(this.privDisposedRecognizer);\n            yield this.dispose(true);\n        });\n    }\n    // Push async join/leave conversation message via serviceRecognizer\n    pushConversationEvent(conversationInfo, command) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const reco = (this.privReco);\n            Contracts.throwIfNullOrUndefined(reco, \"serviceRecognizer\");\n            yield reco.sendSpeechEventAsync(conversationInfo, command);\n        });\n    }\n    connectCallbacks(transcriber) {\n        this.canceled = (s, e) => {\n            if (!!transcriber.canceled) {\n                transcriber.canceled(transcriber, e);\n            }\n        };\n        this.recognizing = (s, e) => {\n            if (!!transcriber.transcribing) {\n                transcriber.transcribing(transcriber, e);\n            }\n        };\n        this.recognized = (s, e) => {\n            if (!!transcriber.transcribed) {\n                transcriber.transcribed(transcriber, e);\n            }\n        };\n        this.sessionStarted = (s, e) => {\n            if (!!transcriber.sessionStarted) {\n                transcriber.sessionStarted(transcriber, e);\n            }\n        };\n        this.sessionStopped = (s, e) => {\n            if (!!transcriber.sessionStopped) {\n                transcriber.sessionStopped(transcriber, e);\n            }\n        };\n    }\n    disconnectCallbacks() {\n        this.canceled = undefined;\n        this.recognizing = undefined;\n        this.recognized = undefined;\n        this.sessionStarted = undefined;\n        this.sessionStopped = undefined;\n    }\n    /**\n     * Disposes any resources held by the object.\n     * @member ConversationTranscriber.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    dispose(disposing) {\n        const _super = Object.create(null, {\n            dispose: { get: () => super.dispose }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.privDisposedRecognizer) {\n                return;\n            }\n            if (disposing) {\n                this.privDisposedRecognizer = true;\n                yield this.implRecognizerStop();\n            }\n            yield _super.dispose.call(this, disposing);\n        });\n    }\n    createRecognizerConfig(speechConfig) {\n        return new RecognizerConfig(speechConfig, this.properties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const configImpl = audioConfig;\n        return new TranscriptionServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    }\n}\n\n//# sourceMappingURL=TranscriberRecognizer.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { TranscriberRecognizer } from \"../../common.speech/Exports\";\nimport { marshalPromiseToCallbacks } from \"../../common/Exports\";\nimport { Contracts } from \"../Contracts\";\nimport { PropertyCollection, PropertyId, } from \"../Exports\";\nexport class ConversationTranscriber {\n    /**\n     * ConversationTranscriber constructor.\n     * @constructor\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    constructor(audioConfig) {\n        this.privAudioConfig = audioConfig;\n        this.privProperties = new PropertyCollection();\n        this.privRecognizer = undefined;\n        this.privDisposedRecognizer = false;\n    }\n    /**\n     * @param {Conversation} converation - conversation to be recognized\n     */\n    joinConversationAsync(conversation, cb, err) {\n        const conversationImpl = conversation;\n        Contracts.throwIfNullOrUndefined(conversationImpl, \"Conversation\");\n        // ref the conversation object\n        // create recognizer and subscribe to recognizer events\n        this.privRecognizer = new TranscriberRecognizer(conversation.config, this.privAudioConfig);\n        Contracts.throwIfNullOrUndefined(this.privRecognizer, \"Recognizer\");\n        this.privRecognizer.connectCallbacks(this);\n        marshalPromiseToCallbacks(conversationImpl.connectTranscriberRecognizer(this.privRecognizer), cb, err);\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member ConversationTranscriber.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member ConversationTranscriber.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * Gets the spoken language of recognition.\n     * @member ConversationTranscriber.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} The spoken language of recognition.\n     */\n    get speechRecognitionLanguage() {\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * The collection of properties and their values defined for this ConversationTranscriber.\n     * @member ConversationTranscriber.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this ConversationTranscriber.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Starts conversation transcription, until stopTranscribingAsync() is called.\n     * User must subscribe to events to receive transcription results.\n     * @member ConversationTranscriber.prototype.startTranscribingAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the transcription has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startTranscribingAsync(cb, err) {\n        this.privRecognizer.startContinuousRecognitionAsync(cb, err);\n    }\n    /**\n     * Starts conversation transcription, until stopTranscribingAsync() is called.\n     * User must subscribe to events to receive transcription results.\n     * @member ConversationTranscriber.prototype.stopTranscribingAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the transcription has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopTranscribingAsync(cb, err) {\n        this.privRecognizer.stopContinuousRecognitionAsync(cb, err);\n    }\n    /**\n     * Leave the current conversation. After this is called, you will no longer receive any events.\n     */\n    leaveConversationAsync(cb, err) {\n        this.privRecognizer.disconnectCallbacks();\n        marshalPromiseToCallbacks((() => __awaiter(this, void 0, void 0, function* () { return; }))(), cb, err);\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member ConversationTranscriber.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * Disposes any resources held by the object.\n     * @member ConversationTranscriber.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    dispose(disposing) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.privDisposedRecognizer) {\n                return;\n            }\n            if (disposing) {\n                this.privDisposedRecognizer = true;\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=ConversationTranscriber.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * The error that is thrown when an argument passed in is null.\n *\n * @export\n * @class ArgumentNullError\n * @extends {Error}\n */\nexport class ArgumentNullError extends Error {\n    /**\n     * Creates an instance of ArgumentNullError.\n     *\n     * @param {string} argumentName - Name of the argument that is null\n     *\n     * @memberOf ArgumentNullError\n     */\n    constructor(argumentName) {\n        super(argumentName);\n        this.name = \"ArgumentNull\";\n        this.message = argumentName;\n    }\n}\n/**\n * The error that is thrown when an invalid operation is performed in the code.\n *\n * @export\n * @class InvalidOperationError\n * @extends {Error}\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class InvalidOperationError extends Error {\n    /**\n     * Creates an instance of InvalidOperationError.\n     *\n     * @param {string} error - The error\n     *\n     * @memberOf InvalidOperationError\n     */\n    constructor(error) {\n        super(error);\n        this.name = \"InvalidOperation\";\n        this.message = error;\n    }\n}\n/**\n * The error that is thrown when an object is disposed.\n *\n * @export\n * @class ObjectDisposedError\n * @extends {Error}\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class ObjectDisposedError extends Error {\n    /**\n     * Creates an instance of ObjectDisposedError.\n     *\n     * @param {string} objectName - The object that is disposed\n     * @param {string} error - The error\n     *\n     * @memberOf ObjectDisposedError\n     */\n    constructor(objectName, error) {\n        super(error);\n        this.name = objectName + \"ObjectDisposed\";\n        this.message = error;\n    }\n}\n\n//# sourceMappingURL=Error.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { createNoDashGuid } from \"./Guid\";\nexport var EventType;\n(function (EventType) {\n    EventType[EventType[\"Debug\"] = 0] = \"Debug\";\n    EventType[EventType[\"Info\"] = 1] = \"Info\";\n    EventType[EventType[\"Warning\"] = 2] = \"Warning\";\n    EventType[EventType[\"Error\"] = 3] = \"Error\";\n})(EventType || (EventType = {}));\nexport class PlatformEvent {\n    constructor(eventName, eventType) {\n        this.privName = eventName;\n        this.privEventId = createNoDashGuid();\n        this.privEventTime = new Date().toISOString();\n        this.privEventType = eventType;\n        this.privMetadata = {};\n    }\n    get name() {\n        return this.privName;\n    }\n    get eventId() {\n        return this.privEventId;\n    }\n    get eventTime() {\n        return this.privEventTime;\n    }\n    get eventType() {\n        return this.privEventType;\n    }\n    get metadata() {\n        return this.privMetadata;\n    }\n}\n\n//# sourceMappingURL=PlatformEvent.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Defines the possible reasons a recognition result might be generated.\n * @class ResultReason\n */\nexport var ResultReason;\n(function (ResultReason) {\n    /**\n     * Indicates speech could not be recognized. More details\n     * can be found in the NoMatchDetails object.\n     * @member ResultReason.NoMatch\n     */\n    ResultReason[ResultReason[\"NoMatch\"] = 0] = \"NoMatch\";\n    /**\n     * Indicates that the recognition was canceled. More details\n     * can be found using the CancellationDetails object.\n     * @member ResultReason.Canceled\n     */\n    ResultReason[ResultReason[\"Canceled\"] = 1] = \"Canceled\";\n    /**\n     * Indicates the speech result contains hypothesis text.\n     * @member ResultReason.RecognizedSpeech\n     */\n    ResultReason[ResultReason[\"RecognizingSpeech\"] = 2] = \"RecognizingSpeech\";\n    /**\n     * Indicates the speech result contains final text that has been recognized.\n     * Speech Recognition is now complete for this phrase.\n     * @member ResultReason.RecognizedSpeech\n     */\n    ResultReason[ResultReason[\"RecognizedSpeech\"] = 3] = \"RecognizedSpeech\";\n    /**\n     * Indicates the intent result contains hypothesis text and intent.\n     * @member ResultReason.RecognizingIntent\n     */\n    ResultReason[ResultReason[\"RecognizingIntent\"] = 4] = \"RecognizingIntent\";\n    /**\n     * Indicates the intent result contains final text and intent.\n     * Speech Recognition and Intent determination are now complete for this phrase.\n     * @member ResultReason.RecognizedIntent\n     */\n    ResultReason[ResultReason[\"RecognizedIntent\"] = 5] = \"RecognizedIntent\";\n    /**\n     * Indicates the translation result contains hypothesis text and its translation(s).\n     * @member ResultReason.TranslatingSpeech\n     */\n    ResultReason[ResultReason[\"TranslatingSpeech\"] = 6] = \"TranslatingSpeech\";\n    /**\n     * Indicates the translation result contains final text and corresponding translation(s).\n     * Speech Recognition and Translation are now complete for this phrase.\n     * @member ResultReason.TranslatedSpeech\n     */\n    ResultReason[ResultReason[\"TranslatedSpeech\"] = 7] = \"TranslatedSpeech\";\n    /**\n     * Indicates the synthesized audio result contains a non-zero amount of audio data\n     * @member ResultReason.SynthesizingAudio\n     */\n    ResultReason[ResultReason[\"SynthesizingAudio\"] = 8] = \"SynthesizingAudio\";\n    /**\n     * Indicates the synthesized audio is now complete for this phrase.\n     * @member ResultReason.SynthesizingAudioCompleted\n     */\n    ResultReason[ResultReason[\"SynthesizingAudioCompleted\"] = 9] = \"SynthesizingAudioCompleted\";\n    /**\n     * Indicates the speech synthesis is now started\n     * @member ResultReason.SynthesizingAudioStarted\n     */\n    ResultReason[ResultReason[\"SynthesizingAudioStarted\"] = 10] = \"SynthesizingAudioStarted\";\n    /**\n     * Indicates the voice profile is being enrolled and customers need to send more audio to create a voice profile.\n     * @member ResultReason.EnrollingVoiceProfile\n     */\n    ResultReason[ResultReason[\"EnrollingVoiceProfile\"] = 11] = \"EnrollingVoiceProfile\";\n    /**\n     * Indicates the voice profile has been enrolled.\n     * @member ResultReason.EnrolledVoiceProfile\n     */\n    ResultReason[ResultReason[\"EnrolledVoiceProfile\"] = 12] = \"EnrolledVoiceProfile\";\n    /**\n     * Indicates successful identification of some speakers.\n     * @member ResultReason.RecognizedSpeakers\n     */\n    ResultReason[ResultReason[\"RecognizedSpeakers\"] = 13] = \"RecognizedSpeakers\";\n    /**\n     * Indicates successfully verified one speaker.\n     * @member ResultReason.RecognizedSpeaker\n     */\n    ResultReason[ResultReason[\"RecognizedSpeaker\"] = 14] = \"RecognizedSpeaker\";\n    /**\n     * Indicates a voice profile has been reset successfully.\n     * @member ResultReason.ResetVoiceProfile\n     */\n    ResultReason[ResultReason[\"ResetVoiceProfile\"] = 15] = \"ResetVoiceProfile\";\n    /**\n     * Indicates a voice profile has been deleted successfully.\n     * @member ResultReason.DeletedVoiceProfile\n     */\n    ResultReason[ResultReason[\"DeletedVoiceProfile\"] = 16] = \"DeletedVoiceProfile\";\n})(ResultReason || (ResultReason = {}));\n\n//# sourceMappingURL=ResultReason.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class QueryParameterNames {\n    static get TestHooksParamName() {\n        return \"testhooks\";\n    }\n    static get ConnectionIdHeader() {\n        return \"X-ConnectionId\";\n    }\n    static get DeploymentIdParamName() {\n        return \"cid\";\n    }\n    static get FormatParamName() {\n        return \"format\";\n    }\n    static get LanguageParamName() {\n        return \"language\";\n    }\n    static get TranslationFromParamName() {\n        return \"from\";\n    }\n    static get TranslationToParamName() {\n        return \"to\";\n    }\n    static get Profanify() {\n        return \"profanity\";\n    }\n    static get EnableAudioLogging() {\n        return \"storeAudio\";\n    }\n    static get EnableWordLevelTimestamps() {\n        return \"wordLevelTimestamps\";\n    }\n    static get InitialSilenceTimeoutMs() {\n        return \"initialSilenceTimeoutMs\";\n    }\n    static get EndSilenceTimeoutMs() {\n        return \"endSilenceTimeoutMs\";\n    }\n    static get StableIntermediateThreshold() {\n        return \"stableIntermediateThreshold\";\n    }\n    static get StableTranslation() {\n        return \"stableTranslation\";\n    }\n    static get EnableLanguageID() {\n        return \"lidEnabled\";\n    }\n}\n\n//# sourceMappingURL=QueryParameterNames.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * @class SynthesisStatus\n * @private\n */\nexport var SynthesisStatus;\n(function (SynthesisStatus) {\n    /**\n     * The response contains valid audio data.\n     * @member SynthesisStatus.Success\n     */\n    SynthesisStatus[SynthesisStatus[\"Success\"] = 0] = \"Success\";\n    /**\n     * Indicates the end of audio data. No valid audio data is included in the message.\n     * @member SynthesisStatus.SynthesisEnd\n     */\n    SynthesisStatus[SynthesisStatus[\"SynthesisEnd\"] = 1] = \"SynthesisEnd\";\n    /**\n     * Indicates an error occurred during synthesis data processing.\n     * @member SynthesisStatus.Error\n     */\n    SynthesisStatus[SynthesisStatus[\"Error\"] = 2] = \"Error\";\n})(SynthesisStatus || (SynthesisStatus = {}));\nexport var RecognitionStatus;\n(function (RecognitionStatus) {\n    RecognitionStatus[RecognitionStatus[\"Success\"] = 0] = \"Success\";\n    RecognitionStatus[RecognitionStatus[\"NoMatch\"] = 1] = \"NoMatch\";\n    RecognitionStatus[RecognitionStatus[\"InitialSilenceTimeout\"] = 2] = \"InitialSilenceTimeout\";\n    RecognitionStatus[RecognitionStatus[\"BabbleTimeout\"] = 3] = \"BabbleTimeout\";\n    RecognitionStatus[RecognitionStatus[\"Error\"] = 4] = \"Error\";\n    RecognitionStatus[RecognitionStatus[\"EndOfDictation\"] = 5] = \"EndOfDictation\";\n    RecognitionStatus[RecognitionStatus[\"TooManyRequests\"] = 6] = \"TooManyRequests\";\n})(RecognitionStatus || (RecognitionStatus = {}));\n\n//# sourceMappingURL=Enums.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Define speech synthesis audio output formats.\n * @enum SpeechSynthesisOutputFormat\n * Added in version 1.11.0\n */\nexport var SpeechSynthesisOutputFormat;\n(function (SpeechSynthesisOutputFormat) {\n    /**\n     * raw-8khz-8bit-mono-mulaw\n     * @member SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw,\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw8Khz8BitMonoMULaw\"] = 0] = \"Raw8Khz8BitMonoMULaw\";\n    /**\n     * riff-16khz-16kbps-mono-siren\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff16Khz16KbpsMonoSiren\"] = 1] = \"Riff16Khz16KbpsMonoSiren\";\n    /**\n     * audio-16khz-16kbps-mono-siren\n     * @member SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz16KbpsMonoSiren\"] = 2] = \"Audio16Khz16KbpsMonoSiren\";\n    /**\n     * audio-16khz-32kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz32KBitRateMonoMp3\"] = 3] = \"Audio16Khz32KBitRateMonoMp3\";\n    /**\n     * audio-16khz-128kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz128KBitRateMonoMp3\"] = 4] = \"Audio16Khz128KBitRateMonoMp3\";\n    /**\n     * audio-16khz-64kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio16Khz64KBitRateMonoMp3\"] = 5] = \"Audio16Khz64KBitRateMonoMp3\";\n    /**\n     * audio-24khz-48kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz48KBitRateMonoMp3\"] = 6] = \"Audio24Khz48KBitRateMonoMp3\";\n    /**\n     * audio-24khz-96kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz96KBitRateMonoMp3\"] = 7] = \"Audio24Khz96KBitRateMonoMp3\";\n    /**\n     * audio-24khz-160kbitrate-mono-mp3\n     * @member SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Audio24Khz160KBitRateMonoMp3\"] = 8] = \"Audio24Khz160KBitRateMonoMp3\";\n    /**\n     * raw-16khz-16bit-mono-truesilk\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw16Khz16BitMonoTrueSilk\"] = 9] = \"Raw16Khz16BitMonoTrueSilk\";\n    /**\n     * riff-16khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff16Khz16BitMonoPcm\"] = 10] = \"Riff16Khz16BitMonoPcm\";\n    /**\n     * riff-8khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff8Khz16BitMonoPcm\"] = 11] = \"Riff8Khz16BitMonoPcm\";\n    /**\n     * riff-24khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff24Khz16BitMonoPcm\"] = 12] = \"Riff24Khz16BitMonoPcm\";\n    /**\n     * riff-8khz-8bit-mono-mulaw\n     * @member SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Riff8Khz8BitMonoMULaw\"] = 13] = \"Riff8Khz8BitMonoMULaw\";\n    /**\n     * raw-16khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw16Khz16BitMonoPcm\"] = 14] = \"Raw16Khz16BitMonoPcm\";\n    /**\n     * raw-24khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw24Khz16BitMonoPcm\"] = 15] = \"Raw24Khz16BitMonoPcm\";\n    /**\n     * raw-8khz-16bit-mono-pcm\n     * @member SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Raw8Khz16BitMonoPcm\"] = 16] = \"Raw8Khz16BitMonoPcm\";\n    /**\n     * ogg-16khz-16bit-mono-opus\n     * @member SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Ogg16Khz16BitMonoOpus\"] = 17] = \"Ogg16Khz16BitMonoOpus\";\n    /**\n     * ogg-24khz-16bit-mono-opus\n     * @member SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus\n     */\n    SpeechSynthesisOutputFormat[SpeechSynthesisOutputFormat[\"Ogg24Khz16BitMonoOpus\"] = 18] = \"Ogg24Khz16BitMonoOpus\";\n})(SpeechSynthesisOutputFormat || (SpeechSynthesisOutputFormat = {}));\n\n//# sourceMappingURL=SpeechSynthesisOutputFormat.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ArgumentNullError, ConnectionMessage } from \"../common/Exports\";\nconst PathHeaderName = \"Path\";\nconst ContentTypeHeaderName = \"Content-Type\";\nconst RequestIdHeaderName = \"X-RequestId\";\nconst RequestTimestampHeaderName = \"X-Timestamp\";\nconst RequestStreamIdHeaderName = \"x-streamid\";\nexport class SpeechConnectionMessage extends ConnectionMessage {\n    constructor(messageType, path, requestId, contentType, body, streamId, additionalHeaders, id) {\n        if (!path) {\n            throw new ArgumentNullError(\"path\");\n        }\n        if (!requestId) {\n            throw new ArgumentNullError(\"requestId\");\n        }\n        const headers = {};\n        headers[PathHeaderName] = path;\n        headers[RequestIdHeaderName] = requestId;\n        headers[RequestTimestampHeaderName] = new Date().toISOString();\n        if (contentType) {\n            headers[ContentTypeHeaderName] = contentType;\n        }\n        if (streamId) {\n            headers[RequestStreamIdHeaderName] = streamId;\n        }\n        if (additionalHeaders) {\n            for (const headerName in additionalHeaders) {\n                if (headerName) {\n                    headers[headerName] = additionalHeaders[headerName];\n                }\n            }\n        }\n        if (id) {\n            super(messageType, body, headers, id);\n        }\n        else {\n            super(messageType, body, headers);\n        }\n        this.privPath = path;\n        this.privRequestId = requestId;\n        this.privContentType = contentType;\n        this.privStreamId = streamId;\n        this.privAdditionalHeaders = additionalHeaders;\n    }\n    get path() {\n        return this.privPath;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get contentType() {\n        return this.privContentType;\n    }\n    get streamId() {\n        return this.privStreamId;\n    }\n    get additionalHeaders() {\n        return this.privAdditionalHeaders;\n    }\n}\nSpeechConnectionMessage.fromConnectionMessage = (message) => {\n    let path = null;\n    let requestId = null;\n    let contentType = null;\n    let requestTimestamp = null;\n    let streamId = null;\n    const additionalHeaders = {};\n    if (message.headers) {\n        for (const headerName in message.headers) {\n            if (headerName) {\n                if (headerName.toLowerCase() === PathHeaderName.toLowerCase()) {\n                    path = message.headers[headerName];\n                }\n                else if (headerName.toLowerCase() === RequestIdHeaderName.toLowerCase()) {\n                    requestId = message.headers[headerName];\n                }\n                else if (headerName.toLowerCase() === RequestTimestampHeaderName.toLowerCase()) {\n                    requestTimestamp = message.headers[headerName];\n                }\n                else if (headerName.toLowerCase() === ContentTypeHeaderName.toLowerCase()) {\n                    contentType = message.headers[headerName];\n                }\n                else if (headerName.toLowerCase() === RequestStreamIdHeaderName.toLowerCase()) {\n                    streamId = message.headers[headerName];\n                }\n                else {\n                    additionalHeaders[headerName] = message.headers[headerName];\n                }\n            }\n        }\n    }\n    return new SpeechConnectionMessage(message.messageType, path, requestId, contentType, message.body, streamId, additionalHeaders, message.id);\n};\n\n//# sourceMappingURL=SpeechConnectionMessage.Internal.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { InvalidOperationError } from \"./Error\";\nimport { createNoDashGuid } from \"./Guid\";\nexport var MessageType;\n(function (MessageType) {\n    MessageType[MessageType[\"Text\"] = 0] = \"Text\";\n    MessageType[MessageType[\"Binary\"] = 1] = \"Binary\";\n})(MessageType || (MessageType = {}));\nexport class ConnectionMessage {\n    constructor(messageType, body, headers, id) {\n        this.privBody = null;\n        if (messageType === MessageType.Text && body && !(typeof (body) === \"string\")) {\n            throw new InvalidOperationError(\"Payload must be a string\");\n        }\n        if (messageType === MessageType.Binary && body && !(body instanceof ArrayBuffer)) {\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\n        }\n        this.privMessageType = messageType;\n        this.privBody = body;\n        this.privHeaders = headers ? headers : {};\n        this.privId = id ? id : createNoDashGuid();\n        switch (this.messageType) {\n            case MessageType.Binary:\n                this.privSize = this.binaryBody !== null ? this.binaryBody.byteLength : 0;\n                break;\n            case MessageType.Text:\n                this.privSize = this.textBody.length;\n        }\n    }\n    get messageType() {\n        return this.privMessageType;\n    }\n    get headers() {\n        return this.privHeaders;\n    }\n    get body() {\n        return this.privBody;\n    }\n    get textBody() {\n        if (this.privMessageType === MessageType.Binary) {\n            throw new InvalidOperationError(\"Not supported for binary message\");\n        }\n        return this.privBody;\n    }\n    get binaryBody() {\n        if (this.privMessageType === MessageType.Text) {\n            throw new InvalidOperationError(\"Not supported for text message\");\n        }\n        return this.privBody;\n    }\n    get id() {\n        return this.privId;\n    }\n}\n\n//# sourceMappingURL=ConnectionMessage.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { PropertyId } from \"../sdk/Exports\";\nexport var RecognitionMode;\n(function (RecognitionMode) {\n    RecognitionMode[RecognitionMode[\"Interactive\"] = 0] = \"Interactive\";\n    RecognitionMode[RecognitionMode[\"Conversation\"] = 1] = \"Conversation\";\n    RecognitionMode[RecognitionMode[\"Dictation\"] = 2] = \"Dictation\";\n})(RecognitionMode || (RecognitionMode = {}));\nexport var SpeechResultFormat;\n(function (SpeechResultFormat) {\n    SpeechResultFormat[SpeechResultFormat[\"Simple\"] = 0] = \"Simple\";\n    SpeechResultFormat[SpeechResultFormat[\"Detailed\"] = 1] = \"Detailed\";\n})(SpeechResultFormat || (SpeechResultFormat = {}));\nexport class RecognizerConfig {\n    constructor(speechServiceConfig, parameters) {\n        this.privRecognitionMode = RecognitionMode.Interactive;\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new SpeechServiceConfig(new Context(null));\n        this.privParameters = parameters;\n    }\n    get parameters() {\n        return this.privParameters;\n    }\n    get recognitionMode() {\n        return this.privRecognitionMode;\n    }\n    set recognitionMode(value) {\n        this.privRecognitionMode = value;\n        this.privRecognitionActivityTimeout = value === RecognitionMode.Interactive ? 8000 : 25000;\n        this.privSpeechServiceConfig.Recognition = RecognitionMode[value];\n    }\n    get SpeechServiceConfig() {\n        return this.privSpeechServiceConfig;\n    }\n    get recognitionActivityTimeout() {\n        return this.privRecognitionActivityTimeout;\n    }\n    get isContinuousRecognition() {\n        return this.privRecognitionMode !== RecognitionMode.Interactive;\n    }\n    get autoDetectSourceLanguages() {\n        return this.parameters.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, undefined);\n    }\n}\n// The config is serialized and sent as the Speech.Config\n// tslint:disable-next-line:max-classes-per-file\nexport class SpeechServiceConfig {\n    constructor(context) {\n        this.serialize = () => {\n            return JSON.stringify(this, (key, value) => {\n                if (value && typeof value === \"object\") {\n                    const replacement = {};\n                    for (const k in value) {\n                        if (Object.hasOwnProperty.call(value, k)) {\n                            replacement[k && k.charAt(0).toLowerCase() + k.substring(1)] = value[k];\n                        }\n                    }\n                    return replacement;\n                }\n                return value;\n            });\n        };\n        this.context = context;\n    }\n    get Context() {\n        return this.context;\n    }\n    get Recognition() {\n        return this.recognition;\n    }\n    set Recognition(value) {\n        this.recognition = value.toLowerCase();\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class Context {\n    constructor(os) {\n        this.system = new System();\n        this.os = os;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class System {\n    constructor() {\n        // Note: below will be patched for official builds.\n        const SPEECHSDK_CLIENTSDK_VERSION = \"1.14.1\";\n        this.name = \"SpeechSDK\";\n        this.version = SPEECHSDK_CLIENTSDK_VERSION;\n        this.build = \"JavaScript\";\n        this.lang = \"JavaScript\";\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OS {\n    constructor(platform, name, version) {\n        this.platform = platform;\n        this.name = name;\n        this.version = version;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class Device {\n    constructor(manufacturer, model, version) {\n        this.manufacturer = manufacturer;\n        this.model = model;\n        this.version = version;\n    }\n}\nexport var connectivity;\n(function (connectivity) {\n    connectivity[\"Bluetooth\"] = \"Bluetooth\";\n    connectivity[\"Wired\"] = \"Wired\";\n    connectivity[\"WiFi\"] = \"WiFi\";\n    connectivity[\"Cellular\"] = \"Cellular\";\n    connectivity[\"InBuilt\"] = \"InBuilt\";\n    connectivity[\"Unknown\"] = \"Unknown\";\n})(connectivity || (connectivity = {}));\nexport var type;\n(function (type) {\n    type[\"Phone\"] = \"Phone\";\n    type[\"Speaker\"] = \"Speaker\";\n    type[\"Car\"] = \"Car\";\n    type[\"Headset\"] = \"Headset\";\n    type[\"Thermostat\"] = \"Thermostat\";\n    type[\"Microphones\"] = \"Microphones\";\n    type[\"Deskphone\"] = \"Deskphone\";\n    type[\"RemoteControl\"] = \"RemoteControl\";\n    type[\"Unknown\"] = \"Unknown\";\n    type[\"File\"] = \"File\";\n    type[\"Stream\"] = \"Stream\";\n})(type || (type = {}));\n\n//# sourceMappingURL=RecognizerConfig.js.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { v4 as uuid } from \"uuid\";\nconst createGuid = () => {\n    return uuid();\n};\nconst createNoDashGuid = () => {\n    return createGuid().replace(new RegExp(\"-\", \"g\"), \"\").toUpperCase();\n};\nexport { createGuid, createNoDashGuid };\n\n//# sourceMappingURL=Guid.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Define Speech Recognizer output formats.\n * @class OutputFormat\n */\nexport var OutputFormat;\n(function (OutputFormat) {\n    /**\n     * @member OutputFormat.Simple\n     */\n    OutputFormat[OutputFormat[\"Simple\"] = 0] = \"Simple\";\n    /**\n     * @member OutputFormat.Detailed\n     */\n    OutputFormat[OutputFormat[\"Detailed\"] = 1] = \"Detailed\";\n})(OutputFormat || (OutputFormat = {}));\n\n//# sourceMappingURL=OutputFormat.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\nexport class OCSPEvent extends PlatformEvent {\n    constructor(eventName, eventType, signature) {\n        super(eventName, eventType);\n        this.privSignature = signature;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OCSPMemoryCacheHitEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPMemoryCacheHitEvent\", EventType.Debug, signature);\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OCSPCacheMissEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPCacheMissEvent\", EventType.Debug, signature);\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OCSPDiskCacheHitEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPDiskCacheHitEvent\", EventType.Debug, signature);\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OCSPCacheUpdateNeededEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPCacheUpdateNeededEvent\", EventType.Debug, signature);\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OCSPMemoryCacheStoreEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPMemoryCacheStoreEvent\", EventType.Debug, signature);\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OCSPDiskCacheStoreEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPDiskCacheStoreEvent\", EventType.Debug, signature);\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OCSPCacheUpdatehCompleteEvent extends OCSPEvent {\n    constructor(signature) {\n        super(\"OCSPCacheUpdatehCompleteEvent\", EventType.Debug, signature);\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OCSPStapleReceivedEvent extends OCSPEvent {\n    constructor() {\n        super(\"OCSPStapleReceivedEvent\", EventType.Debug, \"\");\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OCSPWSUpgradeStartedEvent extends OCSPEvent {\n    constructor(serialNumber) {\n        super(\"OCSPWSUpgradeStartedEvent\", EventType.Debug, serialNumber);\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OCSPCacheEntryExpiredEvent extends OCSPEvent {\n    constructor(serialNumber, expireTime) {\n        super(\"OCSPCacheEntryExpiredEvent\", EventType.Debug, serialNumber);\n        this.privExpireTime = expireTime;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OCSPCacheEntryNeedsRefreshEvent extends OCSPEvent {\n    constructor(serialNumber, startTime, expireTime) {\n        super(\"OCSPCacheEntryNeedsRefreshEvent\", EventType.Debug, serialNumber);\n        this.privExpireTime = expireTime;\n        this.privStartTime = startTime;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OCSPCacheHitEvent extends OCSPEvent {\n    constructor(serialNumber, startTime, expireTime) {\n        super(\"OCSPCacheHitEvent\", EventType.Debug, serialNumber);\n        this.privExpireTime = expireTime;\n        this.privExpireTimeString = new Date(expireTime).toLocaleDateString();\n        this.privStartTime = startTime;\n        this.privStartTimeString = new Date(startTime).toLocaleTimeString();\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OCSPVerificationFailedEvent extends OCSPEvent {\n    constructor(serialNumber, error) {\n        super(\"OCSPVerificationFailedEvent\", EventType.Debug, serialNumber);\n        this.privError = error;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OCSPCacheFetchErrorEvent extends OCSPEvent {\n    constructor(serialNumber, error) {\n        super(\"OCSPCacheFetchErrorEvent\", EventType.Debug, serialNumber);\n        this.privError = error;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OCSPResponseRetrievedEvent extends OCSPEvent {\n    constructor(serialNumber) {\n        super(\"OCSPResponseRetrievedEvent\", EventType.Debug, serialNumber);\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class OCSPCacheUpdateErrorEvent extends OCSPEvent {\n    constructor(serialNumber, error) {\n        super(\"OCSPCacheUpdateErrorEvent\", EventType.Debug, serialNumber);\n        this.privError = error;\n    }\n}\n\n//# sourceMappingURL=OCSPEvents.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { PropertyId } from \"./Exports\";\n/**\n * Represents collection of properties and their values.\n * @class PropertyCollection\n */\nexport class PropertyCollection {\n    constructor() {\n        this.privKeys = [];\n        this.privValues = [];\n    }\n    /**\n     * Returns the property value in type String. The parameter must have the same type as String.\n     * Currently only String, int and bool are allowed.\n     * If the name is not available, the specified defaultValue is returned.\n     * @member PropertyCollection.prototype.getProperty\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} def - The default value which is returned if the parameter\n     *        is not available in the collection.\n     * @returns {string} value of the parameter.\n     */\n    getProperty(key, def) {\n        let keyToUse;\n        if (typeof key === \"string\") {\n            keyToUse = key;\n        }\n        else {\n            keyToUse = PropertyId[key];\n        }\n        for (let n = 0; n < this.privKeys.length; n++) {\n            if (this.privKeys[n] === keyToUse) {\n                return this.privValues[n];\n            }\n        }\n        return def;\n    }\n    /**\n     * Sets the String value of the parameter specified by name.\n     * @member PropertyCollection.prototype.setProperty\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} value - The value of the parameter.\n     */\n    setProperty(key, value) {\n        let keyToUse;\n        if (typeof key === \"string\") {\n            keyToUse = key;\n        }\n        else {\n            keyToUse = PropertyId[key];\n        }\n        for (let n = 0; n < this.privKeys.length; n++) {\n            if (this.privKeys[n] === keyToUse) {\n                this.privValues[n] = value;\n                return;\n            }\n        }\n        this.privKeys.push(keyToUse);\n        this.privValues.push(value);\n    }\n    /**\n     * Clones the collection.\n     * @member PropertyCollection.prototype.clone\n     * @function\n     * @public\n     * @returns {PropertyCollection} A copy of the collection.\n     */\n    clone() {\n        const clonedMap = new PropertyCollection();\n        for (let n = 0; n < this.privKeys.length; n++) {\n            clonedMap.privKeys.push(this.privKeys[n]);\n            clonedMap.privValues.push(this.privValues[n]);\n        }\n        return clonedMap;\n    }\n    /**\n     * Merges this set of properties into another, no overwrites.\n     * @member PropertyCollection.prototype.mergeTo\n     * @function\n     * @public\n     * @param {PropertyCollection} The collection to merge into.\n     */\n    mergeTo(destinationCollection) {\n        this.privKeys.forEach((key) => {\n            if (destinationCollection.getProperty(key, undefined) === undefined) {\n                const value = this.getProperty(key);\n                destinationCollection.setProperty(key, value);\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=PropertyCollection.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createNoDashGuid, Stream, } from \"../../common/Exports\";\nimport { Contracts } from \"../Contracts\";\nimport { AudioOutputFormatImpl } from \"./AudioOutputFormat\";\n/**\n * Represents audio output stream used for custom audio output configurations.\n * @class AudioOutputStream\n */\nexport class AudioOutputStream {\n    /**\n     * Creates and initializes an instance.\n     * @constructor\n     */\n    constructor() { }\n    /**\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\n     * @member AudioOutputStream.createPullStream\n     * @function\n     * @public\n     * @returns {PullAudioOutputStream} The audio output stream being created.\n     */\n    static createPullStream() {\n        return PullAudioOutputStream.create();\n    }\n}\n/**\n * Represents memory backed push audio output stream used for custom audio output configurations.\n * @class PullAudioOutputStream\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class PullAudioOutputStream extends AudioOutputStream {\n    /**\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\n     * @member PullAudioOutputStream.create\n     * @function\n     * @public\n     * @returns {PullAudioOutputStream} The push audio output stream being created.\n     */\n    static create() {\n        return new PullAudioOutputStreamImpl();\n    }\n}\n/**\n * Represents memory backed push audio output stream used for custom audio output configurations.\n * @private\n * @class PullAudioOutputStreamImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class PullAudioOutputStreamImpl extends PullAudioOutputStream {\n    /**\n     * Creates and initializes an instance with the given values.\n     * @constructor\n     */\n    constructor() {\n        super();\n        this.privId = createNoDashGuid();\n        this.privStream = new Stream();\n    }\n    /**\n     * Sets the format information to the stream. For internal use only.\n     * @param {AudioStreamFormat} format - the format to be set.\n     */\n    set format(format) {\n        if (format === undefined || format === null) {\n            this.privFormat = AudioOutputFormatImpl.getDefaultOutputFormat();\n        }\n        this.privFormat = format;\n    }\n    /**\n     * Format information for the audio\n     */\n    get format() {\n        return this.privFormat;\n    }\n    /**\n     * Checks if the stream is closed\n     * @member PullAudioOutputStreamImpl.prototype.isClosed\n     * @property\n     * @public\n     */\n    get isClosed() {\n        return this.privStream.isClosed;\n    }\n    /**\n     * Gets the id of the stream\n     * @member PullAudioOutputStreamImpl.prototype.id\n     * @property\n     * @public\n     */\n    id() {\n        return this.privId;\n    }\n    /**\n     * Reads audio data from the internal buffer.\n     * @member PullAudioOutputStreamImpl.prototype.read\n     * @function\n     * @public\n     * @param {ArrayBuffer} dataBuffer - An ArrayBuffer to store the read data.\n     * @returns {Promise<number>} - Audio buffer length has been read.\n     */\n    read(dataBuffer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const intView = new Int8Array(dataBuffer);\n            let totalBytes = 0;\n            if (this.privLastChunkView !== undefined) {\n                if (this.privLastChunkView.length > dataBuffer.byteLength) {\n                    intView.set(this.privLastChunkView.slice(0, dataBuffer.byteLength));\n                    this.privLastChunkView = this.privLastChunkView.slice(dataBuffer.byteLength);\n                    return Promise.resolve(dataBuffer.byteLength);\n                }\n                intView.set(this.privLastChunkView);\n                totalBytes = this.privLastChunkView.length;\n                this.privLastChunkView = undefined;\n            }\n            // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\n            while (totalBytes < dataBuffer.byteLength && !this.privStream.isReadEnded) {\n                const chunk = yield this.privStream.read();\n                if (chunk !== undefined && !chunk.isEnd) {\n                    let tmpBuffer;\n                    if (chunk.buffer.byteLength > dataBuffer.byteLength - totalBytes) {\n                        tmpBuffer = chunk.buffer.slice(0, dataBuffer.byteLength - totalBytes);\n                        this.privLastChunkView = new Int8Array(chunk.buffer.slice(dataBuffer.byteLength - totalBytes));\n                    }\n                    else {\n                        tmpBuffer = chunk.buffer;\n                    }\n                    intView.set(new Int8Array(tmpBuffer), totalBytes);\n                    totalBytes += tmpBuffer.byteLength;\n                }\n                else {\n                    yield this.privStream.readEnded();\n                }\n            }\n            return totalBytes;\n        });\n    }\n    /**\n     * Writes the audio data specified by making an internal copy of the data.\n     * @member PullAudioOutputStreamImpl.prototype.write\n     * @function\n     * @public\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\n     */\n    write(dataBuffer) {\n        Contracts.throwIfNullOrUndefined(this.privStream, \"must set format before writing\");\n        this.privStream.writeStreamChunk({\n            buffer: dataBuffer,\n            isEnd: false,\n            timeReceived: Date.now()\n        });\n    }\n    /**\n     * Closes the stream.\n     * @member PullAudioOutputStreamImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        this.privStream.close();\n    }\n}\n/*\n * Represents audio output stream used for custom audio output configurations.\n * @class PushAudioOutputStream\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class PushAudioOutputStream extends AudioOutputStream {\n    /**\n     * Creates and initializes and instance.\n     * @constructor\n     */\n    constructor() { super(); }\n    /**\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\n     * write() and close() methods.\n     * @member PushAudioOutputStream.create\n     * @function\n     * @public\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\n     *        derived from PushAudioOutputStreamCallback\n     * @returns {PushAudioOutputStream} The push audio output stream being created.\n     */\n    static create(callback) {\n        return new PushAudioOutputStreamImpl(callback);\n    }\n}\n/**\n * Represents audio output stream used for custom audio output configurations.\n * @private\n * @class PushAudioOutputStreamImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class PushAudioOutputStreamImpl extends PushAudioOutputStream {\n    /**\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\n     * read() and close() methods.\n     * @constructor\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\n     *        derived from PushAudioOutputStreamCallback\n     */\n    constructor(callback) {\n        super();\n        this.privId = createNoDashGuid();\n        this.privCallback = callback;\n    }\n    // tslint:disable-next-line:no-empty\n    set format(format) { }\n    write(buffer) {\n        if (!!this.privCallback.write) {\n            this.privCallback.write(buffer);\n        }\n    }\n    close() {\n        if (!!this.privCallback.close) {\n            this.privCallback.close();\n        }\n    }\n    id() {\n        return this.privId;\n    }\n}\n\n//# sourceMappingURL=AudioOutputStream.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n *  Defines error code in case that CancellationReason is Error.\n *  Added in version 1.1.0.\n */\nexport var CancellationErrorCode;\n(function (CancellationErrorCode) {\n    /**\n     * Indicates that no error occurred during speech recognition.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"NoError\"] = 0] = \"NoError\";\n    /**\n     * Indicates an authentication error.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"AuthenticationFailure\"] = 1] = \"AuthenticationFailure\";\n    /**\n     * Indicates that one or more recognition parameters are invalid.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"BadRequestParameters\"] = 2] = \"BadRequestParameters\";\n    /**\n     * Indicates that the number of parallel requests exceeded the number of allowed\n     * concurrent transcriptions for the subscription.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"TooManyRequests\"] = 3] = \"TooManyRequests\";\n    /**\n     * Indicates a connection error.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"ConnectionFailure\"] = 4] = \"ConnectionFailure\";\n    /**\n     * Indicates a time-out error when waiting for response from service.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"ServiceTimeout\"] = 5] = \"ServiceTimeout\";\n    /**\n     * Indicates that an error is returned by the service.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"ServiceError\"] = 6] = \"ServiceError\";\n    /**\n     * Indicates an unexpected runtime error.\n     */\n    CancellationErrorCode[CancellationErrorCode[\"RuntimeError\"] = 7] = \"RuntimeError\";\n})(CancellationErrorCode || (CancellationErrorCode = {}));\n\n//# sourceMappingURL=CancellationErrorCodes.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Represents audio stream format used for custom audio input configurations.\n * @class AudioStreamFormat\n */\nexport class AudioStreamFormat {\n    /**\n     * Creates an audio stream format object representing the default audio stream\n     * format (16KHz 16bit mono PCM).\n     * @member AudioStreamFormat.getDefaultInputFormat\n     * @function\n     * @public\n     * @returns {AudioStreamFormat} The audio stream format being created.\n     */\n    static getDefaultInputFormat() {\n        return AudioStreamFormatImpl.getDefaultInputFormat();\n    }\n    /**\n     * Creates an audio stream format object with the specified pcm waveformat characteristics.\n     * @member AudioStreamFormat.getWaveFormatPCM\n     * @function\n     * @public\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data\n     *        uses one channel and stereo data uses two channels.\n     * @returns {AudioStreamFormat} The audio stream format being created.\n     */\n    static getWaveFormatPCM(samplesPerSecond, bitsPerSample, channels) {\n        return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels);\n    }\n}\n/**\n * @private\n * @class AudioStreamFormatImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class AudioStreamFormatImpl extends AudioStreamFormat {\n    /**\n     * Creates an instance with the given values.\n     * @constructor\n     * @param {number} samplesPerSec - Samples per second.\n     * @param {number} bitsPerSample - Bits per sample.\n     * @param {number} channels - Number of channels.\n     */\n    constructor(samplesPerSec = 16000, bitsPerSample = 16, channels = 1) {\n        super();\n        this.setString = (view, offset, str) => {\n            for (let i = 0; i < str.length; i++) {\n                view.setUint8(offset + i, str.charCodeAt(i));\n            }\n        };\n        this.formatTag = 1;\n        this.bitsPerSample = bitsPerSample;\n        this.samplesPerSec = samplesPerSec;\n        this.channels = channels;\n        this.avgBytesPerSec = this.samplesPerSec * this.channels * (this.bitsPerSample / 8);\n        this.blockAlign = this.channels * Math.max(this.bitsPerSample, 8);\n        this.privHeader = new ArrayBuffer(44);\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\n        const view = new DataView(this.privHeader);\n        /* RIFF identifier */\n        this.setString(view, 0, \"RIFF\");\n        /* file length */\n        view.setUint32(4, 0, true);\n        /* RIFF type & Format */\n        this.setString(view, 8, \"WAVEfmt \");\n        /* format chunk length */\n        view.setUint32(16, 16, true);\n        /* sample format (raw) */\n        view.setUint16(20, 1, true);\n        /* channel count */\n        view.setUint16(22, this.channels, true);\n        /* sample rate */\n        view.setUint32(24, this.samplesPerSec, true);\n        /* byte rate (sample rate * block align) */\n        view.setUint32(28, this.avgBytesPerSec, true);\n        /* block align (channel count * bytes per sample) */\n        view.setUint16(32, this.channels * (this.bitsPerSample / 8), true);\n        /* bits per sample */\n        view.setUint16(34, this.bitsPerSample, true);\n        /* data chunk identifier */\n        this.setString(view, 36, \"data\");\n        /* data chunk length */\n        view.setUint32(40, 0, true);\n    }\n    /**\n     * Retrieves the default input format.\n     * @member AudioStreamFormatImpl.getDefaultInputFormat\n     * @function\n     * @public\n     * @returns {AudioStreamFormatImpl} The default input format.\n     */\n    static getDefaultInputFormat() {\n        return new AudioStreamFormatImpl();\n    }\n    /**\n     * Creates an audio context appropriate to current browser\n     * @member AudioStreamFormatImpl.getAudioContext\n     * @function\n     * @public\n     * @returns {AudioContext} An audio context instance\n     */\n    static getAudioContext(sampleRate) {\n        // Workaround for Speech SDK bug in Safari.\n        const AudioContext = window.AudioContext // our preferred impl\n            || window.webkitAudioContext // fallback, mostly when on Safari\n            || false; // could not find.\n        // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\n        if (!!AudioContext) {\n            if (sampleRate !== undefined && navigator.mediaDevices.getSupportedConstraints().sampleRate) {\n                return new AudioContext({ sampleRate });\n            }\n            else {\n                return new AudioContext();\n            }\n        }\n        else {\n            throw new Error(\"Browser does not support Web Audio API (AudioContext is not available).\");\n        }\n    }\n    /**\n     * Closes the configuration object.\n     * @member AudioStreamFormatImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() { return; }\n    get header() {\n        return this.privHeader;\n    }\n}\n\n//# sourceMappingURL=AudioStreamFormat.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport var PromiseState;\n(function (PromiseState) {\n    PromiseState[PromiseState[\"None\"] = 0] = \"None\";\n    PromiseState[PromiseState[\"Resolved\"] = 1] = \"Resolved\";\n    PromiseState[PromiseState[\"Rejected\"] = 2] = \"Rejected\";\n})(PromiseState || (PromiseState = {}));\nexport class PromiseResult {\n    constructor(promiseResultEventSource) {\n        this.throwIfError = () => {\n            if (this.isError) {\n                throw this.error;\n            }\n        };\n        promiseResultEventSource.on((result) => {\n            if (!this.privIsCompleted) {\n                this.privIsCompleted = true;\n                this.privIsError = false;\n                this.privResult = result;\n            }\n        }, (error) => {\n            if (!this.privIsCompleted) {\n                this.privIsCompleted = true;\n                this.privIsError = true;\n                this.privError = error;\n            }\n        });\n    }\n    get isCompleted() {\n        return this.privIsCompleted;\n    }\n    get isError() {\n        return this.privIsError;\n    }\n    get error() {\n        return this.privError;\n    }\n    get result() {\n        return this.privResult;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class PromiseResultEventSource {\n    constructor() {\n        this.setResult = (result) => {\n            this.privOnSetResult(result);\n        };\n        this.setError = (error) => {\n            this.privOnSetError(error);\n        };\n        this.on = (onSetResult, onSetError) => {\n            this.privOnSetResult = onSetResult;\n            this.privOnSetError = onSetError;\n        };\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class Deferred {\n    constructor() {\n        this.resolve = (result) => {\n            this.privResolve(result);\n            return this;\n        };\n        this.reject = (error) => {\n            this.privReject(error);\n            return this;\n        };\n        this.privPromise = new Promise((resolve, reject) => {\n            this.privResolve = resolve;\n            this.privReject = reject;\n        });\n    }\n    get promise() {\n        return this.privPromise;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class Sink {\n    constructor() {\n        this.privState = PromiseState.None;\n        this.privPromiseResult = null;\n        this.privPromiseResultEvents = null;\n        this.privSuccessHandlers = [];\n        this.privErrorHandlers = [];\n        this.resolve = (result) => {\n            if (this.privState !== PromiseState.None) {\n                throw new Error(\"'Cannot resolve a completed promise'\");\n            }\n            this.privState = PromiseState.Resolved;\n            this.privPromiseResultEvents.setResult(result);\n            for (let i = 0; i < this.privSuccessHandlers.length; i++) {\n                this.executeSuccessCallback(result, this.privSuccessHandlers[i], this.privErrorHandlers[i]);\n            }\n            this.detachHandlers();\n        };\n        this.reject = (error) => {\n            if (this.privState !== PromiseState.None) {\n                throw new Error(\"'Cannot reject a completed promise'\");\n            }\n            this.privState = PromiseState.Rejected;\n            this.privPromiseResultEvents.setError(error);\n            for (const errorHandler of this.privErrorHandlers) {\n                this.executeErrorCallback(error, errorHandler);\n            }\n            this.detachHandlers();\n        };\n        this.on = (successCallback, errorCallback) => {\n            if (successCallback == null) {\n                successCallback = (r) => { return; };\n            }\n            if (this.privState === PromiseState.None) {\n                this.privSuccessHandlers.push(successCallback);\n                this.privErrorHandlers.push(errorCallback);\n            }\n            else {\n                if (this.privState === PromiseState.Resolved) {\n                    this.executeSuccessCallback(this.privPromiseResult.result, successCallback, errorCallback);\n                }\n                else if (this.privState === PromiseState.Rejected) {\n                    this.executeErrorCallback(this.privPromiseResult.error, errorCallback);\n                }\n                this.detachHandlers();\n            }\n        };\n        this.executeSuccessCallback = (result, successCallback, errorCallback) => {\n            try {\n                successCallback(result);\n            }\n            catch (e) {\n                this.executeErrorCallback(`'Unhandled callback error: ${e}'`, errorCallback);\n            }\n        };\n        this.executeErrorCallback = (error, errorCallback) => {\n            if (errorCallback) {\n                try {\n                    errorCallback(error);\n                }\n                catch (e) {\n                    throw new Error(`'Unhandled callback error: ${e}. InnerError: ${error}'`);\n                }\n            }\n            else {\n                throw new Error(`'Unhandled error: ${error}'`);\n            }\n        };\n        this.detachHandlers = () => {\n            this.privErrorHandlers = [];\n            this.privSuccessHandlers = [];\n        };\n        this.privPromiseResultEvents = new PromiseResultEventSource();\n        this.privPromiseResult = new PromiseResult(this.privPromiseResultEvents);\n    }\n    get state() {\n        return this.privState;\n    }\n    get result() {\n        return this.privPromiseResult;\n    }\n}\nexport function marshalPromiseToCallbacks(promise, cb, err) {\n    promise.then((val) => {\n        try {\n            if (!!cb) {\n                cb(val);\n            }\n        }\n        catch (error) {\n            if (!!err) {\n                try {\n                    if (error instanceof Error) {\n                        const typedError = error;\n                        err(typedError.name + \": \" + typedError.message);\n                    }\n                    else {\n                        err(error);\n                    }\n                    /* tslint:disable:no-empty */\n                }\n                catch (error) { }\n            }\n        }\n    }, (error) => {\n        if (!!err) {\n            try {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n                /* tslint:disable:no-empty */\n            }\n            catch (error) { }\n        }\n    });\n}\n\n//# sourceMappingURL=Promise.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ServicePropertiesPropertyName, } from \"../common.speech/Exports\";\nimport { PropertyId } from \"../sdk/Exports\";\nimport { QueryParameterNames } from \"./QueryParameterNames\";\nexport class ConnectionFactoryBase {\n    setCommonUrlParams(config, queryParams, endpoint) {\n        this.setUrlParameter(PropertyId.SpeechServiceConnection_EnableAudioLogging, QueryParameterNames.EnableAudioLogging, config, queryParams, endpoint);\n        this.setUrlParameter(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, QueryParameterNames.EnableWordLevelTimestamps, config, queryParams, endpoint);\n        this.setUrlParameter(PropertyId.SpeechServiceResponse_ProfanityOption, QueryParameterNames.Profanify, config, queryParams, endpoint);\n        this.setUrlParameter(PropertyId.SpeechServiceConnection_InitialSilenceTimeoutMs, QueryParameterNames.InitialSilenceTimeoutMs, config, queryParams, endpoint);\n        this.setUrlParameter(PropertyId.SpeechServiceConnection_EndSilenceTimeoutMs, QueryParameterNames.EndSilenceTimeoutMs, config, queryParams, endpoint);\n        this.setUrlParameter(PropertyId.SpeechServiceResponse_StablePartialResultThreshold, QueryParameterNames.StableIntermediateThreshold, config, queryParams, endpoint);\n        const serviceProperties = JSON.parse(config.parameters.getProperty(ServicePropertiesPropertyName, \"{}\"));\n        Object.keys(serviceProperties).forEach((value, num, array) => {\n            queryParams[value] = serviceProperties[value];\n        });\n    }\n    setUrlParameter(propId, parameterName, config, queryParams, endpoint) {\n        const value = config.parameters.getProperty(propId, undefined);\n        if (value && (!endpoint || endpoint.search(parameterName) === -1)) {\n            queryParams[parameterName] = value.toLocaleLowerCase();\n        }\n    }\n}\n\n//# sourceMappingURL=ConnectionFactoryBase.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { SpeechSynthesisOutputFormat } from \"../SpeechSynthesisOutputFormat\";\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat\";\nexport var AudioFormatTag;\n(function (AudioFormatTag) {\n    AudioFormatTag[AudioFormatTag[\"PCM\"] = 1] = \"PCM\";\n    AudioFormatTag[AudioFormatTag[\"MuLaw\"] = 2] = \"MuLaw\";\n    AudioFormatTag[AudioFormatTag[\"Siren\"] = 3] = \"Siren\";\n    AudioFormatTag[AudioFormatTag[\"MP3\"] = 4] = \"MP3\";\n    AudioFormatTag[AudioFormatTag[\"SILKSkype\"] = 5] = \"SILKSkype\";\n    AudioFormatTag[AudioFormatTag[\"Opus\"] = 6] = \"Opus\";\n})(AudioFormatTag || (AudioFormatTag = {}));\n/**\n * @private\n * @class AudioOutputFormatImpl\n * Added in version 1.11.0\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class AudioOutputFormatImpl extends AudioStreamFormatImpl {\n    /**\n     * Creates an instance with the given values.\n     * @constructor\n     * @param formatTag\n     * @param {number} samplesPerSec - Samples per second.\n     * @param {number} bitsPerSample - Bits per sample.\n     * @param {number} channels - Number of channels.\n     * @param avgBytesPerSec\n     * @param blockAlign\n     * @param audioFormatString\n     * @param requestAudioFormatString\n     * @param hasHeader\n     */\n    constructor(formatTag, channels, samplesPerSec, avgBytesPerSec, blockAlign, bitsPerSample, audioFormatString, requestAudioFormatString, hasHeader) {\n        super(samplesPerSec, bitsPerSample, channels);\n        this.formatTag = formatTag;\n        this.avgBytesPerSec = avgBytesPerSec;\n        this.blockAlign = blockAlign;\n        this.priAudioFormatString = audioFormatString;\n        this.priRequestAudioFormatString = requestAudioFormatString;\n        this.priHasHeader = hasHeader;\n    }\n    static fromSpeechSynthesisOutputFormat(speechSynthesisOutputFormat) {\n        if (speechSynthesisOutputFormat === undefined) {\n            return AudioOutputFormatImpl.getDefaultOutputFormat();\n        }\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(AudioOutputFormatImpl.SpeechSynthesisOutputFormatToString[speechSynthesisOutputFormat]);\n    }\n    static fromSpeechSynthesisOutputFormatString(speechSynthesisOutputFormatString) {\n        switch (speechSynthesisOutputFormatString) {\n            case \"raw-8khz-8bit-mono-mulaw\":\n                return new AudioOutputFormatImpl(AudioFormatTag.PCM, 1, 8000, 8000, 1, 8, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-16khz-16kbps-mono-siren\":\n                return new AudioOutputFormatImpl(AudioFormatTag.Siren, 1, 16000, 2000, 40, 0, speechSynthesisOutputFormatString, \"audio-16khz-16kbps-mono-siren\", true);\n            case \"audio-16khz-16kbps-mono-siren\":\n                return new AudioOutputFormatImpl(AudioFormatTag.Siren, 1, 16000, 2000, 40, 0, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-16khz-32kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioFormatTag.MP3, 1, 16000, 32 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-16khz-128kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioFormatTag.MP3, 1, 16000, 128 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-16khz-64kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioFormatTag.MP3, 1, 16000, 64 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-48kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioFormatTag.MP3, 1, 16000, 48 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-96kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioFormatTag.MP3, 1, 16000, 96 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"audio-24khz-160kbitrate-mono-mp3\":\n                return new AudioOutputFormatImpl(AudioFormatTag.MP3, 1, 16000, 160 << 7, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"raw-16khz-16bit-mono-truesilk\":\n                return new AudioOutputFormatImpl(AudioFormatTag.SILKSkype, 1, 16000, 32000, 2, 16, speechSynthesisOutputFormatString, speechSynthesisOutputFormatString, false);\n            case \"riff-8khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioFormatTag.PCM, 1, 8000, 16000, 2, 16, speechSynthesisOutputFormatString, \"raw-8khz-16bit-mono-pcm\", true);\n            case \"riff-24khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioFormatTag.PCM, 1, 24000, 48000, 2, 16, speechSynthesisOutputFormatString, \"raw-24khz-16bit-mono-pcm\", true);\n            case \"riff-8khz-8bit-mono-mulaw\":\n                return new AudioOutputFormatImpl(AudioFormatTag.MuLaw, 1, 8000, 8000, 1, 8, speechSynthesisOutputFormatString, \"raw-8khz-8bit-mono-mulaw\", true);\n            case \"raw-16khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioFormatTag.PCM, 1, 16000, 32000, 2, 16, speechSynthesisOutputFormatString, \"raw-16khz-16bit-mono-pcm\", false);\n            case \"raw-24khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioFormatTag.PCM, 1, 24000, 48000, 2, 16, speechSynthesisOutputFormatString, \"raw-24khz-16bit-mono-pcm\", false);\n            case \"raw-8khz-16bit-mono-pcm\":\n                return new AudioOutputFormatImpl(AudioFormatTag.PCM, 1, 8000, 16000, 2, 16, speechSynthesisOutputFormatString, \"raw-8khz-16bit-mono-pcm\", false);\n            case \"ogg-16khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioFormatTag.Opus, 1, 16000, 8192, 2, 16, speechSynthesisOutputFormatString, \"ogg-16khz-16bit-mono-opus\", false);\n            case \"ogg-24khz-16bit-mono-opus\":\n                return new AudioOutputFormatImpl(AudioFormatTag.Opus, 1, 24000, 8192, 2, 16, speechSynthesisOutputFormatString, \"ogg-24khz-16bit-mono-opus\", false);\n            case \"riff-16khz-16bit-mono-pcm\":\n            default:\n                return new AudioOutputFormatImpl(AudioFormatTag.PCM, 1, 16000, 32000, 2, 16, \"riff-16khz-16bit-mono-pcm\", \"raw-16khz-16bit-mono-pcm\", true);\n        }\n    }\n    static getDefaultOutputFormat() {\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString((typeof window !== \"undefined\") ? \"audio-24khz-48kbitrate-mono-mp3\" : \"riff-16khz-16bit-mono-pcm\");\n    }\n    /**\n     * Specifies if this audio output format has a header\n     * @boolean AudioOutputFormatImpl.prototype.hasHeader\n     * @function\n     * @public\n     */\n    get hasHeader() {\n        return this.priHasHeader;\n    }\n    /**\n     * Specifies the header of this format\n     * @ArrayBuffer AudioOutputFormatImpl.prototype.header\n     * @function\n     * @public\n     */\n    get header() {\n        if (this.hasHeader) {\n            return this.privHeader;\n        }\n        return undefined;\n    }\n    /**\n     * Updates the header based on the audio length\n     * @member AudioOutputFormatImpl.updateHeader\n     * @function\n     * @public\n     * @param {number} audioLength - the audio length\n     */\n    updateHeader(audioLength) {\n        if (this.priHasHeader) {\n            const view = new DataView(this.privHeader);\n            view.setUint32(40, audioLength, true);\n        }\n    }\n    /**\n     * Specifies the audio format string to be sent to the service\n     * @string AudioOutputFormatImpl.prototype.requestAudioFormatString\n     * @function\n     * @public\n     */\n    get requestAudioFormatString() {\n        return this.priRequestAudioFormatString;\n    }\n}\nAudioOutputFormatImpl.SpeechSynthesisOutputFormatToString = {\n    [SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw]: \"raw-8khz-8bit-mono-mulaw\",\n    [SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren]: \"riff-16khz-16kbps-mono-siren\",\n    [SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren]: \"audio-16khz-16kbps-mono-siren\",\n    [SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3]: \"audio-16khz-32kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3]: \"audio-16khz-128kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3]: \"audio-16khz-64kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3]: \"audio-24khz-48kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3]: \"audio-24khz-96kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3]: \"audio-24khz-160kbitrate-mono-mp3\",\n    [SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk]: \"raw-16khz-16bit-mono-truesilk\",\n    [SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm]: \"riff-16khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm]: \"riff-8khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm]: \"riff-24khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw]: \"riff-8khz-8bit-mono-mulaw\",\n    [SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm]: \"raw-16khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm]: \"raw-24khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm]: \"raw-8khz-16bit-mono-pcm\",\n    [SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus]: \"ogg-16khz-16bit-mono-opus\",\n    [SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus]: \"ogg-24khz-16bit-mono-opus\",\n};\n\n//# sourceMappingURL=AudioOutputFormat.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RecognitionResult } from \"./Exports\";\n/**\n * Defines result of speech recognition.\n * @class SpeechRecognitionResult\n */\nexport class SpeechRecognitionResult extends RecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @public\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} language - Primary Language detected, if provided.\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param {string} speakerId - speaker id for conversation transcription, if provided.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(resultId, reason, text, duration, offset, language, languageDetectionConfidence, speakerId, errorDetails, json, properties) {\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties);\n        this.privSpeakerId = speakerId;\n    }\n    /**\n     * speaker id from conversation transcription/id scenarios\n     * @member SpeechRecognitionResult.prototype.speakerId\n     * @function\n     * @public\n     * @returns {string} id of speaker in given result\n     */\n    get speakerId() {\n        return this.privSpeakerId;\n    }\n}\n\n//# sourceMappingURL=SpeechRecognitionResult.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { CancellationErrorCode, CancellationReason, ResultReason } from \"../sdk/Exports\";\nimport { RecognitionStatus } from \"./Exports\";\nexport class EnumTranslation {\n    static implTranslateRecognitionResult(recognitionStatus) {\n        let reason = ResultReason.Canceled;\n        switch (recognitionStatus) {\n            case RecognitionStatus.Success:\n                reason = ResultReason.RecognizedSpeech;\n                break;\n            case RecognitionStatus.NoMatch:\n            case RecognitionStatus.InitialSilenceTimeout:\n            case RecognitionStatus.BabbleTimeout:\n            case RecognitionStatus.EndOfDictation:\n                reason = ResultReason.NoMatch;\n                break;\n            case RecognitionStatus.Error:\n            default:\n                reason = ResultReason.Canceled;\n                break;\n        }\n        return reason;\n    }\n    static implTranslateCancelResult(recognitionStatus) {\n        let reason = CancellationReason.EndOfStream;\n        switch (recognitionStatus) {\n            case RecognitionStatus.Success:\n            case RecognitionStatus.EndOfDictation:\n            case RecognitionStatus.NoMatch:\n                reason = CancellationReason.EndOfStream;\n                break;\n            case RecognitionStatus.InitialSilenceTimeout:\n            case RecognitionStatus.BabbleTimeout:\n            case RecognitionStatus.Error:\n            default:\n                reason = CancellationReason.Error;\n                break;\n        }\n        return reason;\n    }\n    static implTranslateCancelErrorCode(recognitionStatus) {\n        let reason = CancellationErrorCode.NoError;\n        switch (recognitionStatus) {\n            case RecognitionStatus.Error:\n                reason = CancellationErrorCode.ServiceError;\n                break;\n            case RecognitionStatus.TooManyRequests:\n                reason = CancellationErrorCode.TooManyRequests;\n                break;\n            default:\n                reason = CancellationErrorCode.NoError;\n                break;\n        }\n        return reason;\n    }\n}\n\n//# sourceMappingURL=EnumTranslation.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\nexport class AudioSourceEvent extends PlatformEvent {\n    constructor(eventName, audioSourceId, eventType = EventType.Info) {\n        super(eventName, eventType);\n        this.privAudioSourceId = audioSourceId;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class AudioSourceInitializingEvent extends AudioSourceEvent {\n    constructor(audioSourceId) {\n        super(\"AudioSourceInitializingEvent\", audioSourceId);\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class AudioSourceReadyEvent extends AudioSourceEvent {\n    constructor(audioSourceId) {\n        super(\"AudioSourceReadyEvent\", audioSourceId);\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class AudioSourceOffEvent extends AudioSourceEvent {\n    constructor(audioSourceId) {\n        super(\"AudioSourceOffEvent\", audioSourceId);\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class AudioSourceErrorEvent extends AudioSourceEvent {\n    constructor(audioSourceId, error) {\n        super(\"AudioSourceErrorEvent\", audioSourceId, EventType.Error);\n        this.privError = error;\n    }\n    get error() {\n        return this.privError;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class AudioStreamNodeEvent extends AudioSourceEvent {\n    constructor(eventName, audioSourceId, audioNodeId) {\n        super(eventName, audioSourceId);\n        this.privAudioNodeId = audioNodeId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class AudioStreamNodeAttachingEvent extends AudioStreamNodeEvent {\n    constructor(audioSourceId, audioNodeId) {\n        super(\"AudioStreamNodeAttachingEvent\", audioSourceId, audioNodeId);\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class AudioStreamNodeAttachedEvent extends AudioStreamNodeEvent {\n    constructor(audioSourceId, audioNodeId) {\n        super(\"AudioStreamNodeAttachedEvent\", audioSourceId, audioNodeId);\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class AudioStreamNodeDetachedEvent extends AudioStreamNodeEvent {\n    constructor(audioSourceId, audioNodeId) {\n        super(\"AudioStreamNodeDetachedEvent\", audioSourceId, audioNodeId);\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class AudioStreamNodeErrorEvent extends AudioStreamNodeEvent {\n    constructor(audioSourceId, audioNodeId, error) {\n        super(\"AudioStreamNodeErrorEvent\", audioSourceId, audioNodeId);\n        this.privError = error;\n    }\n    get error() {\n        return this.privError;\n    }\n}\n\n//# sourceMappingURL=AudioSourceEvents.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { EventType, PlatformEvent } from \"../common/Exports\";\nexport class SpeechRecognitionEvent extends PlatformEvent {\n    constructor(eventName, requestId, sessionId, eventType = EventType.Info) {\n        super(eventName, eventType);\n        this.privRequestId = requestId;\n        this.privSessionId = sessionId;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get sessionId() {\n        return this.privSessionId;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class RecognitionTriggeredEvent extends SpeechRecognitionEvent {\n    constructor(requestId, sessionId, audioSourceId, audioNodeId) {\n        super(\"RecognitionTriggeredEvent\", requestId, sessionId);\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class ListeningStartedEvent extends SpeechRecognitionEvent {\n    constructor(requestId, sessionId, audioSourceId, audioNodeId) {\n        super(\"ListeningStartedEvent\", requestId, sessionId);\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class ConnectingToServiceEvent extends SpeechRecognitionEvent {\n    constructor(requestId, authFetchEventid, sessionId) {\n        super(\"ConnectingToServiceEvent\", requestId, sessionId);\n        this.privAuthFetchEventid = authFetchEventid;\n    }\n    get authFetchEventid() {\n        return this.privAuthFetchEventid;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class RecognitionStartedEvent extends SpeechRecognitionEvent {\n    constructor(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId) {\n        super(\"RecognitionStartedEvent\", requestId, sessionId);\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n        this.privAuthFetchEventId = authFetchEventId;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n    get authFetchEventId() {\n        return this.privAuthFetchEventId;\n    }\n}\nexport var RecognitionCompletionStatus;\n(function (RecognitionCompletionStatus) {\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"Success\"] = 0] = \"Success\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceError\"] = 1] = \"AudioSourceError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceTimeout\"] = 2] = \"AudioSourceTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchError\"] = 3] = \"AuthTokenFetchError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchTimeout\"] = 4] = \"AuthTokenFetchTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnAuthorized\"] = 5] = \"UnAuthorized\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectTimeout\"] = 6] = \"ConnectTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectError\"] = 7] = \"ConnectError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ClientRecognitionActivityTimeout\"] = 8] = \"ClientRecognitionActivityTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnknownError\"] = 9] = \"UnknownError\";\n})(RecognitionCompletionStatus || (RecognitionCompletionStatus = {}));\n// tslint:disable-next-line:max-classes-per-file\nexport class RecognitionEndedEvent extends SpeechRecognitionEvent {\n    constructor(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId, serviceTag, status, error) {\n        super(\"RecognitionEndedEvent\", requestId, sessionId, status === RecognitionCompletionStatus.Success ? EventType.Info : EventType.Error);\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n        this.privAuthFetchEventId = authFetchEventId;\n        this.privStatus = status;\n        this.privError = error;\n        this.privServiceTag = serviceTag;\n    }\n    get audioSourceId() {\n        return this.privAudioSourceId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n    get authFetchEventId() {\n        return this.privAuthFetchEventId;\n    }\n    get serviceTag() {\n        return this.privServiceTag;\n    }\n    get status() {\n        return this.privStatus;\n    }\n    get error() {\n        return this.privError;\n    }\n}\n\n//# sourceMappingURL=RecognitionEvents.js.map\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Defines the possible reasons a recognition result might be canceled.\n * @class CancellationReason\n */\nexport var CancellationReason;\n(function (CancellationReason) {\n    /**\n     * Indicates that an error occurred during speech recognition.\n     * @member CancellationReason.Error\n     */\n    CancellationReason[CancellationReason[\"Error\"] = 0] = \"Error\";\n    /**\n     * Indicates that the end of the audio stream was reached.\n     * @member CancellationReason.EndOfStream\n     */\n    CancellationReason[CancellationReason[\"EndOfStream\"] = 1] = \"EndOfStream\";\n})(CancellationReason || (CancellationReason = {}));\n\n//# sourceMappingURL=CancellationReason.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class Timeout {\n}\nTimeout.workerTimers = null;\nTimeout.clearTimeout = (timerId) => Timeout.timers().clearTimeout(timerId);\nTimeout.setTimeout = (func, delay) => Timeout.timers().setTimeout(func, delay);\nTimeout.load = (url) => {\n    // Prefilling the Maps with a function indexed by zero is necessary to be compliant with the specification.\n    const scheduledTimeoutFunctions = new Map([[0, () => { }]]); // tslint:disable-line no-empty\n    const unhandledRequests = new Map();\n    const worker = new Worker(url);\n    worker.addEventListener(\"message\", ({ data }) => {\n        if (Timeout.isCallNotification(data)) {\n            const { params: { timerId } } = data;\n            const idOrFunc = scheduledTimeoutFunctions.get(timerId);\n            if (typeof idOrFunc === \"number\") {\n                const unhandledTimerId = unhandledRequests.get(idOrFunc);\n                if (unhandledTimerId === undefined ||\n                    unhandledTimerId !== timerId) {\n                    throw new Error(\"The timer is in an undefined state.\");\n                }\n            }\n            else if (typeof idOrFunc !== \"undefined\") {\n                idOrFunc();\n                // A timeout can be safely deleted because it is only called once.\n                scheduledTimeoutFunctions.delete(timerId);\n            }\n            else {\n                throw new Error(\"The timer is in an undefined state.\");\n            }\n        }\n        else if (Timeout.isClearResponse(data)) {\n            const { id } = data;\n            const unhandledTimerId = unhandledRequests.get(id);\n            if (unhandledTimerId === undefined) {\n                throw new Error(\"The timer is in an undefined state.\");\n            }\n            unhandledRequests.delete(id);\n            scheduledTimeoutFunctions.delete(unhandledTimerId);\n        }\n        else {\n            const { error: { message } } = data;\n            throw new Error(message);\n        }\n    });\n    const clearTimeout = (timerId) => {\n        const id = Math.random();\n        unhandledRequests.set(id, timerId);\n        scheduledTimeoutFunctions.set(timerId, id);\n        worker.postMessage({\n            id,\n            method: \"clear\",\n            params: { timerId }\n        });\n    };\n    const setTimeout = (func, delay) => {\n        const timerId = Math.random();\n        scheduledTimeoutFunctions.set(timerId, func);\n        worker.postMessage({\n            id: null,\n            method: \"set\",\n            params: {\n                delay,\n                now: performance.now(),\n                timerId\n            }\n        });\n        return timerId;\n    };\n    return {\n        clearTimeout,\n        setTimeout\n    };\n};\nTimeout.loadWorkerTimers = () => {\n    const worker = `!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=14)}([function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return i})),n.d(t,\"b\",(function(){return u})),n.d(t,\"c\",(function(){return a})),n.d(t,\"d\",(function(){return d}));const r=new Map,o=new Map,i=e=>{const t=r.get(e);if(void 0===t)throw new Error('There is no interval scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),r.delete(e)},u=e=>{const t=o.get(e);if(void 0===t)throw new Error('There is no timeout scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),o.delete(e)},f=(e,t)=>{let n,r;if(\"performance\"in self){const o=performance.now();n=o,r=e-Math.max(0,o-t)}else n=Date.now(),r=e;return{expected:n+r,remainingDelay:r}},c=(e,t,n,r)=>{const o=\"performance\"in self?performance.now():Date.now();o>n?postMessage({id:null,method:\"call\",params:{timerId:t}}):e.set(t,setTimeout(c,n-o,e,t,n))},a=(e,t,n)=>{const{expected:o,remainingDelay:i}=f(e,n);r.set(t,setTimeout(c,i,r,t,o))},d=(e,t,n)=>{const{expected:r,remainingDelay:i}=f(e,n);o.set(t,setTimeout(c,i,o,t,r))}},function(e,t,n){\"use strict\";n.r(t);var r=n(2);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(3);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(4);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o);var f=n(5);for(var o in f)\"default\"!==o&&function(e){n.d(t,e,(function(){return f[e]}))}(o);var c=n(6);for(var o in c)\"default\"!==o&&function(e){n.d(t,e,(function(){return c[e]}))}(o);var a=n(7);for(var o in a)\"default\"!==o&&function(e){n.d(t,e,(function(){return a[e]}))}(o);var d=n(8);for(var o in d)\"default\"!==o&&function(e){n.d(t,e,(function(){return d[e]}))}(o);var s=n(9);for(var o in s)\"default\"!==o&&function(e){n.d(t,e,(function(){return s[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(11);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(12);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(13);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(0),o=n(1);for(var i in o)\"default\"!==i&&function(e){n.d(t,e,(function(){return o[e]}))}(i);var u=n(10);for(var i in u)\"default\"!==i&&function(e){n.d(t,e,(function(){return u[e]}))}(i);addEventListener(\"message\",({data:e})=>{try{if(\"clear\"===e.method){const{id:t,params:{timerId:n}}=e;Object(r.b)(n),postMessage({error:null,id:t})}else{if(\"set\"!==e.method)throw new Error('The given method \"'.concat(e.method,'\" is not supported'));{const{params:{delay:t,now:n,timerId:o}}=e;Object(r.d)(t,o,n)}}}catch(t){postMessage({error:{message:t.message},id:e.id,result:null})}})}]);`; // tslint:disable-line:max-line-length\n    return () => {\n        if (Timeout.workerTimers !== null) {\n            return Timeout.workerTimers;\n        }\n        const blob = new Blob([worker], { type: \"application/javascript; charset=utf-8\" });\n        const url = URL.createObjectURL(blob);\n        Timeout.workerTimers = Timeout.load(url);\n        // Edge doesn't like the URL to be revoked directly.\n        Timeout.workerTimers.setTimeout(() => URL.revokeObjectURL(url), 0);\n        return Timeout.workerTimers;\n    };\n};\nTimeout.timers = Timeout.loadWorkerTimers();\nTimeout.isCallNotification = (message) => {\n    return message.method !== undefined && message.method === \"call\";\n};\nTimeout.isClearResponse = (message) => {\n    return message.error === null && typeof message.id === \"number\";\n};\n\n//# sourceMappingURL=Timeout.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ReplayableAudioNode } from \"../common.browser/Exports\";\nimport { ArgumentNullError, ConnectionState, createNoDashGuid, EventSource, MessageType, ServiceEvent, Timeout } from \"../common/Exports\";\nimport { CancellationErrorCode, CancellationReason, PropertyId, RecognitionEventArgs, SessionEventArgs, } from \"../sdk/Exports\";\nimport { AgentConfig, DynamicGrammarBuilder, RequestSession, SpeechContext, SpeechDetected, } from \"./Exports\";\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\nexport class ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        this.privSetTimeout = setTimeout;\n        this.recognizeOverride = undefined;\n        this.disconnectOverride = undefined;\n        this.receiveMessageOverride = undefined;\n        this.sendSpeechContext = (connection) => {\n            const speechContextJson = this.speechContext.toJSON();\n            if (speechContextJson) {\n                return connection.send(new SpeechConnectionMessage(MessageType.Text, \"speech.context\", this.privRequestSession.requestId, \"application/json\", speechContextJson));\n            }\n            return;\n        };\n        this.sendPrePayloadJSONOverride = undefined;\n        this.postConnectImplOverride = undefined;\n        this.configConnectionOverride = undefined;\n        this.sendSpeechServiceConfig = (connection, requestSession, SpeechServiceConfigJson) => {\n            // filter out anything that is not required for the service to work.\n            if (ServiceRecognizerBase.telemetryDataEnabled !== true) {\n                const withTelemetry = JSON.parse(SpeechServiceConfigJson);\n                const replacement = {\n                    context: {\n                        system: withTelemetry.context.system,\n                    },\n                };\n                SpeechServiceConfigJson = JSON.stringify(replacement);\n            }\n            if (SpeechServiceConfigJson) {\n                return connection.send(new SpeechConnectionMessage(MessageType.Text, \"speech.config\", requestSession.requestId, \"application/json\", SpeechServiceConfigJson));\n            }\n            return;\n        };\n        if (!authentication) {\n            throw new ArgumentNullError(\"authentication\");\n        }\n        if (!connectionFactory) {\n            throw new ArgumentNullError(\"connectionFactory\");\n        }\n        if (!audioSource) {\n            throw new ArgumentNullError(\"audioSource\");\n        }\n        if (!recognizerConfig) {\n            throw new ArgumentNullError(\"recognizerConfig\");\n        }\n        this.privMustReportEndOfStream = false;\n        this.privAuthentication = authentication;\n        this.privConnectionFactory = connectionFactory;\n        this.privAudioSource = audioSource;\n        this.privRecognizerConfig = recognizerConfig;\n        this.privIsDisposed = false;\n        this.privRecognizer = recognizer;\n        this.privRequestSession = new RequestSession(this.privAudioSource.id());\n        this.privConnectionEvents = new EventSource();\n        this.privServiceEvents = new EventSource();\n        this.privDynamicGrammar = new DynamicGrammarBuilder();\n        this.privSpeechContext = new SpeechContext(this.privDynamicGrammar);\n        this.privAgentConfig = new AgentConfig();\n        if (typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") {\n            this.privSetTimeout = Timeout.setTimeout;\n        }\n    }\n    get audioSource() {\n        return this.privAudioSource;\n    }\n    get speechContext() {\n        return this.privSpeechContext;\n    }\n    get dynamicGrammar() {\n        return this.privDynamicGrammar;\n    }\n    get agentConfig() {\n        return this.privAgentConfig;\n    }\n    set conversationTranslatorToken(token) {\n        this.privRecognizerConfig.parameters.setProperty(PropertyId.ConversationTranslator_Token, token);\n    }\n    set authentication(auth) {\n        this.privAuthentication = this.authentication;\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    dispose(reason) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.privIsDisposed = true;\n            if (this.privConnectionConfigurationPromise) {\n                try {\n                    const connection = yield this.privConnectionConfigurationPromise;\n                    yield connection.dispose(reason);\n                }\n                catch (error) {\n                    // The connection is in a bad state. But we're trying to kill it, so...\n                    return;\n                }\n            }\n        });\n    }\n    get connectionEvents() {\n        return this.privConnectionEvents;\n    }\n    get serviceEvents() {\n        return this.privServiceEvents;\n    }\n    get recognitionMode() {\n        return this.privRecognizerConfig.recognitionMode;\n    }\n    recognize(recoMode, successCallback, errorCallBack) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.recognizeOverride !== undefined) {\n                return this.recognizeOverride(recoMode, successCallback, errorCallBack);\n            }\n            // Clear the existing configuration promise to force a re-transmission of config and context.\n            this.privConnectionConfigurationPromise = null;\n            this.privRecognizerConfig.recognitionMode = recoMode;\n            this.privSuccessCallback = successCallback;\n            this.privErrorCallback = errorCallBack;\n            this.privRequestSession.startNewRecognition();\n            this.privRequestSession.listenForServiceTelemetry(this.privAudioSource.events);\n            // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n            const conPromise = this.connectImpl();\n            const audioStreamNode = yield this.audioSource.attach(this.privRequestSession.audioNodeId);\n            const format = yield this.audioSource.format;\n            const deviceInfo = yield this.audioSource.deviceInfo;\n            const audioNode = new ReplayableAudioNode(audioStreamNode, format.avgBytesPerSec);\n            yield this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\n            this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\n            try {\n                yield conPromise;\n            }\n            catch (error) {\n                yield this.cancelRecognitionLocal(CancellationReason.Error, CancellationErrorCode.ConnectionFailure, error);\n                return;\n            }\n            const sessionStartEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\n            if (!!this.privRecognizer.sessionStarted) {\n                this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\n            }\n            const messageRetrievalPromise = this.receiveMessage();\n            const audioSendPromise = this.sendAudio(audioNode);\n            audioSendPromise.catch((error) => __awaiter(this, void 0, void 0, function* () {\n                yield this.cancelRecognitionLocal(CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\n            }));\n            return;\n        });\n    }\n    stopRecognizing() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.privRequestSession.isRecognizing) {\n                yield this.audioSource.turnOff();\n                yield this.sendFinalAudio();\n                yield this.privRequestSession.onStopRecognizing();\n                yield this.privRequestSession.turnCompletionPromise;\n                yield this.privRequestSession.dispose();\n            }\n            return;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connectImpl();\n            return Promise.resolve();\n        });\n    }\n    connectAsync(cb, err) {\n        this.connectImpl().then((connection) => {\n            try {\n                if (!!cb) {\n                    cb();\n                }\n            }\n            catch (e) {\n                if (!!err) {\n                    err(e);\n                }\n            }\n        }, (reason) => {\n            try {\n                if (!!err) {\n                    err(reason);\n                }\n                /* tslint:disable:no-empty */\n            }\n            catch (error) {\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.cancelRecognitionLocal(CancellationReason.Error, CancellationErrorCode.NoError, \"Disconnecting\");\n            if (this.disconnectOverride !== undefined) {\n                yield this.disconnectOverride();\n            }\n            try {\n                yield (yield this.privConnectionPromise).dispose();\n            }\n            catch (error) {\n            }\n            this.privConnectionPromise = null;\n        });\n    }\n    sendMessage(message) { }\n    sendNetworkMessage(path, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const type = typeof payload === \"string\" ? MessageType.Text : MessageType.Binary;\n            const contentType = typeof payload === \"string\" ? \"application/json\" : \"\";\n            const connection = yield this.fetchConnection();\n            return connection.send(new SpeechConnectionMessage(type, path, this.privRequestSession.requestId, contentType, payload));\n        });\n    }\n    set activityTemplate(messagePayload) { this.privActivityTemplate = messagePayload; }\n    get activityTemplate() { return this.privActivityTemplate; }\n    sendTelemetryData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const telemetryData = this.privRequestSession.getTelemetry();\n            if (ServiceRecognizerBase.telemetryDataEnabled !== true ||\n                this.privIsDisposed ||\n                null === telemetryData) {\n                return;\n            }\n            if (!!ServiceRecognizerBase.telemetryData) {\n                try {\n                    ServiceRecognizerBase.telemetryData(telemetryData);\n                    /* tslint:disable:no-empty */\n                }\n                catch (_a) { }\n            }\n            const connection = yield this.fetchConnection();\n            yield connection.send(new SpeechConnectionMessage(MessageType.Text, \"telemetry\", this.privRequestSession.requestId, \"application/json\", telemetryData));\n        });\n    }\n    // Cancels recognition.\n    cancelRecognitionLocal(cancellationReason, errorCode, error) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!!this.privRequestSession.isRecognizing) {\n                yield this.privRequestSession.onStopRecognizing();\n                this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, cancellationReason, errorCode, error);\n            }\n        });\n    }\n    receiveMessage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.privIsDisposed) {\n                    // We're done.\n                    return;\n                }\n                let connection = yield this.fetchConnection();\n                const message = yield connection.read();\n                if (this.receiveMessageOverride !== undefined) {\n                    return this.receiveMessageOverride();\n                }\n                // indicates we are draining the queue and it came with no message;\n                if (!message) {\n                    if (!this.privRequestSession.isRecognizing) {\n                        return;\n                    }\n                    else {\n                        return this.receiveMessage();\n                    }\n                }\n                this.privServiceHasSentMessage = true;\n                const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\n                if (connectionMessage.requestId.toLowerCase() === this.privRequestSession.requestId.toLowerCase()) {\n                    switch (connectionMessage.path.toLowerCase()) {\n                        case \"turn.start\":\n                            this.privMustReportEndOfStream = true;\n                            this.privRequestSession.onServiceTurnStartResponse();\n                            break;\n                        case \"speech.startdetected\":\n                            const speechStartDetected = SpeechDetected.fromJSON(connectionMessage.textBody);\n                            const speechStartEventArgs = new RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\n                            if (!!this.privRecognizer.speechStartDetected) {\n                                this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\n                            }\n                            break;\n                        case \"speech.enddetected\":\n                            let json;\n                            if (connectionMessage.textBody.length > 0) {\n                                json = connectionMessage.textBody;\n                            }\n                            else {\n                                // If the request was empty, the JSON returned is empty.\n                                json = \"{ Offset: 0 }\";\n                            }\n                            const speechStopDetected = SpeechDetected.fromJSON(json);\n                            // Only shrink the buffers for continuous recognition.\n                            // For single shot, the speech.phrase message will come after the speech.end and it should own buffer shrink.\n                            if (this.privRecognizerConfig.isContinuousRecognition) {\n                                this.privRequestSession.onServiceRecognized(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset);\n                            }\n                            const speechStopEventArgs = new RecognitionEventArgs(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\n                            if (!!this.privRecognizer.speechEndDetected) {\n                                this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\n                            }\n                            break;\n                        case \"turn.end\":\n                            yield this.sendTelemetryData();\n                            if (this.privRequestSession.isSpeechEnded && this.privMustReportEndOfStream) {\n                                this.privMustReportEndOfStream = false;\n                                yield this.cancelRecognitionLocal(CancellationReason.EndOfStream, CancellationErrorCode.NoError, undefined);\n                            }\n                            const sessionStopEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\n                            yield this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition);\n                            if (!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing) {\n                                if (!!this.privRecognizer.sessionStopped) {\n                                    this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\n                                }\n                                return;\n                            }\n                            else {\n                                connection = yield this.fetchConnection();\n                                yield this.sendPrePayloadJSON(connection);\n                            }\n                            break;\n                        default:\n                            if (!(yield this.processTypeSpecificMessages(connectionMessage))) {\n                                // here are some messages that the derived class has not processed, dispatch them to connect class\n                                if (!!this.privServiceEvents) {\n                                    this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\n                                }\n                            }\n                    }\n                }\n                return this.receiveMessage();\n            }\n            catch (error) {\n                return null;\n            }\n        });\n    }\n    // Encapsulated for derived service recognizers that need to send additional JSON\n    sendPrePayloadJSON(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.sendPrePayloadJSONOverride !== undefined) {\n                return this.sendPrePayloadJSONOverride(connection);\n            }\n            yield this.sendSpeechContext(connection);\n            yield this.sendWaveHeader(connection);\n            return;\n        });\n    }\n    sendWaveHeader(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const format = yield this.audioSource.format;\n            // this.writeBufferToConsole(format.header);\n            return connection.send(new SpeechConnectionMessage(MessageType.Binary, \"audio\", this.privRequestSession.requestId, \"audio/x-wav\", format.header));\n        });\n    }\n    // Establishes a websocket connection to the end point.\n    connectImpl(isUnAuthorized = false) {\n        if (this.privConnectionPromise) {\n            return this.privConnectionPromise.then((connection) => {\n                if (connection.state() === ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionPromise = null;\n                    this.privServiceHasSentMessage = false;\n                    return this.connectImpl();\n                }\n                return this.privConnectionPromise;\n            }, (error) => {\n                this.privConnectionId = null;\n                this.privConnectionPromise = null;\n                this.privServiceHasSentMessage = false;\n                return this.connectImpl();\n            });\n        }\n        this.privAuthFetchEventId = createNoDashGuid();\n        const sessionId = this.privRecognizerConfig.parameters.getProperty(PropertyId.Speech_SessionId, undefined);\n        this.privConnectionId = (sessionId !== undefined) ? sessionId : createNoDashGuid();\n        this.privRequestSession.onPreConnectionStart(this.privAuthFetchEventId, this.privConnectionId);\n        const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\n        this.privConnectionPromise = authPromise.then((result) => __awaiter(this, void 0, void 0, function* () {\n            yield this.privRequestSession.onAuthCompleted(false);\n            const connection = this.privConnectionFactory.create(this.privRecognizerConfig, result, this.privConnectionId);\n            this.privRequestSession.listenForServiceTelemetry(connection.events);\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\n            // it'll stop sending events.\n            connection.events.attach((event) => {\n                this.connectionEvents.onEvent(event);\n            });\n            const response = yield connection.open();\n            if (response.statusCode === 200) {\n                yield this.privRequestSession.onConnectionEstablishCompleted(response.statusCode);\n                return Promise.resolve(connection);\n            }\n            else if (response.statusCode === 403 && !isUnAuthorized) {\n                return this.connectImpl(true);\n            }\n            else {\n                yield this.privRequestSession.onConnectionEstablishCompleted(response.statusCode, response.reason);\n                return Promise.reject(`Unable to contact server. StatusCode: ${response.statusCode}, ${this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint)} Reason: ${response.reason}`);\n            }\n        }), (error) => __awaiter(this, void 0, void 0, function* () {\n            yield this.privRequestSession.onAuthCompleted(true, error);\n            throw new Error(error);\n        }));\n        // Attach an empty handler to allow the promise to run in the background while\n        // other startup events happen. It'll eventually be awaited on.\n        this.privConnectionPromise.catch(() => { });\n        if (this.postConnectImplOverride !== undefined) {\n            return this.postConnectImplOverride(this.privConnectionPromise);\n        }\n        return this.privConnectionPromise;\n    }\n    fetchConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.privConnectionConfigurationPromise) {\n                return this.privConnectionConfigurationPromise.then((connection) => {\n                    if (connection.state() === ConnectionState.Disconnected) {\n                        this.privConnectionId = null;\n                        this.privConnectionConfigurationPromise = null;\n                        this.privServiceHasSentMessage = false;\n                        return this.fetchConnection();\n                    }\n                    return this.privConnectionConfigurationPromise;\n                }, (error) => {\n                    this.privConnectionId = null;\n                    this.privConnectionConfigurationPromise = null;\n                    this.privServiceHasSentMessage = false;\n                    return this.fetchConnection();\n                });\n            }\n            this.privConnectionConfigurationPromise = this.configureConnection();\n            return yield this.privConnectionConfigurationPromise;\n        });\n    }\n    sendAudio(audioStreamNode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const audioFormat = yield this.audioSource.format;\n            // The time we last sent data to the service.\n            let nextSendTime = Date.now();\n            // Max amount to send before we start to throttle\n            const fastLaneSizeMs = this.privRecognizerConfig.parameters.getProperty(\"SPEECH-TransmitLengthBeforThrottleMs\", \"5000\");\n            const maxSendUnthrottledBytes = audioFormat.avgBytesPerSec / 1000 * parseInt(fastLaneSizeMs, 10);\n            const startRecogNumber = this.privRequestSession.recogNumber;\n            const readAndUploadCycle = () => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                // If speech is done, stop sending audio.\n                if (!this.privIsDisposed &&\n                    !this.privRequestSession.isSpeechEnded &&\n                    this.privRequestSession.isRecognizing &&\n                    this.privRequestSession.recogNumber === startRecogNumber) {\n                    const connection = yield this.fetchConnection();\n                    const audioStreamChunk = yield audioStreamNode.read();\n                    // we have a new audio chunk to upload.\n                    if (this.privRequestSession.isSpeechEnded) {\n                        // If service already recognized audio end then don't send any more audio\n                        return;\n                    }\n                    let payload;\n                    let sendDelay;\n                    if (!audioStreamChunk || audioStreamChunk.isEnd) {\n                        payload = null;\n                        sendDelay = 0;\n                    }\n                    else {\n                        payload = audioStreamChunk.buffer;\n                        this.privRequestSession.onAudioSent(payload.byteLength);\n                        if (maxSendUnthrottledBytes >= this.privRequestSession.bytesSent) {\n                            sendDelay = 0;\n                        }\n                        else {\n                            sendDelay = Math.max(0, nextSendTime - Date.now());\n                        }\n                    }\n                    if (0 !== sendDelay) {\n                        yield this.delay(sendDelay);\n                    }\n                    if (payload !== null) {\n                        nextSendTime = Date.now() + (payload.byteLength * 1000 / (audioFormat.avgBytesPerSec * 2));\n                    }\n                    // Are we still alive?\n                    if (!this.privIsDisposed &&\n                        !this.privRequestSession.isSpeechEnded &&\n                        this.privRequestSession.isRecognizing &&\n                        this.privRequestSession.recogNumber === startRecogNumber) {\n                        connection.send(new SpeechConnectionMessage(MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, payload)).catch(() => {\n                            this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition).catch(() => { });\n                        });\n                        if (!((_a = audioStreamChunk) === null || _a === void 0 ? void 0 : _a.isEnd)) {\n                            // this.writeBufferToConsole(payload);\n                            // Regardless of success or failure, schedule the next upload.\n                            // If the underlying connection was broken, the next cycle will\n                            // get a new connection and re-transmit missing audio automatically.\n                            return readAndUploadCycle();\n                        }\n                        else {\n                            // the audio stream has been closed, no need to schedule next\n                            // read-upload cycle.\n                            this.privRequestSession.onSpeechEnded();\n                        }\n                    }\n                }\n            });\n            return readAndUploadCycle();\n        });\n    }\n    delay(delayMs) {\n        return new Promise((resolve, reject) => {\n            this.privSetTimeout(resolve, delayMs);\n        });\n    }\n    writeBufferToConsole(buffer) {\n        let out = \"Buffer Size: \";\n        if (null === buffer) {\n            out += \"null\";\n        }\n        else {\n            const readView = new Uint8Array(buffer);\n            out += buffer.byteLength + \"\\r\\n\";\n            for (let i = 0; i < buffer.byteLength; i++) {\n                out += readView[i].toString(16).padStart(2, \"0\") + \" \";\n            }\n        }\n        // tslint:disable-next-line:no-console\n        console.info(out);\n    }\n    sendFinalAudio() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.fetchConnection();\n            yield connection.send(new SpeechConnectionMessage(MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, null));\n            return;\n        });\n    }\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\n    configureConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.connectImpl();\n            if (this.configConnectionOverride !== undefined) {\n                return this.configConnectionOverride(connection);\n            }\n            yield this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\n            yield this.sendPrePayloadJSON(connection);\n            return connection;\n        });\n    }\n}\nServiceRecognizerBase.telemetryDataEnabled = true;\n\n//# sourceMappingURL=ServiceRecognizerBase.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class AuthInfo {\n    constructor(headerName, token) {\n        this.privHeaderName = headerName;\n        this.privToken = token;\n    }\n    get headerName() {\n        return this.privHeaderName;\n    }\n    get token() {\n        return this.privToken;\n    }\n}\n\n//# sourceMappingURL=IAuthentication.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RecognitionEventArgs } from \"./Exports\";\n/**\n * Defines contents of speech recognizing/recognized event.\n * @class SpeechRecognitionEventArgs\n */\nexport class SpeechRecognitionEventArgs extends RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the recognition result.\n     * @member SpeechRecognitionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {SpeechRecognitionResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\n/**\n * Defines contents of conversation transcribed/transcribing event.\n * @class ConversationTranscriptionEventArgs\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class ConversationTranscriptionEventArgs extends SpeechRecognitionEventArgs {\n}\n\n//# sourceMappingURL=SpeechRecognitionEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { SpeechRecognitionResult } from \"./Exports\";\n/**\n * Translation text result.\n * @class TranslationRecognitionResult\n */\nexport class TranslationRecognitionResult extends SpeechRecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {Translations} translations - The translations.\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(translations, resultId, reason, text, duration, offset, errorDetails, json, properties) {\n        super(resultId, reason, text, duration, offset, undefined, undefined, undefined, errorDetails, json, properties);\n        this.privTranslations = translations;\n    }\n    /**\n     * Presents the translation results. Each item in the dictionary represents\n     * a translation result in one of target languages, where the key is the name\n     * of the target language, in BCP-47 format, and the value is the translation\n     * text in the specified language.\n     * @member TranslationRecognitionResult.prototype.translations\n     * @function\n     * @public\n     * @returns {Translations} the current translation map that holds all translations requested.\n     */\n    get translations() {\n        return this.privTranslations;\n    }\n}\n\n//# sourceMappingURL=TranslationRecognitionResult.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RecognitionEventArgs } from \"./Exports\";\n/**\n * Intent recognition result event arguments.\n * @class\n */\nexport class IntentRecognitionEventArgs extends RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param result - The result of the intent recognition.\n     * @param offset - The offset.\n     * @param sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Represents the intent recognition result.\n     * @member IntentRecognitionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {IntentRecognitionResult} Represents the intent recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\n\n//# sourceMappingURL=IntentRecognitionEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { SpeechRecognitionResult } from \"./Exports\";\n/**\n * Intent recognition result.\n * @class\n */\nexport class IntentRecognitionResult extends SpeechRecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param intentId - The intent id.\n     * @param resultId - The result id.\n     * @param reason - The reason.\n     * @param text - The recognized text.\n     * @param duration - The duration.\n     * @param offset - The offset into the stream.\n     * @param language - Primary Language detected, if provided.\n     * @param languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param errorDetails - Error details, if provided.\n     * @param json - Additional Json, if provided.\n     * @param properties - Additional properties, if provided.\n     */\n    constructor(intentId, resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties) {\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, undefined, errorDetails, json, properties);\n        this.privIntentId = intentId;\n    }\n    /**\n     * A String that represents the intent identifier being recognized.\n     * @member IntentRecognitionResult.prototype.intentId\n     * @function\n     * @public\n     * @returns {string} A String that represents the intent identifier being recognized.\n     */\n    get intentId() {\n        return this.privIntentId;\n    }\n}\n\n//# sourceMappingURL=IntentRecognitionResult.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ConnectionMessage, Deferred, MessageType, RawWebsocketMessage, } from \"../common/Exports\";\nconst CRLF = \"\\r\\n\";\nexport class WebsocketMessageFormatter {\n    constructor() {\n        this.toConnectionMessage = (message) => {\n            const deferral = new Deferred();\n            try {\n                if (message.messageType === MessageType.Text) {\n                    const textMessage = message.textContent;\n                    let headers = {};\n                    let body = null;\n                    if (textMessage) {\n                        const headerBodySplit = textMessage.split(\"\\r\\n\\r\\n\");\n                        if (headerBodySplit && headerBodySplit.length > 0) {\n                            headers = this.parseHeaders(headerBodySplit[0]);\n                            if (headerBodySplit.length > 1) {\n                                body = headerBodySplit[1];\n                            }\n                        }\n                    }\n                    deferral.resolve(new ConnectionMessage(message.messageType, body, headers, message.id));\n                }\n                else if (message.messageType === MessageType.Binary) {\n                    const binaryMessage = message.binaryContent;\n                    let headers = {};\n                    let body = null;\n                    if (!binaryMessage || binaryMessage.byteLength < 2) {\n                        throw new Error(\"Invalid binary message format. Header length missing.\");\n                    }\n                    const dataView = new DataView(binaryMessage);\n                    const headerLength = dataView.getInt16(0);\n                    if (binaryMessage.byteLength < headerLength + 2) {\n                        throw new Error(\"Invalid binary message format. Header content missing.\");\n                    }\n                    let headersString = \"\";\n                    for (let i = 0; i < headerLength; i++) {\n                        headersString += String.fromCharCode((dataView).getInt8(i + 2));\n                    }\n                    headers = this.parseHeaders(headersString);\n                    if (binaryMessage.byteLength > headerLength + 2) {\n                        body = binaryMessage.slice(2 + headerLength);\n                    }\n                    deferral.resolve(new ConnectionMessage(message.messageType, body, headers, message.id));\n                }\n            }\n            catch (e) {\n                deferral.reject(`Error formatting the message. Error: ${e}`);\n            }\n            return deferral.promise;\n        };\n        this.fromConnectionMessage = (message) => {\n            const deferral = new Deferred();\n            try {\n                if (message.messageType === MessageType.Text) {\n                    const payload = `${this.makeHeaders(message)}${CRLF}${message.textBody ? message.textBody : \"\"}`;\n                    deferral.resolve(new RawWebsocketMessage(MessageType.Text, payload, message.id));\n                }\n                else if (message.messageType === MessageType.Binary) {\n                    const headersString = this.makeHeaders(message);\n                    const content = message.binaryBody;\n                    const headerBuffer = this.stringToArrayBuffer(headersString);\n                    const headerInt8Array = new Int8Array(headerBuffer);\n                    const headerLength = headerInt8Array.byteLength;\n                    const payloadInt8Array = new Int8Array(2 + headerLength + (content ? content.byteLength : 0));\n                    payloadInt8Array[0] = ((headerLength >> 8) & 0xff);\n                    payloadInt8Array[1] = headerLength & 0xff;\n                    payloadInt8Array.set(headerInt8Array, 2);\n                    if (content) {\n                        const bodyInt8Array = new Int8Array(content);\n                        payloadInt8Array.set(bodyInt8Array, 2 + headerLength);\n                    }\n                    const payload = payloadInt8Array.buffer;\n                    deferral.resolve(new RawWebsocketMessage(MessageType.Binary, payload, message.id));\n                }\n            }\n            catch (e) {\n                deferral.reject(`Error formatting the message. ${e}`);\n            }\n            return deferral.promise;\n        };\n        this.makeHeaders = (message) => {\n            let headersString = \"\";\n            if (message.headers) {\n                for (const header in message.headers) {\n                    if (header) {\n                        headersString += `${header}: ${message.headers[header]}${CRLF}`;\n                    }\n                }\n            }\n            return headersString;\n        };\n        this.parseHeaders = (headersString) => {\n            const headers = {};\n            if (headersString) {\n                const headerMatches = headersString.match(/[^\\r\\n]+/g);\n                if (headers) {\n                    for (const header of headerMatches) {\n                        if (header) {\n                            const separatorIndex = header.indexOf(\":\");\n                            const headerName = separatorIndex > 0 ? header.substr(0, separatorIndex).trim().toLowerCase() : header;\n                            const headerValue = separatorIndex > 0 && header.length > (separatorIndex + 1) ?\n                                header.substr(separatorIndex + 1).trim() :\n                                \"\";\n                            headers[headerName] = headerValue;\n                        }\n                    }\n                }\n            }\n            return headers;\n        };\n        this.stringToArrayBuffer = (str) => {\n            const buffer = new ArrayBuffer(str.length);\n            const view = new DataView(buffer);\n            for (let i = 0; i < str.length; i++) {\n                view.setUint8(i, str.charCodeAt(i));\n            }\n            return buffer;\n        };\n    }\n}\n\n//# sourceMappingURL=WebsocketMessageFormatter.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { connectivity, type, } from \"../../common.speech/Exports\";\nimport { AudioSourceInitializingEvent, AudioSourceReadyEvent, AudioStreamNodeAttachedEvent, AudioStreamNodeAttachingEvent, AudioStreamNodeDetachedEvent, ChunkedArrayBufferStream, Events, EventSource, } from \"../../common/Exports\";\nimport { createNoDashGuid } from \"../../common/Guid\";\nimport { AudioStreamFormat } from \"../Exports\";\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat\";\n/**\n * Represents audio input stream used for custom audio input configurations.\n * @class AudioInputStream\n */\nexport class AudioInputStream {\n    /**\n     * Creates and initializes an instance.\n     * @constructor\n     */\n    constructor() { }\n    /**\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\n     * @member AudioInputStream.createPushStream\n     * @function\n     * @public\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\n     *        written to the push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\n     * @returns {PushAudioInputStream} The audio input stream being created.\n     */\n    static createPushStream(format) {\n        return PushAudioInputStream.create(format);\n    }\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for read()\n     * and close() methods.\n     * @member AudioInputStream.createPullStream\n     * @function\n     * @public\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object, derived from\n     *        PullAudioInputStreamCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be returned from\n     *        the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\n     * @returns {PullAudioInputStream} The audio input stream being created.\n     */\n    static createPullStream(callback, format) {\n        return PullAudioInputStream.create(callback, format);\n        // throw new Error(\"Oops\");\n    }\n}\n/**\n * Represents memory backed push audio input stream used for custom audio input configurations.\n * @class PushAudioInputStream\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class PushAudioInputStream extends AudioInputStream {\n    /**\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\n     * @member PushAudioInputStream.create\n     * @function\n     * @public\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be written to the\n     *        push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\n     * @returns {PushAudioInputStream} The push audio input stream being created.\n     */\n    static create(format) {\n        return new PushAudioInputStreamImpl(format);\n    }\n}\n/**\n * Represents memory backed push audio input stream used for custom audio input configurations.\n * @private\n * @class PushAudioInputStreamImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class PushAudioInputStreamImpl extends PushAudioInputStream {\n    /**\n     * Creates and initalizes an instance with the given values.\n     * @constructor\n     * @param {AudioStreamFormat} format - The audio stream format.\n     */\n    constructor(format) {\n        super();\n        this.onEvent = (event) => {\n            this.privEvents.onEvent(event);\n            Events.instance.onEvent(event);\n        };\n        if (format === undefined) {\n            this.privFormat = AudioStreamFormatImpl.getDefaultInputFormat();\n        }\n        else {\n            this.privFormat = format;\n        }\n        this.privEvents = new EventSource();\n        this.privId = createNoDashGuid();\n        this.privStream = new ChunkedArrayBufferStream(this.privFormat.avgBytesPerSec / 10);\n    }\n    /**\n     * Format information for the audio\n     */\n    get format() {\n        return Promise.resolve(this.privFormat);\n    }\n    /**\n     * Writes the audio data specified by making an internal copy of the data.\n     * @member PushAudioInputStreamImpl.prototype.write\n     * @function\n     * @public\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\n     */\n    write(dataBuffer) {\n        this.privStream.writeStreamChunk({\n            buffer: dataBuffer,\n            isEnd: false,\n            timeReceived: Date.now()\n        });\n    }\n    /**\n     * Closes the stream.\n     * @member PushAudioInputStreamImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        this.privStream.close();\n    }\n    id() {\n        return this.privId;\n    }\n    get blob() {\n        return this.attach(\"id\").then((audioNode) => {\n            const data = [];\n            let bufferData = Buffer.from(\"\");\n            const readCycle = () => {\n                return audioNode.read().then((audioStreamChunk) => {\n                    if (!audioStreamChunk || audioStreamChunk.isEnd) {\n                        if (typeof (XMLHttpRequest) !== \"undefined\" && typeof (Blob) !== \"undefined\") {\n                            return Promise.resolve(new Blob(data));\n                        }\n                        else {\n                            return Promise.resolve(Buffer.from(bufferData));\n                        }\n                    }\n                    else {\n                        if (typeof (Blob) !== \"undefined\") {\n                            data.push(audioStreamChunk.buffer);\n                        }\n                        else {\n                            bufferData = Buffer.concat([bufferData, this.toBuffer(audioStreamChunk.buffer)]);\n                        }\n                        return readCycle();\n                    }\n                });\n            };\n            return readCycle();\n        });\n    }\n    turnOn() {\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\n        return;\n    }\n    attach(audioNodeId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n            yield this.turnOn();\n            const stream = this.privStream;\n            this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\n            return {\n                detach: () => __awaiter(this, void 0, void 0, function* () {\n                    stream.readEnded();\n                    this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n                    return this.turnOff();\n                }),\n                id: () => {\n                    return audioNodeId;\n                },\n                read: () => {\n                    return stream.read();\n                },\n            };\n        });\n    }\n    detach(audioNodeId) {\n        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n    }\n    turnOff() {\n        return;\n    }\n    get events() {\n        return this.privEvents;\n    }\n    get deviceInfo() {\n        return Promise.resolve({\n            bitspersample: this.privFormat.bitsPerSample,\n            channelcount: this.privFormat.channels,\n            connectivity: connectivity.Unknown,\n            manufacturer: \"Speech SDK\",\n            model: \"PushStream\",\n            samplerate: this.privFormat.samplesPerSec,\n            type: type.Stream,\n        });\n    }\n    toBuffer(arrayBuffer) {\n        const buf = Buffer.alloc(arrayBuffer.byteLength);\n        const view = new Uint8Array(arrayBuffer);\n        for (let i = 0; i < buf.length; ++i) {\n            buf[i] = view[i];\n        }\n        return buf;\n    }\n}\n/*\n * Represents audio input stream used for custom audio input configurations.\n * @class PullAudioInputStream\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class PullAudioInputStream extends AudioInputStream {\n    /**\n     * Creates and initializes and instance.\n     * @constructor\n     */\n    constructor() { super(); }\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\n     * @member PullAudioInputStream.create\n     * @function\n     * @public\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\n     *        derived from PullAudioInputStreamCustomCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\n     *        returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\n     * @returns {PullAudioInputStream} The push audio input stream being created.\n     */\n    static create(callback, format) {\n        return new PullAudioInputStreamImpl(callback, format);\n    }\n}\n/**\n * Represents audio input stream used for custom audio input configurations.\n * @private\n * @class PullAudioInputStreamImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class PullAudioInputStreamImpl extends PullAudioInputStream {\n    /**\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\n     * @constructor\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\n     *        derived from PullAudioInputStreamCustomCallback\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\n     *        returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\n     */\n    constructor(callback, format) {\n        super();\n        this.onEvent = (event) => {\n            this.privEvents.onEvent(event);\n            Events.instance.onEvent(event);\n        };\n        if (undefined === format) {\n            this.privFormat = AudioStreamFormat.getDefaultInputFormat();\n        }\n        else {\n            this.privFormat = format;\n        }\n        this.privEvents = new EventSource();\n        this.privId = createNoDashGuid();\n        this.privCallback = callback;\n        this.privIsClosed = false;\n        this.privBufferSize = this.privFormat.avgBytesPerSec / 10;\n    }\n    /**\n     * Format information for the audio\n     */\n    get format() {\n        return Promise.resolve(this.privFormat);\n    }\n    /**\n     * Closes the stream.\n     * @member PullAudioInputStreamImpl.prototype.close\n     * @function\n     * @public\n     */\n    close() {\n        this.privIsClosed = true;\n        this.privCallback.close();\n    }\n    id() {\n        return this.privId;\n    }\n    get blob() {\n        return Promise.reject(\"Not implemented\");\n    }\n    turnOn() {\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\n        return;\n    }\n    attach(audioNodeId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n            yield this.turnOn();\n            this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\n            return {\n                detach: () => {\n                    this.privCallback.close();\n                    this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n                    return this.turnOff();\n                },\n                id: () => {\n                    return audioNodeId;\n                },\n                read: () => {\n                    let totalBytes = 0;\n                    let transmitBuff;\n                    // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\n                    while (totalBytes < this.privBufferSize) {\n                        // Sizing the read buffer to the delta between the perfect size and what's left means we won't ever get too much\n                        // data back.\n                        const readBuff = new ArrayBuffer(this.privBufferSize - totalBytes);\n                        const pulledBytes = this.privCallback.read(readBuff);\n                        // If there is no return buffer yet defined, set the return buffer to the that was just populated.\n                        // This was, if we have enough data there's no copy penalty, but if we don't we have a buffer that's the\n                        // preferred size allocated.\n                        if (undefined === transmitBuff) {\n                            transmitBuff = readBuff;\n                        }\n                        else {\n                            // Not the first bite at the apple, so fill the return buffer with the data we got back.\n                            const intView = new Int8Array(transmitBuff);\n                            intView.set(new Int8Array(readBuff), totalBytes);\n                        }\n                        // If there are no bytes to read, just break out and be done.\n                        if (0 === pulledBytes) {\n                            break;\n                        }\n                        totalBytes += pulledBytes;\n                    }\n                    return Promise.resolve({\n                        buffer: transmitBuff.slice(0, totalBytes),\n                        isEnd: this.privIsClosed || totalBytes === 0,\n                        timeReceived: Date.now(),\n                    });\n                },\n            };\n        });\n    }\n    detach(audioNodeId) {\n        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n    }\n    turnOff() {\n        return;\n    }\n    get events() {\n        return this.privEvents;\n    }\n    get deviceInfo() {\n        return Promise.resolve({\n            bitspersample: this.privFormat.bitsPerSample,\n            channelcount: this.privFormat.channels,\n            connectivity: connectivity.Unknown,\n            manufacturer: \"Speech SDK\",\n            model: \"PullStream\",\n            samplerate: this.privFormat.samplesPerSec,\n            type: type.Stream,\n        });\n    }\n}\n\n//# sourceMappingURL=AudioInputStream.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ArgumentNullError, ConnectionState, createNoDashGuid, EventSource, MessageType, ServiceEvent, } from \"../common/Exports\";\nimport { CancellationErrorCode, CancellationReason, PropertyCollection, PropertyId, ResultReason, SpeechSynthesisEventArgs, SpeechSynthesisResult, SpeechSynthesisWordBoundaryEventArgs, } from \"../sdk/Exports\";\nimport { AgentConfig, CancellationErrorCodePropertyName, SynthesisAudioMetadata, SynthesisContext, SynthesisTurn } from \"./Exports\";\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\nexport class SynthesisAdapterBase {\n    constructor(authentication, connectionFactory, synthesizerConfig, speechSynthesizer, audioDestination) {\n        this.speakOverride = undefined;\n        this.receiveMessageOverride = undefined;\n        this.connectImplOverride = undefined;\n        this.configConnectionOverride = undefined;\n        this.fetchConnectionOverride = undefined;\n        this.sendSynthesisContext = (connection) => {\n            const synthesisContextJson = this.synthesisContext.toJSON();\n            if (synthesisContextJson) {\n                return connection.send(new SpeechConnectionMessage(MessageType.Text, \"synthesis.context\", this.privSynthesisTurn.requestId, \"application/json\", synthesisContextJson));\n            }\n            return;\n        };\n        this.sendSpeechServiceConfig = (connection, SpeechServiceConfigJson) => {\n            if (SpeechServiceConfigJson) {\n                return connection.send(new SpeechConnectionMessage(MessageType.Text, \"speech.config\", this.privSynthesisTurn.requestId, \"application/json\", SpeechServiceConfigJson));\n            }\n        };\n        this.sendSsmlMessage = (connection, ssml, requestId) => {\n            return connection.send(new SpeechConnectionMessage(MessageType.Text, \"ssml\", requestId, \"application/ssml+xml\", ssml));\n        };\n        this.fetchConnection = () => {\n            if (this.fetchConnectionOverride !== undefined) {\n                return this.fetchConnectionOverride();\n            }\n            return this.configureConnection();\n        };\n        if (!authentication) {\n            throw new ArgumentNullError(\"authentication\");\n        }\n        if (!connectionFactory) {\n            throw new ArgumentNullError(\"connectionFactory\");\n        }\n        if (!synthesizerConfig) {\n            throw new ArgumentNullError(\"synthesizerConfig\");\n        }\n        this.privAuthentication = authentication;\n        this.privConnectionFactory = connectionFactory;\n        this.privSynthesizerConfig = synthesizerConfig;\n        this.privIsDisposed = false;\n        this.privSpeechSynthesizer = speechSynthesizer;\n        this.privSessionAudioDestination = audioDestination;\n        this.privSynthesisTurn = new SynthesisTurn();\n        this.privConnectionEvents = new EventSource();\n        this.privServiceEvents = new EventSource();\n        this.privSynthesisContext = new SynthesisContext(this.privSpeechSynthesizer);\n        this.privAgentConfig = new AgentConfig();\n        this.connectionEvents.attach((connectionEvent) => {\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\n                const connectionClosedEvent = connectionEvent;\n                this.cancelSynthesisLocal(CancellationReason.Error, connectionClosedEvent.statusCode === 1007 ? CancellationErrorCode.BadRequestParameters : CancellationErrorCode.ConnectionFailure, connectionClosedEvent.reason + \" websocket error code: \" + connectionClosedEvent.statusCode);\n            }\n        });\n    }\n    get synthesisContext() {\n        return this.privSynthesisContext;\n    }\n    get agentConfig() {\n        return this.privAgentConfig;\n    }\n    get connectionEvents() {\n        return this.privConnectionEvents;\n    }\n    get serviceEvents() {\n        return this.privServiceEvents;\n    }\n    set activityTemplate(messagePayload) { this.privActivityTemplate = messagePayload; }\n    get activityTemplate() { return this.privActivityTemplate; }\n    set audioOutputFormat(format) {\n        this.privAudioOutputFormat = format;\n        this.privSynthesisTurn.audioOutputFormat = format;\n        if (this.privSessionAudioDestination !== undefined) {\n            this.privSessionAudioDestination.format = format;\n        }\n        if (this.synthesisContext !== undefined) {\n            this.synthesisContext.audioOutputFormat = format;\n        }\n    }\n    static addHeader(audio, format) {\n        if (!format.hasHeader) {\n            return audio;\n        }\n        format.updateHeader(audio.byteLength);\n        const tmp = new Uint8Array(audio.byteLength + format.header.byteLength);\n        tmp.set(new Uint8Array(format.header), 0);\n        tmp.set(new Uint8Array(audio), format.header.byteLength);\n        return tmp.buffer;\n    }\n    isDisposed() {\n        return this.privIsDisposed;\n    }\n    dispose(reason) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.privIsDisposed = true;\n            if (this.privSessionAudioDestination !== undefined) {\n                this.privSessionAudioDestination.close();\n            }\n            if (this.privConnectionConfigurationPromise) {\n                const connection = yield this.privConnectionConfigurationPromise;\n                yield connection.dispose(reason);\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connectImpl();\n        });\n    }\n    sendNetworkMessage(path, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const type = typeof payload === \"string\" ? MessageType.Text : MessageType.Binary;\n            const contentType = typeof payload === \"string\" ? \"application/json\" : \"\";\n            const connection = yield this.fetchConnection();\n            return connection.send(new SpeechConnectionMessage(type, path, this.privSynthesisTurn.requestId, contentType, payload));\n        });\n    }\n    Speak(text, isSSML, requestId, successCallback, errorCallBack, audioDestination) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ssml;\n            if (isSSML) {\n                ssml = text;\n            }\n            else {\n                ssml = this.privSpeechSynthesizer.buildSsml(text);\n            }\n            if (this.speakOverride !== undefined) {\n                return this.speakOverride(ssml, requestId, successCallback, errorCallBack);\n            }\n            this.privSuccessCallback = successCallback;\n            this.privErrorCallback = errorCallBack;\n            this.privSynthesisTurn.startNewSynthesis(requestId, text, isSSML, audioDestination);\n            try {\n                const connection = yield this.fetchConnection();\n                yield this.sendSynthesisContext(connection);\n                yield this.sendSsmlMessage(connection, ssml, requestId);\n                const synthesisStartEventArgs = new SpeechSynthesisEventArgs(new SpeechSynthesisResult(requestId, ResultReason.SynthesizingAudioStarted));\n                if (!!this.privSpeechSynthesizer.synthesisStarted) {\n                    this.privSpeechSynthesizer.synthesisStarted(this.privSpeechSynthesizer, synthesisStartEventArgs);\n                }\n                const messageRetrievalPromise = this.receiveMessage();\n            }\n            catch (e) {\n                this.cancelSynthesisLocal(CancellationReason.Error, CancellationErrorCode.ConnectionFailure, e);\n                return Promise.reject(e);\n            }\n        });\n    }\n    // Cancels synthesis.\n    cancelSynthesis(requestId, cancellationReason, errorCode, error) {\n        const properties = new PropertyCollection();\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\n        const result = new SpeechSynthesisResult(requestId, ResultReason.Canceled, undefined, error, properties);\n        if (!!this.privSpeechSynthesizer.SynthesisCanceled) {\n            const cancelEvent = new SpeechSynthesisEventArgs(result);\n            try {\n                this.privSpeechSynthesizer.SynthesisCanceled(this.privSpeechSynthesizer, cancelEvent);\n                /* tslint:disable:no-empty */\n            }\n            catch (_a) { }\n        }\n        if (!!this.privSuccessCallback) {\n            try {\n                this.privSuccessCallback(result);\n                /* tslint:disable:no-empty */\n            }\n            catch (_b) { }\n        }\n    }\n    // Cancels synthesis.\n    cancelSynthesisLocal(cancellationReason, errorCode, error) {\n        if (!!this.privSynthesisTurn.isSynthesizing) {\n            this.privSynthesisTurn.onStopSynthesizing();\n            this.cancelSynthesis(this.privSynthesisTurn.requestId, cancellationReason, errorCode, error);\n        }\n    }\n    processTypeSpecificMessages(connectionMessage, successCallback, errorCallBack) {\n        return true;\n    }\n    receiveMessage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const connection = yield this.fetchConnection();\n                const message = yield connection.read();\n                if (this.receiveMessageOverride !== undefined) {\n                    return this.receiveMessageOverride();\n                }\n                if (this.privIsDisposed) {\n                    // We're done.\n                    return;\n                }\n                // indicates we are draining the queue and it came with no message;\n                if (!message) {\n                    if (!this.privSynthesisTurn.isSynthesizing) {\n                        return;\n                    }\n                    else {\n                        return this.receiveMessage();\n                    }\n                }\n                this.privServiceHasSentMessage = true;\n                const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\n                if (connectionMessage.requestId.toLowerCase() === this.privSynthesisTurn.requestId.toLowerCase()) {\n                    switch (connectionMessage.path.toLowerCase()) {\n                        case \"turn.start\":\n                            this.privSynthesisTurn.onServiceTurnStartResponse();\n                            break;\n                        case \"response\":\n                            this.privSynthesisTurn.onServiceResponseMessage(connectionMessage.textBody);\n                            break;\n                        case \"audio\":\n                            if (this.privSynthesisTurn.streamId.toLowerCase() === connectionMessage.streamId.toLowerCase()\n                                && !!connectionMessage.binaryBody) {\n                                this.privSynthesisTurn.onAudioChunkReceived(connectionMessage.binaryBody);\n                                if (!!this.privSpeechSynthesizer.synthesizing) {\n                                    try {\n                                        const audioWithHeader = SynthesisAdapterBase.addHeader(connectionMessage.binaryBody, this.privSynthesisTurn.audioOutputFormat);\n                                        const ev = new SpeechSynthesisEventArgs(new SpeechSynthesisResult(this.privSynthesisTurn.requestId, ResultReason.SynthesizingAudio, audioWithHeader));\n                                        this.privSpeechSynthesizer.synthesizing(this.privSpeechSynthesizer, ev);\n                                    }\n                                    catch (error) {\n                                        // Not going to let errors in the event handler\n                                        // trip things up.\n                                    }\n                                }\n                                if (this.privSessionAudioDestination !== undefined) {\n                                    this.privSessionAudioDestination.write(connectionMessage.binaryBody);\n                                }\n                            }\n                            break;\n                        case \"audio.metadata\":\n                            const metadataList = SynthesisAudioMetadata.fromJSON(connectionMessage.textBody).Metadata;\n                            for (const metadata of metadataList) {\n                                if (metadata.Type.toLowerCase() === \"WordBoundary\".toLowerCase()) {\n                                    this.privSynthesisTurn.onWordBoundaryEvent(metadata.Data.text.Text);\n                                    const ev = new SpeechSynthesisWordBoundaryEventArgs(metadata.Data.Offset, metadata.Data.text.Text, metadata.Data.text.Length, this.privSynthesisTurn.currentTextOffset);\n                                    if (!!this.privSpeechSynthesizer.wordBoundary) {\n                                        try {\n                                            this.privSpeechSynthesizer.wordBoundary(this.privSpeechSynthesizer, ev);\n                                        }\n                                        catch (error) {\n                                            // Not going to let errors in the event handler\n                                            // trip things up.\n                                        }\n                                    }\n                                }\n                            }\n                            break;\n                        case \"turn.end\":\n                            this.privSynthesisTurn.onServiceTurnEndResponse();\n                            let result;\n                            try {\n                                const audioBuffer = yield this.privSynthesisTurn.getAllReceivedAudioWithHeader();\n                                result = new SpeechSynthesisResult(this.privSynthesisTurn.requestId, ResultReason.SynthesizingAudioCompleted, audioBuffer);\n                                if (!!this.privSuccessCallback) {\n                                    this.privSuccessCallback(result);\n                                }\n                            }\n                            catch (error) {\n                                if (!!this.privErrorCallback) {\n                                    this.privErrorCallback(error);\n                                }\n                            }\n                            if (this.privSpeechSynthesizer.synthesisCompleted) {\n                                try {\n                                    this.privSpeechSynthesizer.synthesisCompleted(this.privSpeechSynthesizer, new SpeechSynthesisEventArgs(result));\n                                }\n                                catch (e) {\n                                    // Not going to let errors in the event handler\n                                    // trip things up.\n                                }\n                            }\n                            break;\n                        default:\n                            if (!this.processTypeSpecificMessages(connectionMessage)) {\n                                // here are some messages that the derived class has not processed, dispatch them to connect class\n                                if (!!this.privServiceEvents) {\n                                    this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\n                                }\n                            }\n                    }\n                }\n                return this.receiveMessage();\n            }\n            catch (e) {\n                // TODO: What goes here?\n            }\n        });\n    }\n    connectImpl(isUnAuthorized = false) {\n        if (this.privConnectionPromise) {\n            return this.privConnectionPromise.then((connection) => {\n                if (connection.state() === ConnectionState.Disconnected) {\n                    this.privConnectionId = null;\n                    this.privConnectionPromise = null;\n                    this.privServiceHasSentMessage = false;\n                    return this.connectImpl();\n                }\n                return this.privConnectionPromise;\n            }, (error) => {\n                this.privConnectionId = null;\n                this.privConnectionPromise = null;\n                this.privServiceHasSentMessage = false;\n                return this.connectImpl();\n            });\n        }\n        this.privAuthFetchEventId = createNoDashGuid();\n        this.privConnectionId = createNoDashGuid();\n        this.privSynthesisTurn.onPreConnectionStart(this.privAuthFetchEventId, this.privConnectionId);\n        const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\n        this.privConnectionPromise = authPromise.then((result) => __awaiter(this, void 0, void 0, function* () {\n            yield this.privSynthesisTurn.onAuthCompleted(false);\n            const connection = this.privConnectionFactory.create(this.privSynthesizerConfig, result, this.privConnectionId);\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\n            // it'll stop sending events.\n            connection.events.attach((event) => {\n                this.connectionEvents.onEvent(event);\n            });\n            const response = yield connection.open();\n            if (response.statusCode === 200) {\n                yield this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode);\n                return Promise.resolve(connection);\n            }\n            else if (response.statusCode === 403 && !isUnAuthorized) {\n                return this.connectImpl(true);\n            }\n            else {\n                yield this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode, response.reason);\n                return Promise.reject(`Unable to contact server. StatusCode: ${response.statusCode}, ${this.privSynthesizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint)} Reason: ${response.reason}`);\n            }\n        }), (error) => __awaiter(this, void 0, void 0, function* () {\n            yield this.privSynthesisTurn.onAuthCompleted(true, error);\n            throw new Error(error);\n        }));\n        // Attach an empty handler to allow the promise to run in the background while\n        // other startup events happen. It'll eventually be awaited on.\n        this.privConnectionPromise.catch(() => { });\n        return this.privConnectionPromise;\n    }\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\n    configureConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.connectImpl();\n            if (this.configConnectionOverride !== undefined) {\n                return this.configConnectionOverride(connection);\n            }\n            yield this.sendSpeechServiceConfig(connection, this.privSynthesizerConfig.SpeechServiceConfig.serialize());\n            return connection;\n        });\n    }\n}\nSynthesisAdapterBase.telemetryDataEnabled = true;\n\n//# sourceMappingURL=SynthesisAdapterBase.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RecognitionEventArgs } from \"./Exports\";\n/**\n * Defines content of a CancellationEvent.\n * @class CancellationEventArgsBase\n */\nexport class CancellationEventArgsBase extends RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} reason - The cancellation reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(reason, errorDetails, errorCode, offset, sessionId) {\n        super(offset, sessionId);\n        this.privReason = reason;\n        this.privErrorDetails = errorDetails;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member CancellationEventArgsBase.prototype.reason\n     * @function\n     * @public\n     * @returns {CancellationReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * The error code in case of an unsuccessful operation.\n     * @return An error code that represents the error reason.\n     */\n    get errorCode() {\n        return this.privErrorCode;\n    }\n    /**\n     * In case of an unsuccessful operation, provides details of the occurred error.\n     * @member CancellationEventArgsBase.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} A String that represents the error details.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\n\n//# sourceMappingURL=CancellationEventArgsBase.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Defines contents of speech synthesis events.\n * @class SpeechSynthesisEventArgs\n * Added in version 1.11.0\n */\nexport class SpeechSynthesisEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {SpeechSynthesisResult} result - The speech synthesis result.\n     */\n    constructor(result) {\n        this.privResult = result;\n    }\n    /**\n     * Specifies the synthesis result.\n     * @member SpeechSynthesisEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {SpeechSynthesisResult} the synthesis result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\n\n//# sourceMappingURL=SpeechSynthesisEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Defines result of speech synthesis.\n * @class SpeechSynthesisResult\n * Added in version 1.11.0\n */\nexport class SpeechSynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {number} audioData - The offset into the stream.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(resultId, reason, audioData, errorDetails, properties) {\n        this.privResultId = resultId;\n        this.privReason = reason;\n        this.privAudioData = audioData;\n        this.privErrorDetails = errorDetails;\n        this.privProperties = properties;\n    }\n    /**\n     * Specifies the result identifier.\n     * @member SpeechSynthesisResult.prototype.resultId\n     * @function\n     * @public\n     * @returns {string} Specifies the result identifier.\n     */\n    get resultId() {\n        return this.privResultId;\n    }\n    /**\n     * Specifies status of the result.\n     * @member SpeechSynthesisResult.prototype.reason\n     * @function\n     * @public\n     * @returns {ResultReason} Specifies status of the result.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * The synthesized audio data\n     * @member SpeechSynthesisResult.prototype.audioData\n     * @function\n     * @public\n     * @returns {ArrayBuffer} The synthesized audio data.\n     */\n    get audioData() {\n        return this.privAudioData;\n    }\n    /**\n     * In case of an unsuccessful synthesis, provides details of the occurred error.\n     * @member SpeechSynthesisResult.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} a brief description of an error.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    /**\n     *  The set of properties exposed in the result.\n     * @member SpeechSynthesisResult.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The set of properties exposed in the result.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n}\n\n//# sourceMappingURL=SpeechSynthesisResult.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { SessionEventArgs } from \"./Exports\";\n/**\n * Defines payload for session events like Speech Start/End Detected\n * @class\n */\nexport class RecognitionEventArgs extends SessionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(offset, sessionId) {\n        super(sessionId);\n        this.privOffset = offset;\n    }\n    /**\n     * Represents the message offset\n     * @member RecognitionEventArgs.prototype.offset\n     * @function\n     * @public\n     */\n    get offset() {\n        return this.privOffset;\n    }\n}\n\n//# sourceMappingURL=RecognitionEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ObjectDisposedError } from \"./Error\";\nimport { createNoDashGuid } from \"./Guid\";\nexport class EventSource {\n    constructor(metadata) {\n        this.privEventListeners = {};\n        this.privIsDisposed = false;\n        this.onEvent = (event) => {\n            if (this.isDisposed()) {\n                throw (new ObjectDisposedError(\"EventSource\"));\n            }\n            if (this.metadata) {\n                for (const paramName in this.metadata) {\n                    if (paramName) {\n                        if (event.metadata) {\n                            if (!event.metadata[paramName]) {\n                                event.metadata[paramName] = this.metadata[paramName];\n                            }\n                        }\n                    }\n                }\n            }\n            for (const eventId in this.privEventListeners) {\n                if (eventId && this.privEventListeners[eventId]) {\n                    this.privEventListeners[eventId](event);\n                }\n            }\n        };\n        this.attach = (onEventCallback) => {\n            const id = createNoDashGuid();\n            this.privEventListeners[id] = onEventCallback;\n            return {\n                detach: () => {\n                    delete this.privEventListeners[id];\n                    return Promise.resolve();\n                },\n            };\n        };\n        this.attachListener = (listener) => {\n            return this.attach(listener.onEvent);\n        };\n        this.isDisposed = () => {\n            return this.privIsDisposed;\n        };\n        this.dispose = () => {\n            this.privEventListeners = null;\n            this.privIsDisposed = true;\n        };\n        this.privMetadata = metadata;\n    }\n    get metadata() {\n        return this.privMetadata;\n    }\n}\n\n//# sourceMappingURL=EventSource.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ArgumentNullError } from \"./Error\";\nimport { EventSource } from \"./EventSource\";\nexport class Events {\n    static get instance() {\n        return Events.privInstance;\n    }\n}\nEvents.privInstance = new EventSource();\nEvents.setEventSource = (eventSource) => {\n    if (!eventSource) {\n        throw new ArgumentNullError(\"eventSource\");\n    }\n    Events.privInstance = eventSource;\n};\n\n//# sourceMappingURL=Events.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class SpeechHypothesis {\n    constructor(json) {\n        this.privSpeechHypothesis = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new SpeechHypothesis(json);\n    }\n    get Text() {\n        return this.privSpeechHypothesis.Text;\n    }\n    get Offset() {\n        return this.privSpeechHypothesis.Offset;\n    }\n    get Duration() {\n        return this.privSpeechHypothesis.Duration;\n    }\n    get Language() {\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Language;\n    }\n    get LanguageDetectionConfidence() {\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Confidence;\n    }\n    get SpeakerId() {\n        return this.privSpeechHypothesis.SpeakerId;\n    }\n}\n\n//# sourceMappingURL=SpeechHypothesis.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RecognitionStatus } from \"../Exports\";\nexport class SimpleSpeechPhrase {\n    constructor(json) {\n        this.privSimpleSpeechPhrase = JSON.parse(json);\n        this.privSimpleSpeechPhrase.RecognitionStatus = RecognitionStatus[this.privSimpleSpeechPhrase.RecognitionStatus];\n    }\n    static fromJSON(json) {\n        return new SimpleSpeechPhrase(json);\n    }\n    get RecognitionStatus() {\n        return this.privSimpleSpeechPhrase.RecognitionStatus;\n    }\n    get DisplayText() {\n        return this.privSimpleSpeechPhrase.DisplayText;\n    }\n    get Offset() {\n        return this.privSimpleSpeechPhrase.Offset;\n    }\n    get Duration() {\n        return this.privSimpleSpeechPhrase.Duration;\n    }\n    get Language() {\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Language;\n    }\n    get LanguageDetectionConfidence() {\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Confidence;\n    }\n    get SpeakerId() {\n        return this.privSimpleSpeechPhrase.SpeakerId;\n    }\n}\n\n//# sourceMappingURL=SimpleSpeechPhrase.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Defines translation status.\n * @class TranslationStatus\n */\nexport var TranslationStatus;\n(function (TranslationStatus) {\n    /**\n     * @member TranslationStatus.Success\n     */\n    TranslationStatus[TranslationStatus[\"Success\"] = 0] = \"Success\";\n    /**\n     * @member TranslationStatus.Error\n     */\n    TranslationStatus[TranslationStatus[\"Error\"] = 1] = \"Error\";\n})(TranslationStatus || (TranslationStatus = {}));\n\n//# sourceMappingURL=TranslationStatus.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { PropertyId } from \"../sdk/Exports\";\nexport class ProxyInfo {\n    constructor(proxyHostName, proxyPort, proxyUserName, proxyPassword) {\n        this.privProxyHostName = proxyHostName;\n        this.privProxyPort = proxyPort;\n        this.privProxyUserName = proxyUserName;\n        this.privProxyPassword = proxyPassword;\n    }\n    static fromParameters(parameters) {\n        return new ProxyInfo(parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyHostName), parseInt(parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyPort), 10), parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyUserName), parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyPassword));\n    }\n    static fromRecognizerConfig(config) {\n        return this.fromParameters(config.parameters);\n    }\n    get HostName() {\n        return this.privProxyHostName;\n    }\n    get Port() {\n        return this.privProxyPort;\n    }\n    get UserName() {\n        return this.privProxyUserName;\n    }\n    get Password() {\n        return this.privProxyPassword;\n    }\n}\n\n//# sourceMappingURL=ProxyInfo.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class ConnectionOpenResponse {\n    constructor(statusCode, reason) {\n        this.privStatusCode = statusCode;\n        this.privReason = reason;\n    }\n    get statusCode() {\n        return this.privStatusCode;\n    }\n    get reason() {\n        return this.privReason;\n    }\n}\n\n//# sourceMappingURL=ConnectionOpenResponse.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ArgumentNullError, BackgroundEvent, ConnectionClosedEvent, ConnectionErrorEvent, ConnectionEstablishedEvent, ConnectionMessageReceivedEvent, ConnectionMessageSentEvent, ConnectionOpenResponse, ConnectionStartEvent, ConnectionState, Deferred, Events, EventSource, MessageType, Queue, RawWebsocketMessage, } from \"../common/Exports\";\n// Node.JS specific web socket / browser support.\nimport ws from \"ws\";\nimport { CertCheckAgent } from \"./CertChecks\";\nexport class WebsocketMessageAdapter {\n    constructor(uri, connectionId, messageFormatter, proxyInfo, headers) {\n        this.open = () => {\n            if (this.privConnectionState === ConnectionState.Disconnected) {\n                return Promise.reject(`Cannot open a connection that is in ${this.privConnectionState} state`);\n            }\n            if (this.privConnectionEstablishDeferral) {\n                return this.privConnectionEstablishDeferral.promise;\n            }\n            this.privConnectionEstablishDeferral = new Deferred();\n            this.privCertificateValidatedDeferral = new Deferred();\n            this.privConnectionState = ConnectionState.Connecting;\n            try {\n                if (typeof WebSocket !== \"undefined\" && !WebsocketMessageAdapter.forceNpmWebSocket) {\n                    // Browser handles cert checks.\n                    this.privCertificateValidatedDeferral.resolve();\n                    this.privWebsocketClient = new WebSocket(this.privUri);\n                }\n                else {\n                    const options = { headers: this.privHeaders };\n                    // The ocsp library will handle validation for us and fail the connection if needed.\n                    this.privCertificateValidatedDeferral.resolve();\n                    const checkAgent = new CertCheckAgent(this.proxyInfo);\n                    options.agent = checkAgent.GetAgent();\n                    this.privWebsocketClient = new ws(this.privUri, options);\n                }\n                this.privWebsocketClient.binaryType = \"arraybuffer\";\n                this.privReceivingMessageQueue = new Queue();\n                this.privDisconnectDeferral = new Deferred();\n                this.privSendMessageQueue = new Queue();\n                this.processSendQueue().catch((reason) => {\n                    Events.instance.onEvent(new BackgroundEvent(reason));\n                });\n            }\n            catch (error) {\n                this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(500, error));\n                return this.privConnectionEstablishDeferral.promise;\n            }\n            this.onEvent(new ConnectionStartEvent(this.privConnectionId, this.privUri));\n            this.privWebsocketClient.onopen = (e) => {\n                this.privCertificateValidatedDeferral.promise.then(() => {\n                    this.privConnectionState = ConnectionState.Connected;\n                    this.onEvent(new ConnectionEstablishedEvent(this.privConnectionId));\n                    this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(200, \"\"));\n                }, (error) => {\n                    this.privConnectionEstablishDeferral.reject(error);\n                });\n            };\n            this.privWebsocketClient.onerror = (e) => {\n                this.onEvent(new ConnectionErrorEvent(this.privConnectionId, e.message, e.type));\n                this.privLastErrorReceived = e.message;\n            };\n            this.privWebsocketClient.onclose = (e) => {\n                if (this.privConnectionState === ConnectionState.Connecting) {\n                    this.privConnectionState = ConnectionState.Disconnected;\n                    // this.onEvent(new ConnectionEstablishErrorEvent(this.connectionId, e.code, e.reason));\n                    this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(e.code, e.reason + \" \" + this.privLastErrorReceived));\n                }\n                else {\n                    this.privConnectionState = ConnectionState.Disconnected;\n                    this.onEvent(new ConnectionClosedEvent(this.privConnectionId, e.code, e.reason));\n                }\n                this.onClose(e.code, e.reason).catch((reason) => {\n                    Events.instance.onEvent(new BackgroundEvent(reason));\n                });\n            };\n            this.privWebsocketClient.onmessage = (e) => {\n                const networkReceivedTime = new Date().toISOString();\n                if (this.privConnectionState === ConnectionState.Connected) {\n                    const deferred = new Deferred();\n                    // let id = ++this.idCounter;\n                    this.privReceivingMessageQueue.enqueueFromPromise(deferred.promise);\n                    if (e.data instanceof ArrayBuffer) {\n                        const rawMessage = new RawWebsocketMessage(MessageType.Binary, e.data);\n                        this.privMessageFormatter\n                            .toConnectionMessage(rawMessage)\n                            .then((connectionMessage) => {\n                            this.onEvent(new ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\n                            deferred.resolve(connectionMessage);\n                        }, (error) => {\n                            // TODO: Events for these ?\n                            deferred.reject(`Invalid binary message format. Error: ${error}`);\n                        });\n                    }\n                    else {\n                        const rawMessage = new RawWebsocketMessage(MessageType.Text, e.data);\n                        this.privMessageFormatter\n                            .toConnectionMessage(rawMessage)\n                            .then((connectionMessage) => {\n                            this.onEvent(new ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\n                            deferred.resolve(connectionMessage);\n                        }, (error) => {\n                            // TODO: Events for these ?\n                            deferred.reject(`Invalid text message format. Error: ${error}`);\n                        });\n                    }\n                }\n            };\n            return this.privConnectionEstablishDeferral.promise;\n        };\n        this.send = (message) => {\n            if (this.privConnectionState !== ConnectionState.Connected) {\n                return Promise.reject(`Cannot send on connection that is in ${ConnectionState[this.privConnectionState]} state`);\n            }\n            const messageSendStatusDeferral = new Deferred();\n            const messageSendDeferral = new Deferred();\n            this.privSendMessageQueue.enqueueFromPromise(messageSendDeferral.promise);\n            this.privMessageFormatter\n                .fromConnectionMessage(message)\n                .then((rawMessage) => {\n                messageSendDeferral.resolve({\n                    Message: message,\n                    RawWebsocketMessage: rawMessage,\n                    sendStatusDeferral: messageSendStatusDeferral,\n                });\n            }, (error) => {\n                messageSendDeferral.reject(`Error formatting the message. ${error}`);\n            });\n            return messageSendStatusDeferral.promise;\n        };\n        this.read = () => {\n            if (this.privConnectionState !== ConnectionState.Connected) {\n                return Promise.reject(`Cannot read on connection that is in ${this.privConnectionState} state`);\n            }\n            return this.privReceivingMessageQueue.dequeue();\n        };\n        this.close = (reason) => {\n            if (this.privWebsocketClient) {\n                if (this.privConnectionState !== ConnectionState.Disconnected) {\n                    this.privWebsocketClient.close(1000, reason ? reason : \"Normal closure by client\");\n                }\n            }\n            else {\n                return Promise.resolve();\n            }\n            return this.privDisconnectDeferral.promise;\n        };\n        this.sendRawMessage = (sendItem) => {\n            try {\n                // indicates we are draining the queue and it came with no message;\n                if (!sendItem) {\n                    return Promise.resolve();\n                }\n                this.onEvent(new ConnectionMessageSentEvent(this.privConnectionId, new Date().toISOString(), sendItem.Message));\n                // add a check for the ws readystate in order to stop the red console error 'WebSocket is already in CLOSING or CLOSED state' appearing\n                if (this.isWebsocketOpen) {\n                    this.privWebsocketClient.send(sendItem.RawWebsocketMessage.payload);\n                }\n                else {\n                    return Promise.reject(\"websocket send error: Websocket not ready \" + this.privConnectionId + \" \" + sendItem.Message.id + \" \" + new Error().stack);\n                }\n                return Promise.resolve();\n            }\n            catch (e) {\n                return Promise.reject(`websocket send error: ${e}`);\n            }\n        };\n        this.onEvent = (event) => {\n            this.privConnectionEvents.onEvent(event);\n            Events.instance.onEvent(event);\n        };\n        if (!uri) {\n            throw new ArgumentNullError(\"uri\");\n        }\n        if (!messageFormatter) {\n            throw new ArgumentNullError(\"messageFormatter\");\n        }\n        this.proxyInfo = proxyInfo;\n        this.privConnectionEvents = new EventSource();\n        this.privConnectionId = connectionId;\n        this.privMessageFormatter = messageFormatter;\n        this.privConnectionState = ConnectionState.None;\n        this.privUri = uri;\n        this.privHeaders = headers;\n        // Add the connection ID to the headers\n        this.privHeaders[\"X-ConnectionId\"] = this.privConnectionId;\n        this.privLastErrorReceived = \"\";\n    }\n    get state() {\n        return this.privConnectionState;\n    }\n    get events() {\n        return this.privConnectionEvents;\n    }\n    onClose(code, reason) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const closeReason = `Connection closed. ${code}: ${reason}`;\n            this.privConnectionState = ConnectionState.Disconnected;\n            this.privDisconnectDeferral.resolve();\n            yield this.privReceivingMessageQueue.drainAndDispose((pendingReceiveItem) => {\n                // TODO: Events for these ?\n                // Logger.instance.onEvent(new LoggingEvent(LogType.Warning, null, `Failed to process received message. Reason: ${closeReason}, Message: ${JSON.stringify(pendingReceiveItem)}`));\n            }, closeReason);\n            yield this.privSendMessageQueue.drainAndDispose((pendingSendItem) => {\n                pendingSendItem.sendStatusDeferral.reject(closeReason);\n            }, closeReason);\n        });\n    }\n    processSendQueue() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const itemToSend = this.privSendMessageQueue.dequeue();\n            const sendItem = yield itemToSend;\n            // indicates we are draining the queue and it came with no message;\n            if (!sendItem) {\n                return;\n            }\n            try {\n                yield this.sendRawMessage(sendItem);\n                sendItem.sendStatusDeferral.resolve();\n            }\n            catch (sendError) {\n                sendItem.sendStatusDeferral.reject(sendError);\n            }\n            yield this.processSendQueue();\n        });\n    }\n    get isWebsocketOpen() {\n        return this.privWebsocketClient && this.privWebsocketClient.readyState === this.privWebsocketClient.OPEN;\n    }\n}\nWebsocketMessageAdapter.forceNpmWebSocket = false;\n\n//# sourceMappingURL=WebsocketMessageAdapter.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ArgumentNullError, createNoDashGuid, } from \"../common/Exports\";\nimport { WebsocketMessageAdapter } from \"./WebsocketMessageAdapter\";\nexport class WebsocketConnection {\n    constructor(uri, queryParameters, headers, messageFormatter, proxyInfo, connectionId) {\n        this.privIsDisposed = false;\n        this.isDisposed = () => {\n            return this.privIsDisposed;\n        };\n        this.state = () => {\n            return this.privConnectionMessageAdapter.state;\n        };\n        this.open = () => {\n            return this.privConnectionMessageAdapter.open();\n        };\n        this.send = (message) => {\n            return this.privConnectionMessageAdapter.send(message);\n        };\n        this.read = () => {\n            return this.privConnectionMessageAdapter.read();\n        };\n        if (!uri) {\n            throw new ArgumentNullError(\"uri\");\n        }\n        if (!messageFormatter) {\n            throw new ArgumentNullError(\"messageFormatter\");\n        }\n        this.privMessageFormatter = messageFormatter;\n        let queryParams = \"\";\n        let i = 0;\n        if (queryParameters) {\n            for (const paramName in queryParameters) {\n                if (paramName) {\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\n                    const val = encodeURIComponent(queryParameters[paramName]);\n                    queryParams += `${paramName}=${val}`;\n                    i++;\n                }\n            }\n        }\n        if (headers) {\n            for (const headerName in headers) {\n                if (headerName) {\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\n                    const val = encodeURIComponent(headers[headerName]);\n                    queryParams += `${headerName}=${val}`;\n                    i++;\n                }\n            }\n        }\n        this.privUri = uri + queryParams;\n        this.privId = connectionId ? connectionId : createNoDashGuid();\n        this.privConnectionMessageAdapter = new WebsocketMessageAdapter(this.privUri, this.id, this.privMessageFormatter, proxyInfo, headers);\n    }\n    dispose() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.privIsDisposed = true;\n            if (this.privConnectionMessageAdapter) {\n                yield this.privConnectionMessageAdapter.close();\n            }\n        });\n    }\n    get id() {\n        return this.privId;\n    }\n    get events() {\n        return this.privConnectionMessageAdapter.events;\n    }\n}\n\n//# sourceMappingURL=WebsocketConnection.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport * as fs from \"fs\";\nimport { Contracts } from \"../Contracts\";\nexport class AudioFileWriter {\n    constructor(filename) {\n        this.id = () => {\n            return this.privId;\n        };\n        this.privFd = fs.openSync(filename, \"w\");\n    }\n    set format(format) {\n        Contracts.throwIfNotUndefined(this.privAudioFormat, \"format is already set\");\n        this.privAudioFormat = format;\n        let headerOffset = 0;\n        if (this.privAudioFormat.hasHeader) {\n            headerOffset = this.privAudioFormat.header.byteLength;\n        }\n        if (this.privFd !== undefined) {\n            this.privWriteStream = fs.createWriteStream(\"\", { fd: this.privFd, start: headerOffset, autoClose: false });\n        }\n    }\n    write(buffer) {\n        Contracts.throwIfNullOrUndefined(this.privAudioFormat, \"must set format before writing.\");\n        if (this.privWriteStream !== undefined) {\n            this.privWriteStream.write(new Uint8Array(buffer.slice(0)));\n        }\n    }\n    close() {\n        if (this.privFd !== undefined) {\n            this.privWriteStream.on(\"finish\", () => {\n                if (this.privAudioFormat.hasHeader) {\n                    this.privAudioFormat.updateHeader(this.privWriteStream.bytesWritten);\n                    fs.writeSync(this.privFd, new Int8Array(this.privAudioFormat.header), 0, this.privAudioFormat.header.byteLength, 0);\n                }\n                fs.closeSync(this.privFd);\n                this.privFd = undefined;\n            });\n            this.privWriteStream.end();\n        }\n    }\n}\n\n//# sourceMappingURL=AudioFileWriter.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Defines content for session events like SessionStarted/Stopped, SoundStarted/Stopped.\n * @class SessionEventArgs\n */\nexport class SessionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} sessionId - The session id.\n     */\n    constructor(sessionId) {\n        this.privSessionId = sessionId;\n    }\n    /**\n     * Represents the session identifier.\n     * @member SessionEventArgs.prototype.sessionId\n     * @function\n     * @public\n     * @returns {string} Represents the session identifier.\n     */\n    get sessionId() {\n        return this.privSessionId;\n    }\n}\n\n//# sourceMappingURL=SessionEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RecognitionEventArgs } from \"./Exports\";\n/**\n * Translation text result event arguments.\n * @class TranslationRecognitionEventArgs\n */\nexport class TranslationRecognitionEventArgs extends RecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {TranslationRecognitionResult} result - The translation recognition result.\n     * @param {number} offset - The offset.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, offset, sessionId) {\n        super(offset, sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the recognition result.\n     * @member TranslationRecognitionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {TranslationRecognitionResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\n\n//# sourceMappingURL=TranslationRecognitionEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { SessionEventArgs } from \"./Exports\";\n/**\n * Translation Synthesis event arguments\n * @class TranslationSynthesisEventArgs\n */\nexport class TranslationSynthesisEventArgs extends SessionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {TranslationSynthesisResult} result - The translation synthesis result.\n     * @param {string} sessionId - The session id.\n     */\n    constructor(result, sessionId) {\n        super(sessionId);\n        this.privResult = result;\n    }\n    /**\n     * Specifies the translation synthesis result.\n     * @member TranslationSynthesisEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {TranslationSynthesisResult} Specifies the translation synthesis result.\n     */\n    get result() {\n        return this.privResult;\n    }\n}\n\n//# sourceMappingURL=TranslationSynthesisEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Defines translation synthesis result, i.e. the voice output of the translated\n * text in the target language.\n * @class TranslationSynthesisResult\n */\nexport class TranslationSynthesisResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {ResultReason} reason - The synthesis reason.\n     * @param {ArrayBuffer} audio - The audio data.\n     */\n    constructor(reason, audio) {\n        this.privReason = reason;\n        this.privAudio = audio;\n    }\n    /**\n     * Translated text in the target language.\n     * @member TranslationSynthesisResult.prototype.audio\n     * @function\n     * @public\n     * @returns {ArrayBuffer} Translated audio in the target language.\n     */\n    get audio() {\n        return this.privAudio;\n    }\n    /**\n     * The synthesis status.\n     * @member TranslationSynthesisResult.prototype.reason\n     * @function\n     * @public\n     * @returns {ResultReason} The synthesis status.\n     */\n    get reason() {\n        return this.privReason;\n    }\n}\n\n//# sourceMappingURL=TranslationSynthesisResult.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ArgumentNullError, } from \"../common/Exports\";\nimport { AuthInfo } from \"./IAuthentication\";\nconst AuthHeader = \"Ocp-Apim-Subscription-Key\";\n/**\n * @class\n */\nexport class CognitiveSubscriptionKeyAuthentication {\n    /**\n     * Creates and initializes an instance of the CognitiveSubscriptionKeyAuthentication class.\n     * @constructor\n     * @param {string} subscriptionKey - The subscription key\n     */\n    constructor(subscriptionKey) {\n        /**\n         * Fetches the subscription key.\n         * @member\n         * @function\n         * @public\n         * @param {string} authFetchEventId - The id to fetch.\n         */\n        this.fetch = (authFetchEventId) => {\n            return Promise.resolve(this.privAuthInfo);\n        };\n        /**\n         * Fetches the subscription key.\n         * @member\n         * @function\n         * @public\n         * @param {string} authFetchEventId - The id to fetch.\n         */\n        this.fetchOnExpiry = (authFetchEventId) => {\n            return Promise.resolve(this.privAuthInfo);\n        };\n        if (!subscriptionKey) {\n            throw new ArgumentNullError(\"subscriptionKey\");\n        }\n        this.privAuthInfo = new AuthInfo(AuthHeader, subscriptionKey);\n    }\n}\n\n//# sourceMappingURL=CognitiveSubscriptionKeyAuthentication.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ArgumentNullError } from \"../common/Exports\";\nimport { AuthInfo } from \"./IAuthentication\";\nconst AuthHeader = \"Authorization\";\nexport class CognitiveTokenAuthentication {\n    constructor(fetchCallback, fetchOnExpiryCallback) {\n        this.fetch = (authFetchEventId) => {\n            return this.privFetchCallback(authFetchEventId).then((token) => new AuthInfo(AuthHeader, token));\n        };\n        this.fetchOnExpiry = (authFetchEventId) => {\n            return this.privFetchOnExpiryCallback(authFetchEventId).then((token) => new AuthInfo(AuthHeader, token));\n        };\n        if (!fetchCallback) {\n            throw new ArgumentNullError(\"fetchCallback\");\n        }\n        if (!fetchOnExpiryCallback) {\n            throw new ArgumentNullError(\"fetchOnExpiryCallback\");\n        }\n        this.privFetchCallback = fetchCallback;\n        this.privFetchOnExpiryCallback = fetchOnExpiryCallback;\n    }\n}\n\n//# sourceMappingURL=CognitiveTokenAuthentication.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RecognitionStatus } from \"../Exports\";\nexport class DetailedSpeechPhrase {\n    constructor(json) {\n        this.privDetailedSpeechPhrase = JSON.parse(json);\n        this.privDetailedSpeechPhrase.RecognitionStatus = RecognitionStatus[this.privDetailedSpeechPhrase.RecognitionStatus];\n    }\n    static fromJSON(json) {\n        return new DetailedSpeechPhrase(json);\n    }\n    get RecognitionStatus() {\n        return this.privDetailedSpeechPhrase.RecognitionStatus;\n    }\n    get NBest() {\n        return this.privDetailedSpeechPhrase.NBest;\n    }\n    get Duration() {\n        return this.privDetailedSpeechPhrase.Duration;\n    }\n    get Offset() {\n        return this.privDetailedSpeechPhrase.Offset;\n    }\n    get Language() {\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Language;\n    }\n    get LanguageDetectionConfidence() {\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Confidence;\n    }\n}\n\n//# sourceMappingURL=DetailedSpeechPhrase.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RecognitionStatus } from \"../Exports\";\nimport { TranslationStatus } from \"../TranslationStatus\";\nexport class TranslationPhrase {\n    constructor(json) {\n        this.privTranslationPhrase = JSON.parse(json);\n        this.privTranslationPhrase.RecognitionStatus = RecognitionStatus[this.privTranslationPhrase.RecognitionStatus];\n        if (this.privTranslationPhrase.Translation !== undefined) {\n            this.privTranslationPhrase.Translation.TranslationStatus = TranslationStatus[this.privTranslationPhrase.Translation.TranslationStatus];\n        }\n    }\n    static fromJSON(json) {\n        return new TranslationPhrase(json);\n    }\n    get RecognitionStatus() {\n        return this.privTranslationPhrase.RecognitionStatus;\n    }\n    get Offset() {\n        return this.privTranslationPhrase.Offset;\n    }\n    get Duration() {\n        return this.privTranslationPhrase.Duration;\n    }\n    get Text() {\n        return this.privTranslationPhrase.Text;\n    }\n    get Translation() {\n        return this.privTranslationPhrase.Translation;\n    }\n}\n\n//# sourceMappingURL=TranslationPhrase.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Define payload of speech recognition canceled result events.\n * @class TranslationRecognitionCanceledEventArgs\n */\nexport class TranslationRecognitionCanceledEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} sessionid - The session id.\n     * @param {CancellationReason} cancellationReason - The cancellation reason.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {TranslationRecognitionResult} result - The result.\n     */\n    constructor(sessionid, cancellationReason, errorDetails, errorCode, result) {\n        this.privCancelReason = cancellationReason;\n        this.privErrorDetails = errorDetails;\n        this.privResult = result;\n        this.privSessionId = sessionid;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * Specifies the recognition result.\n     * @member TranslationRecognitionCanceledEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {TranslationRecognitionResult} the recognition result.\n     */\n    get result() {\n        return this.privResult;\n    }\n    /**\n     * Specifies the session identifier.\n     * @member TranslationRecognitionCanceledEventArgs.prototype.sessionId\n     * @function\n     * @public\n     * @returns {string} the session identifier.\n     */\n    get sessionId() {\n        return this.privSessionId;\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member TranslationRecognitionCanceledEventArgs.prototype.reason\n     * @function\n     * @public\n     * @returns {CancellationReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privCancelReason;\n    }\n    /**\n     * The error code in case of an unsuccessful recognition.\n     * Added in version 1.1.0.\n     * @return An error code that represents the error reason.\n     */\n    get errorCode() {\n        return this.privErrorCode;\n    }\n    /**\n     * In case of an unsuccessful recognition, provides details of the occurred error.\n     * @member TranslationRecognitionCanceledEventArgs.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} A String that represents the error details.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\n\n//# sourceMappingURL=TranslationRecognitionCanceledEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class RestConfigBase {\n    static get requestOptions() {\n        return RestConfigBase.privDefaultRequestOptions;\n    }\n    static get configParams() {\n        return RestConfigBase.privDefaultParams;\n    }\n    static get restErrors() {\n        return RestConfigBase.privRestErrors;\n    }\n}\nRestConfigBase.privDefaultRequestOptions = {\n    headers: {\n        Accept: \"application/json\",\n    },\n    ignoreCache: false,\n    timeout: 10000,\n};\nRestConfigBase.privRestErrors = {\n    authInvalidSubscriptionKey: \"You must specify either an authentication token to use, or a Cognitive Speech subscription key.\",\n    authInvalidSubscriptionRegion: \"You must specify the Cognitive Speech region to use.\",\n    invalidArgs: \"Required input not found: {arg}.\",\n    invalidCreateJoinConversationResponse: \"Creating/Joining conversation failed with HTTP {status}.\",\n    invalidParticipantRequest: \"The requested participant was not found.\",\n    permissionDeniedConnect: \"Required credentials not found.\",\n    permissionDeniedConversation: \"Invalid operation: only the host can {command} the conversation.\",\n    permissionDeniedParticipant: \"Invalid operation: only the host can {command} a participant.\",\n    permissionDeniedSend: \"Invalid operation: the conversation is not in a connected state.\",\n    permissionDeniedStart: \"Invalid operation: there is already an active conversation.\",\n};\nRestConfigBase.privDefaultParams = {\n    apiVersion: \"api-version\",\n    authorization: \"Authorization\",\n    clientAppId: \"X-ClientAppId\",\n    contentTypeKey: \"Content-Type\",\n    correlationId: \"X-CorrelationId\",\n    languageCode: \"language\",\n    nickname: \"nickname\",\n    profanity: \"profanity\",\n    requestId: \"X-RequestId\",\n    roomId: \"roomid\",\n    sessionToken: \"token\",\n    subscriptionKey: \"Ocp-Apim-Subscription-Key\",\n    subscriptionRegion: \"Ocp-Apim-Subscription-Region\",\n    token: \"X-CapitoToken\",\n};\n\n//# sourceMappingURL=RestConfigBase.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class RiffPcmEncoder {\n    constructor(actualSampleRate, desiredSampleRate) {\n        this.encode = (actualAudioFrame) => {\n            const audioFrame = this.downSampleAudioFrame(actualAudioFrame, this.privActualSampleRate, this.privDesiredSampleRate);\n            if (!audioFrame) {\n                return null;\n            }\n            const audioLength = audioFrame.length * 2;\n            const buffer = new ArrayBuffer(audioLength);\n            const view = new DataView(buffer);\n            this.floatTo16BitPCM(view, 0, audioFrame);\n            return buffer;\n        };\n        this.setString = (view, offset, str) => {\n            for (let i = 0; i < str.length; i++) {\n                view.setUint8(offset + i, str.charCodeAt(i));\n            }\n        };\n        this.floatTo16BitPCM = (view, offset, input) => {\n            for (let i = 0; i < input.length; i++, offset += 2) {\n                const s = Math.max(-1, Math.min(1, input[i]));\n                view.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n            }\n        };\n        this.downSampleAudioFrame = (srcFrame, srcRate, dstRate) => {\n            if (dstRate === srcRate || dstRate > srcRate) {\n                return srcFrame;\n            }\n            const ratio = srcRate / dstRate;\n            const dstLength = Math.round(srcFrame.length / ratio);\n            const dstFrame = new Float32Array(dstLength);\n            let srcOffset = 0;\n            let dstOffset = 0;\n            while (dstOffset < dstLength) {\n                const nextSrcOffset = Math.round((dstOffset + 1) * ratio);\n                let accum = 0;\n                let count = 0;\n                while (srcOffset < nextSrcOffset && srcOffset < srcFrame.length) {\n                    accum += srcFrame[srcOffset++];\n                    count++;\n                }\n                dstFrame[dstOffset++] = accum / count;\n            }\n            return dstFrame;\n        };\n        this.privActualSampleRate = actualSampleRate;\n        this.privDesiredSampleRate = desiredSampleRate;\n    }\n}\n\n//# sourceMappingURL=RiffPcmEncoder.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RiffPcmEncoder } from \"../common/Exports\";\nexport class PcmRecorder {\n    constructor() {\n        this.record = (context, mediaStream, outputStream) => {\n            const desiredSampleRate = 16000;\n            const scriptNode = (() => {\n                let bufferSize = 0;\n                try {\n                    return context.createScriptProcessor(bufferSize, 1, 1);\n                }\n                catch (error) {\n                    // Webkit (<= version 31) requires a valid bufferSize.\n                    bufferSize = 2048;\n                    let audioSampleRate = context.sampleRate;\n                    while (bufferSize < 16384 && audioSampleRate >= (2 * desiredSampleRate)) {\n                        bufferSize <<= 1;\n                        audioSampleRate >>= 1;\n                    }\n                    return context.createScriptProcessor(bufferSize, 1, 1);\n                }\n            })();\n            const waveStreamEncoder = new RiffPcmEncoder(context.sampleRate, desiredSampleRate);\n            let needHeader = true;\n            const that = this;\n            scriptNode.onaudioprocess = (event) => {\n                const inputFrame = event.inputBuffer.getChannelData(0);\n                if (outputStream && !outputStream.isClosed) {\n                    const waveFrame = waveStreamEncoder.encode(inputFrame);\n                    if (!!waveFrame) {\n                        outputStream.writeStreamChunk({\n                            buffer: waveFrame,\n                            isEnd: false,\n                            timeReceived: Date.now(),\n                        });\n                        needHeader = false;\n                    }\n                }\n            };\n            const micInput = context.createMediaStreamSource(mediaStream);\n            // https://webaudio.github.io/web-audio-api/#audioworklet\n            // Using AudioWorklet to improve audio quality and avoid audio glitches due to blocking the UI thread\n            if (!!this.privSpeechProcessorScript && !!context.audioWorklet) {\n                context.audioWorklet\n                    .addModule(this.privSpeechProcessorScript)\n                    .then(() => {\n                    const workletNode = new AudioWorkletNode(context, \"speech-processor\");\n                    workletNode.port.onmessage = (ev) => {\n                        const inputFrame = ev.data;\n                        if (outputStream && !outputStream.isClosed) {\n                            const waveFrame = waveStreamEncoder.encode(inputFrame);\n                            if (!!waveFrame) {\n                                outputStream.writeStreamChunk({\n                                    buffer: waveFrame,\n                                    isEnd: false,\n                                    timeReceived: Date.now(),\n                                });\n                                needHeader = false;\n                            }\n                        }\n                    };\n                    micInput.connect(workletNode);\n                    workletNode.connect(context.destination);\n                    this.privMediaResources = {\n                        scriptProcessorNode: workletNode,\n                        source: micInput,\n                        stream: mediaStream,\n                    };\n                })\n                    .catch(() => {\n                    micInput.connect(scriptNode);\n                    scriptNode.connect(context.destination);\n                    this.privMediaResources = {\n                        scriptProcessorNode: scriptNode,\n                        source: micInput,\n                        stream: mediaStream,\n                    };\n                });\n            }\n            else {\n                micInput.connect(scriptNode);\n                scriptNode.connect(context.destination);\n                this.privMediaResources = {\n                    scriptProcessorNode: scriptNode,\n                    source: micInput,\n                    stream: mediaStream,\n                };\n            }\n        };\n        this.releaseMediaResources = (context) => {\n            if (this.privMediaResources) {\n                if (this.privMediaResources.scriptProcessorNode) {\n                    this.privMediaResources.scriptProcessorNode.disconnect(context.destination);\n                    this.privMediaResources.scriptProcessorNode = null;\n                }\n                if (this.privMediaResources.source) {\n                    this.privMediaResources.source.disconnect();\n                    this.privMediaResources.stream.getTracks().forEach((track) => track.stop());\n                    this.privMediaResources.source = null;\n                }\n            }\n        };\n    }\n    setWorkletUrl(url) {\n        this.privSpeechProcessorScript = url;\n    }\n}\n\n//# sourceMappingURL=PCMRecorder.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { connectivity, type } from \"../common.speech/Exports\";\nimport { AudioSourceErrorEvent, AudioSourceInitializingEvent, AudioSourceOffEvent, AudioSourceReadyEvent, AudioStreamNodeAttachedEvent, AudioStreamNodeAttachingEvent, AudioStreamNodeDetachedEvent, AudioStreamNodeErrorEvent, ChunkedArrayBufferStream, createNoDashGuid, Deferred, Events, EventSource, } from \"../common/Exports\";\nimport { AudioStreamFormat, AudioStreamFormatImpl, } from \"../sdk/Audio/AudioStreamFormat\";\nexport const AudioWorkletSourceURLPropertyName = \"MICROPHONE-WorkletSourceUrl\";\nexport class MicAudioSource {\n    constructor(privRecorder, deviceId, audioSourceId, mediaStream) {\n        this.privRecorder = privRecorder;\n        this.deviceId = deviceId;\n        this.privStreams = {};\n        this.turnOn = () => {\n            if (this.privInitializeDeferral) {\n                return this.privInitializeDeferral.promise;\n            }\n            this.privInitializeDeferral = new Deferred();\n            try {\n                this.createAudioContext();\n            }\n            catch (error) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    this.privInitializeDeferral.reject(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    this.privInitializeDeferral.reject(error);\n                }\n                return this.privInitializeDeferral.promise;\n            }\n            const nav = window.navigator;\n            let getUserMedia = (nav.getUserMedia ||\n                nav.webkitGetUserMedia ||\n                nav.mozGetUserMedia ||\n                nav.msGetUserMedia);\n            if (!!nav.mediaDevices) {\n                getUserMedia = (constraints, successCallback, errorCallback) => {\n                    nav.mediaDevices\n                        .getUserMedia(constraints)\n                        .then(successCallback)\n                        .catch(errorCallback);\n                };\n            }\n            if (!getUserMedia) {\n                const errorMsg = \"Browser does not support getUserMedia.\";\n                this.privInitializeDeferral.reject(errorMsg);\n                this.onEvent(new AudioSourceErrorEvent(errorMsg, \"\")); // mic initialized error - no streamid at this point\n            }\n            else {\n                const next = () => {\n                    this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\n                    if (this.privMediaStream) {\n                        this.onEvent(new AudioSourceReadyEvent(this.privId));\n                        this.privInitializeDeferral.resolve();\n                    }\n                    else {\n                        getUserMedia({ audio: this.deviceId ? { deviceId: this.deviceId } : true, video: false }, (mediaStream) => {\n                            this.privMediaStream = mediaStream;\n                            this.onEvent(new AudioSourceReadyEvent(this.privId));\n                            this.privInitializeDeferral.resolve();\n                        }, (error) => {\n                            const errorMsg = `Error occurred during microphone initialization: ${error}`;\n                            const tmp = this.privInitializeDeferral;\n                            // HACK: this should be handled through onError callbacks of all promises up the stack.\n                            // Unfortunately, the current implementation does not provide an easy way to reject promises\n                            // without a lot of code replication.\n                            // TODO: fix promise implementation, allow for a graceful reject chaining.\n                            this.privInitializeDeferral = null;\n                            tmp.reject(errorMsg); // this will bubble up through the whole chain of promises,\n                            // with each new level adding extra \"Unhandled callback error\" prefix to the error message.\n                            // The following line is not guaranteed to be executed.\n                            this.onEvent(new AudioSourceErrorEvent(this.privId, errorMsg));\n                        });\n                    }\n                };\n                if (this.privContext.state === \"suspended\") {\n                    // NOTE: On iOS, the Web Audio API requires sounds to be triggered from an explicit user action.\n                    // https://github.com/WebAudio/web-audio-api/issues/790\n                    this.privContext.resume().then(next, (reason) => {\n                        this.privInitializeDeferral.reject(`Failed to initialize audio context: ${reason}`);\n                    });\n                }\n                else {\n                    next();\n                }\n            }\n            return this.privInitializeDeferral.promise;\n        };\n        this.id = () => {\n            return this.privId;\n        };\n        this.attach = (audioNodeId) => {\n            this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n            return this.listen(audioNodeId).then((stream) => {\n                this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\n                return {\n                    detach: () => __awaiter(this, void 0, void 0, function* () {\n                        stream.readEnded();\n                        delete this.privStreams[audioNodeId];\n                        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n                        return this.turnOff();\n                    }),\n                    id: () => {\n                        return audioNodeId;\n                    },\n                    read: () => {\n                        return stream.read();\n                    },\n                };\n            });\n        };\n        this.detach = (audioNodeId) => {\n            if (audioNodeId && this.privStreams[audioNodeId]) {\n                this.privStreams[audioNodeId].close();\n                delete this.privStreams[audioNodeId];\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n            }\n        };\n        this.listen = (audioNodeId) => __awaiter(this, void 0, void 0, function* () {\n            yield this.turnOn();\n            const stream = new ChunkedArrayBufferStream(this.privOutputChunkSize, audioNodeId);\n            this.privStreams[audioNodeId] = stream;\n            try {\n                this.privRecorder.record(this.privContext, this.privMediaStream, stream);\n            }\n            catch (error) {\n                this.onEvent(new AudioStreamNodeErrorEvent(this.privId, audioNodeId, error));\n                throw error;\n            }\n            const result = stream;\n            return result;\n        });\n        this.onEvent = (event) => {\n            this.privEvents.onEvent(event);\n            Events.instance.onEvent(event);\n        };\n        this.createAudioContext = () => {\n            if (!!this.privContext) {\n                return;\n            }\n            this.privContext = AudioStreamFormatImpl.getAudioContext(MicAudioSource.AUDIOFORMAT.samplesPerSec);\n        };\n        this.privOutputChunkSize = MicAudioSource.AUDIOFORMAT.avgBytesPerSec / 10;\n        this.privId = audioSourceId ? audioSourceId : createNoDashGuid();\n        this.privEvents = new EventSource();\n        this.privMediaStream = mediaStream || null;\n    }\n    get format() {\n        return Promise.resolve(MicAudioSource.AUDIOFORMAT);\n    }\n    get blob() {\n        return Promise.reject(\"Not implemented for Mic input\");\n    }\n    turnOff() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const streamId in this.privStreams) {\n                if (streamId) {\n                    const stream = this.privStreams[streamId];\n                    if (stream) {\n                        stream.close();\n                    }\n                }\n            }\n            this.onEvent(new AudioSourceOffEvent(this.privId)); // no stream now\n            this.privInitializeDeferral = null;\n            yield this.destroyAudioContext();\n            return;\n        });\n    }\n    get events() {\n        return this.privEvents;\n    }\n    get deviceInfo() {\n        return this.getMicrophoneLabel().then((label) => {\n            return {\n                bitspersample: MicAudioSource.AUDIOFORMAT.bitsPerSample,\n                channelcount: MicAudioSource.AUDIOFORMAT.channels,\n                connectivity: connectivity.Unknown,\n                manufacturer: \"Speech SDK\",\n                model: label,\n                samplerate: MicAudioSource.AUDIOFORMAT.samplesPerSec,\n                type: type.Microphones,\n            };\n        });\n    }\n    setProperty(name, value) {\n        if (name === AudioWorkletSourceURLPropertyName) {\n            this.privRecorder.setWorkletUrl(value);\n        }\n        else {\n            throw new Error(\"Property '\" + name + \"' is not supported on Microphone.\");\n        }\n    }\n    getMicrophoneLabel() {\n        const defaultMicrophoneName = \"microphone\";\n        // If we did this already, return the value.\n        if (this.privMicrophoneLabel !== undefined) {\n            return Promise.resolve(this.privMicrophoneLabel);\n        }\n        // If the stream isn't currently running, we can't query devices because security.\n        if (this.privMediaStream === undefined || !this.privMediaStream.active) {\n            return Promise.resolve(defaultMicrophoneName);\n        }\n        // Setup a default\n        this.privMicrophoneLabel = defaultMicrophoneName;\n        // Get the id of the device running the audio track.\n        const microphoneDeviceId = this.privMediaStream.getTracks()[0].getSettings().deviceId;\n        // If the browser doesn't support getting the device ID, set a default and return.\n        if (undefined === microphoneDeviceId) {\n            return Promise.resolve(this.privMicrophoneLabel);\n        }\n        const deferred = new Deferred();\n        // Enumerate the media devices.\n        navigator.mediaDevices.enumerateDevices().then((devices) => {\n            for (const device of devices) {\n                if (device.deviceId === microphoneDeviceId) {\n                    // Found the device\n                    this.privMicrophoneLabel = device.label;\n                    break;\n                }\n            }\n            deferred.resolve(this.privMicrophoneLabel);\n        }, () => deferred.resolve(this.privMicrophoneLabel));\n        return deferred.promise;\n    }\n    destroyAudioContext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.privContext) {\n                return;\n            }\n            this.privRecorder.releaseMediaResources(this.privContext);\n            // This pattern brought to you by a bug in the TypeScript compiler where it\n            // confuses the (\"close\" in this.privContext) with this.privContext always being null as the alternate.\n            // https://github.com/Microsoft/TypeScript/issues/11498\n            let hasClose = false;\n            if (\"close\" in this.privContext) {\n                hasClose = true;\n            }\n            if (hasClose) {\n                yield this.privContext.close();\n                this.privContext = null;\n            }\n            else if (null !== this.privContext && this.privContext.state === \"running\") {\n                // Suspend actually takes a callback, but analogous to the\n                // resume method, it'll be only fired if suspend is called\n                // in a direct response to a user action. The later is not always\n                // the case, as TurnOff is also called, when we receive an\n                // end-of-speech message from the service. So, doing a best effort\n                // fire-and-forget here.\n                yield this.privContext.suspend();\n            }\n        });\n    }\n}\nMicAudioSource.AUDIOFORMAT = AudioStreamFormat.getDefaultInputFormat();\n\n//# sourceMappingURL=MicAudioSource.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { connectivity, type, } from \"../common.speech/Exports\";\nimport { AudioSourceErrorEvent, AudioSourceInitializingEvent, AudioSourceOffEvent, AudioSourceReadyEvent, AudioStreamNodeAttachedEvent, AudioStreamNodeAttachingEvent, AudioStreamNodeDetachedEvent, AudioStreamNodeErrorEvent, ChunkedArrayBufferStream, createNoDashGuid, Deferred, Events, EventSource, } from \"../common/Exports\";\nimport { AudioStreamFormat } from \"../sdk/Audio/AudioStreamFormat\";\nexport class FileAudioSource {\n    constructor(file, audioSourceId) {\n        this.privStreams = {};\n        this.privHeaderEnd = 44;\n        this.turnOn = () => {\n            if (typeof FileReader === \"undefined\") {\n                const errorMsg = \"Browser does not support FileReader.\";\n                this.onEvent(new AudioSourceErrorEvent(errorMsg, \"\")); // initialization error - no streamid at this point\n                return Promise.reject(errorMsg);\n            }\n            else if (this.privFile.name.lastIndexOf(\".wav\") !== this.privFile.name.length - 4) {\n                const errorMsg = this.privFile.name + \" is not supported. Only WAVE files are allowed at the moment.\";\n                this.onEvent(new AudioSourceErrorEvent(errorMsg, \"\"));\n                return Promise.reject(errorMsg);\n            }\n            this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\n            this.onEvent(new AudioSourceReadyEvent(this.privId));\n            return;\n        };\n        this.id = () => {\n            return this.privId;\n        };\n        this.attach = (audioNodeId) => __awaiter(this, void 0, void 0, function* () {\n            this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\n            const stream = yield this.upload(audioNodeId);\n            this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\n            return Promise.resolve({\n                detach: () => __awaiter(this, void 0, void 0, function* () {\n                    stream.readEnded();\n                    delete this.privStreams[audioNodeId];\n                    this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n                    yield this.turnOff();\n                }),\n                id: () => {\n                    return audioNodeId;\n                },\n                read: () => {\n                    return stream.read();\n                },\n            });\n        });\n        this.detach = (audioNodeId) => {\n            if (audioNodeId && this.privStreams[audioNodeId]) {\n                this.privStreams[audioNodeId].close();\n                delete this.privStreams[audioNodeId];\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\n            }\n        };\n        this.turnOff = () => {\n            for (const streamId in this.privStreams) {\n                if (streamId) {\n                    const stream = this.privStreams[streamId];\n                    if (stream && !stream.isClosed) {\n                        stream.close();\n                    }\n                }\n            }\n            this.onEvent(new AudioSourceOffEvent(this.privId)); // no stream now\n            return Promise.resolve();\n        };\n        this.onEvent = (event) => {\n            this.privEvents.onEvent(event);\n            Events.instance.onEvent(event);\n        };\n        this.privId = audioSourceId ? audioSourceId : createNoDashGuid();\n        this.privEvents = new EventSource();\n        this.privFile = file;\n        // Read the header.\n        this.privAudioFormatPromise = this.readHeader();\n    }\n    get format() {\n        return this.privAudioFormatPromise;\n    }\n    get blob() {\n        return Promise.resolve(this.privFile);\n    }\n    get events() {\n        return this.privEvents;\n    }\n    get deviceInfo() {\n        return this.privAudioFormatPromise.then((result) => {\n            return Promise.resolve({\n                bitspersample: result.bitsPerSample,\n                channelcount: result.channels,\n                connectivity: connectivity.Unknown,\n                manufacturer: \"Speech SDK\",\n                model: \"File\",\n                samplerate: result.samplesPerSec,\n                type: type.File,\n            });\n        });\n    }\n    readHeader() {\n        // Read the wave header.\n        const maxHeaderSize = 128;\n        const header = this.privFile.slice(0, maxHeaderSize);\n        const headerReader = new FileReader();\n        const headerResult = new Deferred();\n        const processHeader = (event) => {\n            const header = event.target.result;\n            const view = new DataView(header);\n            const getWord = (index) => {\n                return String.fromCharCode(view.getUint8(index), view.getUint8(index + 1), view.getUint8(index + 2), view.getUint8(index + 3));\n            };\n            // RIFF 4 bytes.\n            if (\"RIFF\" !== getWord(0)) {\n                headerResult.reject(\"Invalid WAV header in file, RIFF was not found\");\n            }\n            // length, 4 bytes\n            // RIFF Type & fmt 8 bytes\n            if (\"WAVE\" !== getWord(8) || \"fmt \" !== getWord(12)) {\n                headerResult.reject(\"Invalid WAV header in file, WAVEfmt was not found\");\n            }\n            const formatSize = view.getInt32(16, true);\n            const channelCount = view.getUint16(22, true);\n            const sampleRate = view.getUint32(24, true);\n            const bitsPerSample = view.getUint16(34, true);\n            // Confirm if header is 44 bytes long.\n            let pos = 36 + Math.max(formatSize - 16, 0);\n            for (; getWord(pos) !== \"data\"; pos += 2) {\n                if (pos > maxHeaderSize - 8) {\n                    headerResult.reject(\"Invalid WAV header in file, data block was not found\");\n                }\n            }\n            this.privHeaderEnd = pos + 8;\n            headerResult.resolve(AudioStreamFormat.getWaveFormatPCM(sampleRate, bitsPerSample, channelCount));\n        };\n        headerReader.onload = processHeader;\n        headerReader.readAsArrayBuffer(header);\n        return headerResult.promise;\n    }\n    upload(audioNodeId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.turnOn();\n            const format = yield this.privAudioFormatPromise;\n            const reader = new FileReader();\n            const stream = new ChunkedArrayBufferStream(format.avgBytesPerSec / 10, audioNodeId);\n            this.privStreams[audioNodeId] = stream;\n            const processFile = (event) => {\n                if (stream.isClosed) {\n                    return; // output stream was closed (somebody called TurnOff). We're done here.\n                }\n                stream.writeStreamChunk({\n                    buffer: reader.result,\n                    isEnd: false,\n                    timeReceived: Date.now(),\n                });\n                stream.close();\n            };\n            reader.onload = processFile;\n            reader.onerror = (event) => {\n                const errorMsg = `Error occurred while processing '${this.privFile.name}'. ${event}`;\n                this.onEvent(new AudioStreamNodeErrorEvent(this.privId, audioNodeId, errorMsg));\n                throw new Error(errorMsg);\n            };\n            const chunk = this.privFile.slice(this.privHeaderEnd);\n            reader.readAsArrayBuffer(chunk);\n            return stream;\n        });\n    }\n}\n\n//# sourceMappingURL=FileAudioSource.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { FileAudioSource, MicAudioSource, PcmRecorder, } from \"../../common.browser/Exports\";\nimport { Contracts } from \"../Contracts\";\nimport { AudioInputStream, PullAudioInputStreamCallback, PullAudioOutputStream, PushAudioOutputStream, PushAudioOutputStreamCallback, SpeakerAudioDestination } from \"../Exports\";\nimport { AudioFileWriter } from \"./AudioFileWriter\";\nimport { PullAudioInputStreamImpl } from \"./AudioInputStream\";\nimport { PushAudioOutputStreamImpl } from \"./AudioOutputStream\";\n/**\n * Represents audio input configuration used for specifying what type of input to use (microphone, file, stream).\n * @class AudioConfig\n * Updated in version 1.11.0\n */\nexport class AudioConfig {\n    /**\n     * Creates an AudioConfig object representing the default microphone on the system.\n     * @member AudioConfig.fromDefaultMicrophoneInput\n     * @function\n     * @public\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    static fromDefaultMicrophoneInput() {\n        const pcmRecorder = new PcmRecorder();\n        return new AudioConfigImpl(new MicAudioSource(pcmRecorder));\n    }\n    /**\n     * Creates an AudioConfig object representing a microphone with the specified device ID.\n     * @member AudioConfig.fromMicrophoneInput\n     * @function\n     * @public\n     * @param {string | undefined} deviceId - Specifies the device ID of the microphone to be used.\n     *        Default microphone is used the value is omitted.\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    static fromMicrophoneInput(deviceId) {\n        const pcmRecorder = new PcmRecorder();\n        return new AudioConfigImpl(new MicAudioSource(pcmRecorder, deviceId));\n    }\n    /**\n     * Creates an AudioConfig object representing the specified file.\n     * @member AudioConfig.fromWavFileInput\n     * @function\n     * @public\n     * @param {File} fileName - Specifies the audio input file. Currently, only WAV / PCM is supported.\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    static fromWavFileInput(file) {\n        return new AudioConfigImpl(new FileAudioSource(file));\n    }\n    /**\n     * Creates an AudioConfig object representing the specified stream.\n     * @member AudioConfig.fromStreamInput\n     * @function\n     * @public\n     * @param {AudioInputStream | PullAudioInputStreamCallback | MediaStream} audioStream - Specifies the custom audio input\n     *        stream. Currently, only WAV / PCM is supported.\n     * @returns {AudioConfig} The audio input configuration being created.\n     */\n    static fromStreamInput(audioStream) {\n        if (audioStream instanceof PullAudioInputStreamCallback) {\n            return new AudioConfigImpl(new PullAudioInputStreamImpl(audioStream));\n        }\n        if (audioStream instanceof AudioInputStream) {\n            return new AudioConfigImpl(audioStream);\n        }\n        if (audioStream instanceof MediaStream) {\n            const pcmRecorder = new PcmRecorder();\n            return new AudioConfigImpl(new MicAudioSource(pcmRecorder, null, null, audioStream));\n        }\n        throw new Error(\"Not Supported Type\");\n    }\n    /**\n     * Creates an AudioConfig object representing the default speaker.\n     * @member AudioConfig.fromDefaultSpeakerOutput\n     * @function\n     * @public\n     * @returns {AudioConfig} The audio output configuration being created.\n     * Added in version 1.11.0\n     */\n    static fromDefaultSpeakerOutput() {\n        return new AudioOutputConfigImpl(new SpeakerAudioDestination());\n    }\n    /**\n     * Creates an AudioConfig object representing the custom IPlayer object.\n     * You can use the IPlayer object to control pause, resume, etc.\n     * @member AudioConfig.fromSpeakerOutput\n     * @function\n     * @public\n     * @param {IPlayer} player - the IPlayer object for playback.\n     * @returns {AudioConfig} The audio output configuration being created.\n     * Added in version 1.12.0\n     */\n    static fromSpeakerOutput(player) {\n        if (player === undefined) {\n            return AudioConfig.fromDefaultSpeakerOutput();\n        }\n        if (player instanceof SpeakerAudioDestination) {\n            return new AudioOutputConfigImpl(player);\n        }\n        throw new Error(\"Not Supported Type\");\n    }\n    /**\n     * Creates an AudioConfig object representing a specified output audio file\n     * @member AudioConfig.fromAudioFileOutput\n     * @function\n     * @public\n     * @param {PathLike} filename - the filename of the output audio file\n     * @returns {AudioConfig} The audio output configuration being created.\n     * Added in version 1.11.0\n     */\n    static fromAudioFileOutput(filename) {\n        return new AudioOutputConfigImpl(new AudioFileWriter(filename));\n    }\n    /**\n     * Creates an AudioConfig object representing a specified audio output stream\n     * @member AudioConfig.fromStreamOutput\n     * @function\n     * @public\n     * @param {AudioOutputStream | PushAudioOutputStreamCallback} audioStream - Specifies the custom audio output\n     *        stream.\n     * @returns {AudioConfig} The audio output configuration being created.\n     * Added in version 1.11.0\n     */\n    static fromStreamOutput(audioStream) {\n        if (audioStream instanceof PushAudioOutputStreamCallback) {\n            return new AudioOutputConfigImpl(new PushAudioOutputStreamImpl(audioStream));\n        }\n        if (audioStream instanceof PushAudioOutputStream) {\n            return new AudioOutputConfigImpl(audioStream);\n        }\n        if (audioStream instanceof PullAudioOutputStream) {\n            return new AudioOutputConfigImpl(audioStream);\n        }\n        throw new Error(\"Not Supported Type\");\n    }\n}\n/**\n * Represents audio input stream used for custom audio input configurations.\n * @private\n * @class AudioConfigImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class AudioConfigImpl extends AudioConfig {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {IAudioSource} source - An audio source.\n     */\n    constructor(source) {\n        super();\n        this.privSource = source;\n    }\n    /**\n     * Format information for the audio\n     */\n    get format() {\n        return this.privSource.format;\n    }\n    /**\n     * @member AudioConfigImpl.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, err) {\n        this.privSource.turnOff().then(() => {\n            if (!!cb) {\n                cb();\n            }\n        }, (error) => {\n            if (!!err) {\n                err(error);\n            }\n        });\n    }\n    /**\n     * @member AudioConfigImpl.prototype.id\n     * @function\n     * @public\n     */\n    id() {\n        return this.privSource.id();\n    }\n    /**\n     * @member AudioConfigImpl.prototype.blob\n     * @function\n     * @public\n     */\n    get blob() {\n        return this.privSource.blob;\n    }\n    /**\n     * @member AudioConfigImpl.prototype.turnOn\n     * @function\n     * @public\n     * @returns {Promise<void>} A promise.\n     */\n    turnOn() {\n        return this.privSource.turnOn();\n    }\n    /**\n     * @member AudioConfigImpl.prototype.attach\n     * @function\n     * @public\n     * @param {string} audioNodeId - The audio node id.\n     * @returns {Promise<IAudioStreamNode>} A promise.\n     */\n    attach(audioNodeId) {\n        return this.privSource.attach(audioNodeId);\n    }\n    /**\n     * @member AudioConfigImpl.prototype.detach\n     * @function\n     * @public\n     * @param {string} audioNodeId - The audio node id.\n     */\n    detach(audioNodeId) {\n        return this.privSource.detach(audioNodeId);\n    }\n    /**\n     * @member AudioConfigImpl.prototype.turnOff\n     * @function\n     * @public\n     * @returns {Promise<void>} A promise.\n     */\n    turnOff() {\n        return this.privSource.turnOff();\n    }\n    /**\n     * @member AudioConfigImpl.prototype.events\n     * @function\n     * @public\n     * @returns {EventSource<AudioSourceEvent>} An event source for audio events.\n     */\n    get events() {\n        return this.privSource.events;\n    }\n    setProperty(name, value) {\n        Contracts.throwIfNull(value, \"value\");\n        if (undefined !== this.privSource.setProperty) {\n            this.privSource.setProperty(name, value);\n        }\n        else {\n            throw new Error(\"This AudioConfig instance does not support setting properties.\");\n        }\n    }\n    getProperty(name, def) {\n        if (undefined !== this.privSource.getProperty) {\n            return this.privSource.getProperty(name, def);\n        }\n        else {\n            throw new Error(\"This AudioConfig instance does not support getting properties.\");\n        }\n        return def;\n    }\n    get deviceInfo() {\n        return this.privSource.deviceInfo;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class AudioOutputConfigImpl extends AudioConfig {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {IAudioDestination} destination - An audio destination.\n     */\n    constructor(destination) {\n        super();\n        this.privDestination = destination;\n    }\n    set format(format) {\n        this.privDestination.format = format;\n    }\n    write(buffer) {\n        this.privDestination.write(buffer);\n    }\n    close() {\n        this.privDestination.close();\n    }\n    id() {\n        return this.privDestination.id();\n    }\n    setProperty(name, value) {\n        throw new Error(\"This AudioConfig instance does not support setting properties.\");\n    }\n    getProperty(name, def) {\n        throw new Error(\"This AudioConfig instance does not support getting properties.\");\n    }\n}\n\n//# sourceMappingURL=AudioConfig.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ObjectDisposedError } from \"./Error\";\nexport class List {\n    constructor(list) {\n        this.privSubscriptionIdCounter = 0;\n        this.privAddSubscriptions = {};\n        this.privRemoveSubscriptions = {};\n        this.privDisposedSubscriptions = {};\n        this.privDisposeReason = null;\n        this.get = (itemIndex) => {\n            this.throwIfDisposed();\n            return this.privList[itemIndex];\n        };\n        this.first = () => {\n            return this.get(0);\n        };\n        this.last = () => {\n            return this.get(this.length() - 1);\n        };\n        this.add = (item) => {\n            this.throwIfDisposed();\n            this.insertAt(this.privList.length, item);\n        };\n        this.insertAt = (index, item) => {\n            this.throwIfDisposed();\n            if (index === 0) {\n                this.privList.unshift(item);\n            }\n            else if (index === this.privList.length) {\n                this.privList.push(item);\n            }\n            else {\n                this.privList.splice(index, 0, item);\n            }\n            this.triggerSubscriptions(this.privAddSubscriptions);\n        };\n        this.removeFirst = () => {\n            this.throwIfDisposed();\n            return this.removeAt(0);\n        };\n        this.removeLast = () => {\n            this.throwIfDisposed();\n            return this.removeAt(this.length() - 1);\n        };\n        this.removeAt = (index) => {\n            this.throwIfDisposed();\n            return this.remove(index, 1)[0];\n        };\n        this.remove = (index, count) => {\n            this.throwIfDisposed();\n            const removedElements = this.privList.splice(index, count);\n            this.triggerSubscriptions(this.privRemoveSubscriptions);\n            return removedElements;\n        };\n        this.clear = () => {\n            this.throwIfDisposed();\n            this.remove(0, this.length());\n        };\n        this.length = () => {\n            this.throwIfDisposed();\n            return this.privList.length;\n        };\n        this.onAdded = (addedCallback) => {\n            this.throwIfDisposed();\n            const subscriptionId = this.privSubscriptionIdCounter++;\n            this.privAddSubscriptions[subscriptionId] = addedCallback;\n            return {\n                detach: () => {\n                    delete this.privAddSubscriptions[subscriptionId];\n                    return Promise.resolve();\n                },\n            };\n        };\n        this.onRemoved = (removedCallback) => {\n            this.throwIfDisposed();\n            const subscriptionId = this.privSubscriptionIdCounter++;\n            this.privRemoveSubscriptions[subscriptionId] = removedCallback;\n            return {\n                detach: () => {\n                    delete this.privRemoveSubscriptions[subscriptionId];\n                    return Promise.resolve();\n                },\n            };\n        };\n        this.onDisposed = (disposedCallback) => {\n            this.throwIfDisposed();\n            const subscriptionId = this.privSubscriptionIdCounter++;\n            this.privDisposedSubscriptions[subscriptionId] = disposedCallback;\n            return {\n                detach: () => {\n                    delete this.privDisposedSubscriptions[subscriptionId];\n                    return Promise.resolve();\n                },\n            };\n        };\n        this.join = (seperator) => {\n            this.throwIfDisposed();\n            return this.privList.join(seperator);\n        };\n        this.toArray = () => {\n            const cloneCopy = Array();\n            this.privList.forEach((val) => {\n                cloneCopy.push(val);\n            });\n            return cloneCopy;\n        };\n        this.any = (callback) => {\n            this.throwIfDisposed();\n            if (callback) {\n                return this.where(callback).length() > 0;\n            }\n            else {\n                return this.length() > 0;\n            }\n        };\n        this.all = (callback) => {\n            this.throwIfDisposed();\n            return this.where(callback).length() === this.length();\n        };\n        this.forEach = (callback) => {\n            this.throwIfDisposed();\n            for (let i = 0; i < this.length(); i++) {\n                callback(this.privList[i], i);\n            }\n        };\n        this.select = (callback) => {\n            this.throwIfDisposed();\n            const selectList = [];\n            for (let i = 0; i < this.privList.length; i++) {\n                selectList.push(callback(this.privList[i], i));\n            }\n            return new List(selectList);\n        };\n        this.where = (callback) => {\n            this.throwIfDisposed();\n            const filteredList = new List();\n            for (let i = 0; i < this.privList.length; i++) {\n                if (callback(this.privList[i], i)) {\n                    filteredList.add(this.privList[i]);\n                }\n            }\n            return filteredList;\n        };\n        this.orderBy = (compareFn) => {\n            this.throwIfDisposed();\n            const clonedArray = this.toArray();\n            const orderedArray = clonedArray.sort(compareFn);\n            return new List(orderedArray);\n        };\n        this.orderByDesc = (compareFn) => {\n            this.throwIfDisposed();\n            return this.orderBy((a, b) => compareFn(b, a));\n        };\n        this.clone = () => {\n            this.throwIfDisposed();\n            return new List(this.toArray());\n        };\n        this.concat = (list) => {\n            this.throwIfDisposed();\n            return new List(this.privList.concat(list.toArray()));\n        };\n        this.concatArray = (array) => {\n            this.throwIfDisposed();\n            return new List(this.privList.concat(array));\n        };\n        this.isDisposed = () => {\n            return this.privList == null;\n        };\n        this.dispose = (reason) => {\n            if (!this.isDisposed()) {\n                this.privDisposeReason = reason;\n                this.privList = null;\n                this.privAddSubscriptions = null;\n                this.privRemoveSubscriptions = null;\n                this.triggerSubscriptions(this.privDisposedSubscriptions);\n            }\n        };\n        this.throwIfDisposed = () => {\n            if (this.isDisposed()) {\n                throw new ObjectDisposedError(\"List\", this.privDisposeReason);\n            }\n        };\n        this.triggerSubscriptions = (subscriptions) => {\n            if (subscriptions) {\n                for (const subscriptionId in subscriptions) {\n                    if (subscriptionId) {\n                        subscriptions[subscriptionId]();\n                    }\n                }\n            }\n        };\n        this.privList = [];\n        // copy the list rather than taking as is.\n        if (list) {\n            for (const item of list) {\n                this.privList.push(item);\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=List.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { InvalidOperationError, ObjectDisposedError } from \"./Error\";\nimport { List } from \"./List\";\nimport { Deferred, } from \"./Promise\";\nvar SubscriberType;\n(function (SubscriberType) {\n    SubscriberType[SubscriberType[\"Dequeue\"] = 0] = \"Dequeue\";\n    SubscriberType[SubscriberType[\"Peek\"] = 1] = \"Peek\";\n})(SubscriberType || (SubscriberType = {}));\nexport class Queue {\n    constructor(list) {\n        this.privPromiseStore = new List();\n        this.privIsDrainInProgress = false;\n        this.privIsDisposing = false;\n        this.privDisposeReason = null;\n        this.enqueue = (item) => {\n            this.throwIfDispose();\n            this.enqueueFromPromise(new Promise((resolve, reject) => { resolve(item); }));\n        };\n        this.enqueueFromPromise = (promise) => {\n            this.throwIfDispose();\n            promise.then((val) => {\n                this.privList.add(val);\n                /* tslint:disable:no-empty */\n            }, (error) => { });\n        };\n        this.dequeue = () => {\n            this.throwIfDispose();\n            const deferredSubscriber = new Deferred();\n            if (this.privSubscribers) {\n                this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Dequeue });\n                this.drain();\n            }\n            return deferredSubscriber.promise;\n        };\n        this.peek = () => {\n            this.throwIfDispose();\n            const deferredSubscriber = new Deferred();\n            const subs = this.privSubscribers;\n            if (subs) {\n                this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Peek });\n                this.drain();\n            }\n            return deferredSubscriber.promise;\n        };\n        this.length = () => {\n            this.throwIfDispose();\n            return this.privList.length();\n        };\n        this.isDisposed = () => {\n            return this.privSubscribers == null;\n        };\n        this.drain = () => {\n            if (!this.privIsDrainInProgress && !this.privIsDisposing) {\n                this.privIsDrainInProgress = true;\n                const subs = this.privSubscribers;\n                const lists = this.privList;\n                if (subs && lists) {\n                    while (lists.length() > 0 && subs.length() > 0 && !this.privIsDisposing) {\n                        const subscriber = subs.removeFirst();\n                        if (subscriber.type === SubscriberType.Peek) {\n                            subscriber.deferral.resolve(lists.first());\n                        }\n                        else {\n                            const dequeuedItem = lists.removeFirst();\n                            subscriber.deferral.resolve(dequeuedItem);\n                        }\n                    }\n                    // note: this block assumes cooperative multitasking, i.e.,\n                    // between the if-statement and the assignment there are no\n                    // thread switches.\n                    // Reason is that between the initial const = this.; and this\n                    // point there is the derral.resolve() operation that might have\n                    // caused recursive calls to the Queue, especially, calling\n                    // Dispose() on the queue alredy (which would reset the var\n                    // here to null!).\n                    // That should generally hold true for javascript...\n                    if (this.privSubscribers === subs) {\n                        this.privSubscribers = subs;\n                    }\n                    // note: this block assumes cooperative multitasking, i.e.,\n                    // between the if-statement and the assignment there are no\n                    // thread switches.\n                    // Reason is that between the initial const = this.; and this\n                    // point there is the derral.resolve() operation that might have\n                    // caused recursive calls to the Queue, especially, calling\n                    // Dispose() on the queue alredy (which would reset the var\n                    // here to null!).\n                    // That should generally hold true for javascript...\n                    if (this.privList === lists) {\n                        this.privList = lists;\n                    }\n                }\n                this.privIsDrainInProgress = false;\n            }\n        };\n        this.throwIfDispose = () => {\n            if (this.isDisposed()) {\n                if (this.privDisposeReason) {\n                    throw new InvalidOperationError(this.privDisposeReason);\n                }\n                throw new ObjectDisposedError(\"Queue\");\n            }\n            else if (this.privIsDisposing) {\n                throw new InvalidOperationError(\"Queue disposing\");\n            }\n        };\n        this.privList = list ? list : new List();\n        this.privDetachables = [];\n        this.privSubscribers = new List();\n        this.privDetachables.push(this.privList.onAdded(this.drain));\n    }\n    drainAndDispose(pendingItemProcessor, reason) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isDisposed() && !this.privIsDisposing) {\n                this.privDisposeReason = reason;\n                this.privIsDisposing = true;\n                const subs = this.privSubscribers;\n                if (subs) {\n                    while (subs.length() > 0) {\n                        const subscriber = subs.removeFirst();\n                        // TODO: this needs work (Resolve(null) instead?).\n                        subscriber.deferral.resolve(undefined);\n                        // subscriber.deferral.reject(\"Disposed\");\n                    }\n                    // note: this block assumes cooperative multitasking, i.e.,\n                    // between the if-statement and the assignment there are no\n                    // thread switches.\n                    // Reason is that between the initial const = this.; and this\n                    // point there is the derral.resolve() operation that might have\n                    // caused recursive calls to the Queue, especially, calling\n                    // Dispose() on the queue alredy (which would reset the var\n                    // here to null!).\n                    // That should generally hold true for javascript...\n                    if (this.privSubscribers === subs) {\n                        this.privSubscribers = subs;\n                    }\n                }\n                for (const detachable of this.privDetachables) {\n                    yield detachable.detach();\n                }\n                if (this.privPromiseStore.length() > 0 && pendingItemProcessor) {\n                    const promiseArray = [];\n                    this.privPromiseStore.toArray().forEach((wrapper) => {\n                        promiseArray.push(wrapper);\n                    });\n                    return Promise.all(promiseArray).finally(() => {\n                        this.privSubscribers = null;\n                        this.privList.forEach((item, index) => {\n                            pendingItemProcessor(item);\n                        });\n                        this.privList = null;\n                        return;\n                    }).then();\n                }\n                else {\n                    this.privSubscribers = null;\n                    this.privList = null;\n                }\n            }\n        });\n    }\n    dispose(reason) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.drainAndDispose(null, reason);\n        });\n    }\n}\n\n//# sourceMappingURL=Queue.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ForceDictationPropertyName, OutputFormatPropertyName, ServicePropertiesPropertyName } from \"../common.speech/Exports\";\nimport { Contracts } from \"./Contracts\";\nimport { OutputFormat, ProfanityOption, PropertyCollection, PropertyId, SpeechSynthesisOutputFormat, } from \"./Exports\";\n/**\n * Speech configuration.\n * @class SpeechConfig\n */\nexport class SpeechConfig {\n    /**\n     * Creates and initializes an instance.\n     * @constructor\n     */\n    constructor() { }\n    /**\n     * Static instance of SpeechConfig returned by passing subscriptionKey and service region.\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\n     * @member SpeechConfig.fromSubscription\n     * @function\n     * @public\n     * @param {string} subscriptionKey - The subscription key.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechConfig} The speech factory\n     */\n    static fromSubscription(subscriptionKey, region) {\n        Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Region, region);\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_IntentRegion, region);\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        return speechImpl;\n    }\n    /**\n     * Creates an instance of the speech config with specified endpoint and subscription key.\n     * This method is intended only for users who use a non-standard service endpoint or parameters.\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\n     * Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.\n     * For example, if language is defined in the uri as query parameter \"language=de-DE\", and also set by\n     *              SpeechConfig.speechRecognitionLanguage = \"en-US\", the language setting in uri takes precedence,\n     *              and the effective language is \"de-DE\". Only the parameters that are not specified in the\n     *              endpoint URL can be set by other APIs.\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\n     *       fromEndpoint method, and then set authorizationToken=\"token\" on the created SpeechConfig instance to\n     *       use the authorization token.\n     * @member SpeechConfig.fromEndpoint\n     * @function\n     * @public\n     * @param {URL} endpoint - The service endpoint to connect to.\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n    static fromEndpoint(endpoint, subscriptionKey) {\n        Contracts.throwIfNull(endpoint, \"endpoint\");\n        const speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\n        if (undefined !== subscriptionKey) {\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        }\n        return speechImpl;\n    }\n    /**\n     * Creates an instance of the speech config with specified host and subscription key.\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\n     * Note: Added in version 1.9.0.\n     * @member SpeechConfig.fromHost\n     * @function\n     * @public\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n    static fromHost(hostName, subscriptionKey) {\n        Contracts.throwIfNull(hostName, \"hostName\");\n        const speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\n        if (undefined !== subscriptionKey) {\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\n        }\n        return speechImpl;\n    }\n    /**\n     * Creates an instance of the speech factory with specified initial authorization token and region.\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\n     *       expires, the caller needs to refresh it by calling this setter with a new valid token.\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key in case you want\n     *       to use the Intent recognizer. As configuration values are copied when creating a new recognizer,\n     *       the new token value will not apply to recognizers that have already been created. For recognizers\n     *       that have been created before, you need to set authorization token of the corresponding recognizer\n     *       to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\n     * @member SpeechConfig.fromAuthorizationToken\n     * @function\n     * @public\n     * @param {string} authorizationToken - The initial authorization token.\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\n     * @returns {SpeechConfig} A speech factory instance.\n     */\n    static fromAuthorizationToken(authorizationToken, region) {\n        Contracts.throwIfNull(authorizationToken, \"authorizationToken\");\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\n        const speechImpl = new SpeechConfigImpl();\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Region, region);\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_IntentRegion, region);\n        speechImpl.authorizationToken = authorizationToken;\n        return speechImpl;\n    }\n    /**\n     * Closes the configuration.\n     * @member SpeechConfig.prototype.close\n     * @function\n     * @public\n     */\n    /* tslint:disable:no-empty */\n    close() { }\n}\n/**\n * @public\n * @class SpeechConfigImpl\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class SpeechConfigImpl extends SpeechConfig {\n    constructor() {\n        super();\n        this.privProperties = new PropertyCollection();\n        this.speechRecognitionLanguage = \"en-US\"; // Should we have a default?\n        this.outputFormat = OutputFormat.Simple;\n    }\n    get properties() {\n        return this.privProperties;\n    }\n    get endPoint() {\n        return new URL(this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Endpoint));\n    }\n    get subscriptionKey() {\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Key);\n    }\n    get region() {\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Region);\n    }\n    get authorizationToken() {\n        return this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\n    }\n    set authorizationToken(value) {\n        this.privProperties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\n    }\n    get speechRecognitionLanguage() {\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    set speechRecognitionLanguage(value) {\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_RecoLanguage, value);\n    }\n    get autoDetectSourceLanguages() {\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages);\n    }\n    set autoDetectSourceLanguages(value) {\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, value);\n    }\n    get outputFormat() {\n        return OutputFormat[this.privProperties.getProperty(OutputFormatPropertyName, undefined)];\n    }\n    set outputFormat(value) {\n        this.privProperties.setProperty(OutputFormatPropertyName, OutputFormat[value]);\n    }\n    get endpointId() {\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_EndpointId);\n    }\n    set endpointId(value) {\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_EndpointId, value);\n    }\n    setProperty(name, value) {\n        Contracts.throwIfNull(value, \"value\");\n        this.privProperties.setProperty(name, value);\n    }\n    getProperty(name, def) {\n        return this.privProperties.getProperty(name, def);\n    }\n    setProxy(proxyHostName, proxyPort, proxyUserName, proxyPassword) {\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName);\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPort], proxyPort);\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName);\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword);\n    }\n    setServiceProperty(name, value, channel) {\n        const currentProperties = JSON.parse(this.privProperties.getProperty(ServicePropertiesPropertyName, \"{}\"));\n        currentProperties[name] = value;\n        this.privProperties.setProperty(ServicePropertiesPropertyName, JSON.stringify(currentProperties));\n    }\n    setProfanity(profanity) {\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_ProfanityOption, ProfanityOption[profanity]);\n    }\n    enableAudioLogging() {\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\n    }\n    requestWordLevelTimestamps() {\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\n    }\n    enableDictation() {\n        this.privProperties.setProperty(ForceDictationPropertyName, \"true\");\n    }\n    clone() {\n        const ret = new SpeechConfigImpl();\n        ret.privProperties = this.privProperties.clone();\n        return ret;\n    }\n    get speechSynthesisLanguage() {\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage);\n    }\n    set speechSynthesisLanguage(language) {\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthLanguage, language);\n    }\n    get speechSynthesisVoiceName() {\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice);\n    }\n    set speechSynthesisVoiceName(voice) {\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthVoice, voice);\n    }\n    get speechSynthesisOutputFormat() {\n        return SpeechSynthesisOutputFormat[this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)];\n    }\n    set speechSynthesisOutputFormat(format) {\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, SpeechSynthesisOutputFormat[format]);\n    }\n}\n\n//# sourceMappingURL=SpeechConfig.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Represents the JSON used in the synthesis.context message sent to the speech service.\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\n */\nexport class SynthesisContext {\n    constructor(speechSynthesizer) {\n        this.privContext = {};\n        this.privSpeechSynthesizer = speechSynthesizer;\n    }\n    /**\n     * Adds a section to the synthesis.context object.\n     * @param sectionName Name of the section to add.\n     * @param value JSON serializable object that represents the value.\n     */\n    setSection(sectionName, value) {\n        this.privContext[sectionName] = value;\n    }\n    /**\n     * Sets the audio output format for synthesis context generation.\n     * @param format {AudioOutputFormatImpl} the output format\n     */\n    set audioOutputFormat(format) {\n        this.privAudioOutputFormat = format;\n    }\n    toJSON() {\n        const synthesisSection = this.buildSynthesisContext();\n        this.setSection(\"synthesis\", synthesisSection);\n        return JSON.stringify(this.privContext);\n    }\n    buildSynthesisContext() {\n        return {\n            audio: {\n                metadataOptions: {\n                    sentenceBoundaryEnabled: false,\n                    wordBoundaryEnabled: (!!this.privSpeechSynthesizer.wordBoundary),\n                },\n                outputFormat: this.privAudioOutputFormat.requestAudioFormatString,\n            },\n            language: {\n                autoDetection: this.privSpeechSynthesizer.autoDetectSourceLanguage\n            }\n        };\n    }\n}\n\n//# sourceMappingURL=SynthesisContext.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Represents the JSON used in the agent.config message sent to the speech service.\n */\nexport class AgentConfig {\n    toJsonString() {\n        return JSON.stringify(this.iPrivConfig);\n    }\n    get() {\n        return this.iPrivConfig;\n    }\n    /**\n     * Setter for the agent.config object.\n     * @param value a JSON serializable object.\n     */\n    set(value) {\n        this.iPrivConfig = value;\n    }\n}\n\n//# sourceMappingURL=AgentConfig.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class SynthesisAudioMetadata {\n    constructor(json) {\n        this.privSynthesisAudioMetadata = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new SynthesisAudioMetadata(json);\n    }\n    get Metadata() {\n        return this.privSynthesisAudioMetadata.Metadata;\n    }\n}\n\n//# sourceMappingURL=SynthesisAudioMetadata.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Defines contents of speech synthesis word boundary event.\n * @class SpeechSynthesisWordBoundaryEventArgs\n * Added in version 1.11.0\n */\nexport class SpeechSynthesisWordBoundaryEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {number} audioOffset - The audio offset.\n     * @param {string} text - The text.\n     * @param {number} wordLength - The length of the word.\n     * @param {number} textOffset - The text offset.\n     */\n    constructor(audioOffset, text, wordLength, textOffset) {\n        this.privAudioOffset = audioOffset;\n        this.privText = text;\n        this.privWordLength = wordLength;\n        this.privTextOffset = textOffset;\n    }\n    /**\n     * Specifies the audio offset.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.audioOffset\n     * @function\n     * @public\n     * @returns {number} the audio offset.\n     */\n    get audioOffset() {\n        return this.privAudioOffset;\n    }\n    /**\n     * Specifies the text of the word boundary event.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.text\n     * @function\n     * @public\n     * @returns {string} the text.\n     */\n    get text() {\n        return this.privText;\n    }\n    /**\n     * Specifies the word length\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.wordLength\n     * @function\n     * @public\n     * @returns {number} the word length\n     */\n    get wordLength() {\n        return this.privWordLength;\n    }\n    /**\n     * Specifies the text offset.\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.textOffset\n     * @function\n     * @public\n     * @returns {number} the text offset.\n     */\n    get textOffset() {\n        return this.privTextOffset;\n    }\n}\n\n//# sourceMappingURL=SpeechSynthesisWordBoundaryEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * An abstract base class that defines callback methods (write() and close()) for\n * custom audio output streams).\n * @class PushAudioOutputStreamCallback\n */\nexport class PushAudioOutputStreamCallback {\n}\n\n//# sourceMappingURL=PushAudioOutputStreamCallback.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Defines result of speech recognition.\n * @class RecognitionResult\n */\nexport class RecognitionResult {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {string} resultId - The result id.\n     * @param {ResultReason} reason - The reason.\n     * @param {string} text - The recognized text.\n     * @param {number} duration - The duration.\n     * @param {number} offset - The offset into the stream.\n     * @param {string} language - Primary Language detected, if provided.\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n     * @param {string} errorDetails - Error details, if provided.\n     * @param {string} json - Additional Json, if provided.\n     * @param {PropertyCollection} properties - Additional properties, if provided.\n     */\n    constructor(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties) {\n        this.privResultId = resultId;\n        this.privReason = reason;\n        this.privText = text;\n        this.privDuration = duration;\n        this.privOffset = offset;\n        this.privLanguage = language;\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\n        this.privErrorDetails = errorDetails;\n        this.privJson = json;\n        this.privProperties = properties;\n    }\n    /**\n     * Specifies the result identifier.\n     * @member RecognitionResult.prototype.resultId\n     * @function\n     * @public\n     * @returns {string} Specifies the result identifier.\n     */\n    get resultId() {\n        return this.privResultId;\n    }\n    /**\n     * Specifies status of the result.\n     * @member RecognitionResult.prototype.reason\n     * @function\n     * @public\n     * @returns {ResultReason} Specifies status of the result.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * Presents the recognized text in the result.\n     * @member RecognitionResult.prototype.text\n     * @function\n     * @public\n     * @returns {string} Presents the recognized text in the result.\n     */\n    get text() {\n        return this.privText;\n    }\n    /**\n     * Duration of recognized speech in 100 nano second incements.\n     * @member RecognitionResult.prototype.duration\n     * @function\n     * @public\n     * @returns {number} Duration of recognized speech in 100 nano second incements.\n     */\n    get duration() {\n        return this.privDuration;\n    }\n    /**\n     * Offset of recognized speech in 100 nano second incements.\n     * @member RecognitionResult.prototype.offset\n     * @function\n     * @public\n     * @returns {number} Offset of recognized speech in 100 nano second incements.\n     */\n    get offset() {\n        return this.privOffset;\n    }\n    /**\n     * Primary Language detected.\n     * @member RecognitionResult.prototype.language\n     * @function\n     * @public\n     * @returns {string} language detected.\n     */\n    get language() {\n        return this.privLanguage;\n    }\n    /**\n     * Primary Language detection confidence (Unknown, Low, Medium, High).\n     * @member RecognitionResult.prototype.languageDetectionConfidence\n     * @function\n     * @public\n     * @returns {string} detection confidence strength.\n     */\n    get languageDetectionConfidence() {\n        return this.privLanguageDetectionConfidence;\n    }\n    /**\n     * In case of an unsuccessful recognition, provides details of the occurred error.\n     * @member RecognitionResult.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} a brief description of an error.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n    /**\n     * A string containing Json serialized recognition result as it was received from the service.\n     * @member RecognitionResult.prototype.json\n     * @function\n     * @private\n     * @returns {string} Json serialized representation of the result.\n     */\n    get json() {\n        return this.privJson;\n    }\n    /**\n     *  The set of properties exposed in the result.\n     * @member RecognitionResult.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The set of properties exposed in the result.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n}\n\n//# sourceMappingURL=RecognitionResult.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { CancellationEventArgsBase, } from \"./CancellationEventArgsBase\";\nexport class SpeechRecognitionCanceledEventArgs extends CancellationEventArgsBase {\n}\n\n//# sourceMappingURL=SpeechRecognitionCanceledEventArgs.js.map\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Profanity option.\n * Added in version 1.7.0.\n */\nexport var ProfanityOption;\n(function (ProfanityOption) {\n    ProfanityOption[ProfanityOption[\"Masked\"] = 0] = \"Masked\";\n    ProfanityOption[ProfanityOption[\"Removed\"] = 1] = \"Removed\";\n    ProfanityOption[ProfanityOption[\"Raw\"] = 2] = \"Raw\";\n})(ProfanityOption || (ProfanityOption = {}));\n\n//# sourceMappingURL=ProfanityOption.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CognitiveSubscriptionKeyAuthentication, CognitiveTokenAuthentication, Context, OS, ServiceRecognizerBase, SpeechServiceConfig, } from \"../common.speech/Exports\";\nimport { Deferred, marshalPromiseToCallbacks } from \"../common/Exports\";\nimport { Contracts } from \"./Contracts\";\nimport { AudioConfig, PropertyId, } from \"./Exports\";\n/**\n * Defines the base class Recognizer which mainly contains common event handlers.\n * @class Recognizer\n */\nexport class Recognizer {\n    /**\n     * Creates and initializes an instance of a Recognizer\n     * @constructor\n     * @param {AudioConfig} audioInput - An optional audio input stream associated with the recognizer\n     */\n    constructor(audioConfig, properties, connectionFactory) {\n        this.audioConfig = (audioConfig !== undefined) ? audioConfig : AudioConfig.fromDefaultMicrophoneInput();\n        this.privDisposed = false;\n        this.privProperties = properties.clone();\n        this.privConnectionFactory = connectionFactory;\n        this.implCommonRecognizerSetup();\n    }\n    /**\n     * Dispose of associated resources.\n     * @member Recognizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts.throwIfDisposed(this.privDisposed);\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * @Internal\n     * Internal data member to support fromRecognizer* pattern methods on other classes.\n     * Do not use externally, object returned will change without warning or notice.\n     */\n    get internalData() {\n        return this.privReco;\n    }\n    /**\n     * This method performs cleanup of resources.\n     * The Boolean parameter disposing indicates whether the method is called\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\n     * Derived classes should override this method to dispose resource if needed.\n     * @member Recognizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - Flag to request disposal.\n     */\n    dispose(disposing) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.privDisposed) {\n                return;\n            }\n            this.privDisposed = true;\n            if (disposing) {\n                if (this.privReco) {\n                    yield this.privReco.audioSource.turnOff();\n                    yield this.privReco.dispose();\n                }\n            }\n        });\n    }\n    /**\n     * This method returns the current state of the telemetry setting.\n     * @member Recognizer.prototype.telemetryEnabled\n     * @function\n     * @public\n     * @returns true if the telemetry is enabled, false otherwise.\n     */\n    static get telemetryEnabled() {\n        return ServiceRecognizerBase.telemetryDataEnabled;\n    }\n    /**\n     * This method globally enables or disables telemetry.\n     * @member Recognizer.prototype.enableTelemetry\n     * @function\n     * @public\n     * @param enabled - Global setting for telemetry collection.\n     * If set to true, telemetry information like microphone errors,\n     * recognition errors are collected and sent to Microsoft.\n     * If set to false, no telemetry is sent to Microsoft.\n     */\n    /* tslint:disable:member-ordering */\n    static enableTelemetry(enabled) {\n        ServiceRecognizerBase.telemetryDataEnabled = enabled;\n    }\n    // Does the generic recognizer setup that is common across all recognizer types.\n    implCommonRecognizerSetup() {\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\n        let osName = \"unknown\";\n        let osVersion = \"unknown\";\n        if (typeof navigator !== \"undefined\") {\n            osPlatform = osPlatform + \"/\" + navigator.platform;\n            osName = navigator.userAgent;\n            osVersion = navigator.appVersion;\n        }\n        const recognizerConfig = this.createRecognizerConfig(new SpeechServiceConfig(new Context(new OS(osPlatform, osName, osVersion))));\n        this.privReco = this.createServiceRecognizer(Recognizer.getAuthFromProperties(this.privProperties), this.privConnectionFactory, this.audioConfig, recognizerConfig);\n    }\n    recognizeOnceAsyncImpl(recognitionMode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            Contracts.throwIfDisposed(this.privDisposed);\n            const ret = new Deferred();\n            yield this.implRecognizerStop();\n            yield this.privReco.recognize(recognitionMode, ret.resolve, ret.reject);\n            const result = yield ret.promise;\n            yield this.implRecognizerStop();\n            return result;\n        });\n    }\n    startContinuousRecognitionAsyncImpl(recognitionMode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            Contracts.throwIfDisposed(this.privDisposed);\n            yield this.implRecognizerStop();\n            yield this.privReco.recognize(recognitionMode, undefined, undefined);\n        });\n    }\n    stopContinuousRecognitionAsyncImpl() {\n        return __awaiter(this, void 0, void 0, function* () {\n            Contracts.throwIfDisposed(this.privDisposed);\n            yield this.implRecognizerStop();\n        });\n    }\n    implRecognizerStop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.privReco) {\n                yield this.privReco.stopRecognizing();\n            }\n            return;\n        });\n    }\n    static getAuthFromProperties(properties) {\n        const subscriptionKey = properties.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\n        const authentication = (subscriptionKey && subscriptionKey !== \"\") ?\n            new CognitiveSubscriptionKeyAuthentication(subscriptionKey) :\n            new CognitiveTokenAuthentication((authFetchEventId) => {\n                const authorizationToken = properties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\n                return Promise.resolve(authorizationToken);\n            }, (authFetchEventId) => {\n                const authorizationToken = properties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\n                return Promise.resolve(authorizationToken);\n            });\n        return authentication;\n    }\n}\n\n//# sourceMappingURL=Recognizer.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ProxyInfo, WebsocketConnection, } from \"../common.browser/Exports\";\nimport { ForceDictationPropertyName, OutputFormatPropertyName, } from \"../common.speech/Exports\";\nimport { OutputFormat, PropertyId } from \"../sdk/Exports\";\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase\";\nimport { RecognitionMode, WebsocketMessageFormatter } from \"./Exports\";\nimport { QueryParameterNames } from \"./QueryParameterNames\";\nexport class SpeechConnectionFactory extends ConnectionFactoryBase {\n    constructor() {\n        super(...arguments);\n        this.interactiveRelativeUri = \"/speech/recognition/interactive/cognitiveservices/v1\";\n        this.conversationRelativeUri = \"/speech/recognition/conversation/cognitiveservices/v1\";\n        this.dictationRelativeUri = \"/speech/recognition/dictation/cognitiveservices/v1\";\n        this.create = (config, authInfo, connectionId) => {\n            let endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\n            const region = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, undefined);\n            const hostSuffix = (region && region.toLowerCase().startsWith(\"china\")) ? \".azure.cn\" : \".microsoft.com\";\n            const host = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".stt.speech\" + hostSuffix);\n            const queryParams = {};\n            const endpointId = config.parameters.getProperty(PropertyId.SpeechServiceConnection_EndpointId, undefined);\n            const language = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\n            if (endpointId) {\n                if (!endpoint || endpoint.search(QueryParameterNames.DeploymentIdParamName) === -1) {\n                    queryParams[QueryParameterNames.DeploymentIdParamName] = endpointId;\n                }\n            }\n            else if (language) {\n                if (!endpoint || endpoint.search(QueryParameterNames.LanguageParamName) === -1) {\n                    queryParams[QueryParameterNames.LanguageParamName] = language;\n                }\n            }\n            if (!endpoint || endpoint.search(QueryParameterNames.FormatParamName) === -1) {\n                queryParams[QueryParameterNames.FormatParamName] = config.parameters.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]).toLowerCase();\n            }\n            if (config.autoDetectSourceLanguages !== undefined) {\n                queryParams[QueryParameterNames.EnableLanguageID] = \"true\";\n            }\n            this.setCommonUrlParams(config, queryParams, endpoint);\n            if (!endpoint) {\n                switch (config.recognitionMode) {\n                    case RecognitionMode.Conversation:\n                        if (config.parameters.getProperty(ForceDictationPropertyName, \"false\") === \"true\") {\n                            endpoint = host + this.dictationRelativeUri;\n                        }\n                        else {\n                            endpoint = host + this.conversationRelativeUri;\n                        }\n                        break;\n                    case RecognitionMode.Dictation:\n                        endpoint = host + this.dictationRelativeUri;\n                        break;\n                    default:\n                        endpoint = host + this.interactiveRelativeUri; // default is interactive\n                        break;\n                }\n            }\n            const headers = {};\n            if (authInfo.token !== undefined && authInfo.token !== \"\") {\n                headers[authInfo.headerName] = authInfo.token;\n            }\n            headers[QueryParameterNames.ConnectionIdHeader] = connectionId;\n            config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\n            return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), connectionId);\n        };\n    }\n}\n\n//# sourceMappingURL=SpeechConnectionFactory.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationErrorCode, OutputFormat, PropertyCollection, PropertyId, ResultReason, SpeechRecognitionCanceledEventArgs, SpeechRecognitionEventArgs, SpeechRecognitionResult, } from \"../sdk/Exports\";\nimport { CancellationErrorCodePropertyName, DetailedSpeechPhrase, EnumTranslation, OutputFormatPropertyName, RecognitionStatus, ServiceRecognizerBase, SimpleSpeechPhrase, SpeechHypothesis, } from \"./Exports\";\n// tslint:disable-next-line:max-classes-per-file\nexport class SpeechServiceRecognizer extends ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer);\n        this.privSpeechRecognizer = speechRecognizer;\n        if (recognizerConfig.autoDetectSourceLanguages !== undefined) {\n            const sourceLanguages = recognizerConfig.autoDetectSourceLanguages.split(\",\");\n            this.privSpeechContext.setSection(\"languageId\", {\n                languages: sourceLanguages,\n                onSuccess: { action: \"Recognize\" },\n                onUnknown: { action: \"None\" }\n            });\n            this.privSpeechContext.setSection(\"phraseOutput\", {\n                interimResults: {\n                    resultType: \"Auto\"\n                },\n                phraseResults: {\n                    resultType: \"Always\"\n                }\n            });\n        }\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let result;\n            const resultProps = new PropertyCollection();\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n            let processed = false;\n            switch (connectionMessage.path.toLowerCase()) {\n                case \"speech.hypothesis\":\n                case \"speech.fragment\":\n                    const hypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody);\n                    const offset = hypothesis.Offset + this.privRequestSession.currentTurnAudioOffset;\n                    result = new SpeechRecognitionResult(this.privRequestSession.requestId, ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, offset, hypothesis.Language, hypothesis.LanguageDetectionConfidence, undefined, // Speaker Id\n                    undefined, connectionMessage.textBody, resultProps);\n                    this.privRequestSession.onHypothesis(offset);\n                    const ev = new SpeechRecognitionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\n                    if (!!this.privSpeechRecognizer.recognizing) {\n                        try {\n                            this.privSpeechRecognizer.recognizing(this.privSpeechRecognizer, ev);\n                            /* tslint:disable:no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                    processed = true;\n                    break;\n                case \"speech.phrase\":\n                    const simple = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\n                    const resultReason = EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\n                    this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + simple.Offset + simple.Duration);\n                    if (ResultReason.Canceled === resultReason) {\n                        const cancelReason = EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\n                        yield this.cancelRecognitionLocal(cancelReason, EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus), undefined);\n                    }\n                    else {\n                        if (!(this.privRequestSession.isSpeechEnded && resultReason === ResultReason.NoMatch && simple.RecognitionStatus !== RecognitionStatus.InitialSilenceTimeout)) {\n                            if (this.privRecognizerConfig.parameters.getProperty(OutputFormatPropertyName) === OutputFormat[OutputFormat.Simple]) {\n                                result = new SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, simple.DisplayText, simple.Duration, simple.Offset + this.privRequestSession.currentTurnAudioOffset, simple.Language, simple.LanguageDetectionConfidence, undefined, // Speaker Id\n                                undefined, connectionMessage.textBody, resultProps);\n                            }\n                            else {\n                                const detailed = DetailedSpeechPhrase.fromJSON(connectionMessage.textBody);\n                                result = new SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, detailed.RecognitionStatus === RecognitionStatus.Success ? detailed.NBest[0].Display : undefined, detailed.Duration, detailed.Offset + this.privRequestSession.currentTurnAudioOffset, detailed.Language, detailed.LanguageDetectionConfidence, undefined, // Speaker Id\n                                undefined, connectionMessage.textBody, resultProps);\n                            }\n                            const event = new SpeechRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                            if (!!this.privSpeechRecognizer.recognized) {\n                                try {\n                                    this.privSpeechRecognizer.recognized(this.privSpeechRecognizer, event);\n                                    /* tslint:disable:no-empty */\n                                }\n                                catch (error) {\n                                    // Not going to let errors in the event handler\n                                    // trip things up.\n                                }\n                            }\n                        }\n                        if (!!this.privSuccessCallback) {\n                            try {\n                                this.privSuccessCallback(result);\n                            }\n                            catch (e) {\n                                if (!!this.privErrorCallback) {\n                                    this.privErrorCallback(e);\n                                }\n                            }\n                            // Only invoke the call back once.\n                            // and if it's successful don't invoke the\n                            // error after that.\n                            this.privSuccessCallback = undefined;\n                            this.privErrorCallback = undefined;\n                        }\n                    }\n                    processed = true;\n                    break;\n                default:\n                    break;\n            }\n            return processed;\n        });\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new PropertyCollection();\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\n        if (!!this.privSpeechRecognizer.canceled) {\n            const cancelEvent = new SpeechRecognitionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n            try {\n                this.privSpeechRecognizer.canceled(this.privSpeechRecognizer, cancelEvent);\n                /* tslint:disable:no-empty */\n            }\n            catch (_a) { }\n        }\n        if (!!this.privSuccessCallback) {\n            const result = new SpeechRecognitionResult(requestId, ResultReason.Canceled, undefined, // Text\n            undefined, // Duration\n            undefined, // Offset\n            undefined, // Language\n            undefined, // Language Detection Confidence\n            undefined, // Speaker Id\n            error, undefined, // Json\n            properties);\n            try {\n                this.privSuccessCallback(result);\n                this.privSuccessCallback = undefined;\n                /* tslint:disable:no-empty */\n            }\n            catch (_b) { }\n        }\n    }\n}\n\n//# sourceMappingURL=SpeechServiceRecognizer.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// response\nexport class IntentResponse {\n    constructor(json) {\n        this.privIntentResponse = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new IntentResponse(json);\n    }\n    get query() {\n        return this.privIntentResponse.query;\n    }\n    get topScoringIntent() {\n        return this.privIntentResponse.topScoringIntent;\n    }\n    get entities() {\n        return this.privIntentResponse.entities;\n    }\n}\n\n//# sourceMappingURL=IntentResponse.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { IntentRecognitionEventArgs } from \"./Exports\";\n/**\n * Define payload of intent recognition canceled result events.\n * @class IntentRecognitionCanceledEventArgs\n */\nexport class IntentRecognitionCanceledEventArgs extends IntentRecognitionEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {CancellationReason} result - The result of the intent recognition.\n     * @param {string} offset - The offset.\n     * @param {IntentRecognitionResult} sessionId - The session id.\n     */\n    constructor(reason, errorDetails, errorCode, result, offset, sessionId) {\n        super(result, offset, sessionId);\n        this.privReason = reason;\n        this.privErrorDetails = errorDetails;\n        this.privErrorCode = errorCode;\n    }\n    /**\n     * The reason the recognition was canceled.\n     * @member IntentRecognitionCanceledEventArgs.prototype.reason\n     * @function\n     * @public\n     * @returns {CancellationReason} Specifies the reason canceled.\n     */\n    get reason() {\n        return this.privReason;\n    }\n    /**\n     * The error code in case of an unsuccessful recognition.\n     * Added in version 1.1.0.\n     * @return An error code that represents the error reason.\n     */\n    get errorCode() {\n        return this.privErrorCode;\n    }\n    /**\n     * In case of an unsuccessful recognition, provides details of the occurred error.\n     * @member IntentRecognitionCanceledEventArgs.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} A String that represents the error details.\n     */\n    get errorDetails() {\n        return this.privErrorDetails;\n    }\n}\n\n//# sourceMappingURL=IntentRecognitionCanceledEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { TranslationStatus } from \"../TranslationStatus\";\nexport class TranslationHypothesis {\n    constructor(json) {\n        this.privTranslationHypothesis = JSON.parse(json);\n        this.privTranslationHypothesis.Translation.TranslationStatus = TranslationStatus[this.privTranslationHypothesis.Translation.TranslationStatus];\n    }\n    static fromJSON(json) {\n        return new TranslationHypothesis(json);\n    }\n    get Duration() {\n        return this.privTranslationHypothesis.Duration;\n    }\n    get Offset() {\n        return this.privTranslationHypothesis.Offset;\n    }\n    get Text() {\n        return this.privTranslationHypothesis.Text;\n    }\n    get Translation() {\n        return this.privTranslationHypothesis.Translation;\n    }\n}\n\n//# sourceMappingURL=TranslationHypothesis.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { SynthesisStatus } from \"../Exports\";\nexport class TranslationSynthesisEnd {\n    constructor(json) {\n        this.privSynthesisEnd = JSON.parse(json);\n        this.privSynthesisEnd.SynthesisStatus = SynthesisStatus[this.privSynthesisEnd.SynthesisStatus];\n    }\n    static fromJSON(json) {\n        return new TranslationSynthesisEnd(json);\n    }\n    get SynthesisStatus() {\n        return this.privSynthesisEnd.SynthesisStatus;\n    }\n    get FailureReason() {\n        return this.privSynthesisEnd.FailureReason;\n    }\n}\n\n//# sourceMappingURL=TranslationSynthesisEnd.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { PropertyCollection } from \"./Exports\";\n/**\n * Represents collection of parameters and their values.\n * @class Translation\n */\nexport class Translations {\n    constructor() {\n        // Use an PropertyCollection internally, just wrapping it to hide the | enum syntax it has.\n        this.privMap = new PropertyCollection();\n    }\n    /**\n     * Returns the parameter value in type String. The parameter must have the same type as String.\n     * Currently only String, int and bool are allowed.\n     * If the name is not available, the specified defaultValue is returned.\n     * @member Translation.prototype.get\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} def - The default value which is returned if the parameter is not available in the collection.\n     * @returns {string} value of the parameter.\n     */\n    get(key, def) {\n        return this.privMap.getProperty(key, def);\n    }\n    /**\n     * Sets the String value of the parameter specified by name.\n     * @member Translation.prototype.set\n     * @function\n     * @public\n     * @param {string} key - The parameter name.\n     * @param {string} value - The value of the parameter.\n     */\n    set(key, value) {\n        this.privMap.setProperty(key, value);\n    }\n}\n\n//# sourceMappingURL=Translations.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { CancellationEventArgsBase, } from \"./CancellationEventArgsBase\";\n/**\n * Defines content of a RecognitionErrorEvent.\n * @class ConversationTranscriptionCanceledEventArgs\n */\nexport class ConversationTranscriptionCanceledEventArgs extends CancellationEventArgsBase {\n}\n\n//# sourceMappingURL=ConversationTranscriptionCanceledEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ProxyInfo, WebsocketConnection, } from \"../common.browser/Exports\";\nimport { PropertyId } from \"../sdk/Exports\";\nimport { WebsocketMessageFormatter } from \"./Exports\";\nimport { QueryParameterNames } from \"./QueryParameterNames\";\nexport class SpeechSynthesisConnectionFactory {\n    constructor() {\n        this.synthesisUri = \"/cognitiveservices/websocket/v1\";\n        this.create = (config, authInfo, connectionId) => {\n            let endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\n            const region = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, undefined);\n            const hostSuffix = (region && region.toLowerCase().startsWith(\"china\")) ? \".azure.cn\" : \".microsoft.com\";\n            const host = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".tts.speech\" + hostSuffix);\n            const queryParams = {};\n            if (!endpoint) {\n                endpoint = host + this.synthesisUri;\n            }\n            const headers = {};\n            if (authInfo.token !== undefined && authInfo.token !== \"\") {\n                headers[authInfo.headerName] = authInfo.token;\n            }\n            headers[QueryParameterNames.ConnectionIdHeader] = connectionId;\n            config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\n            return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromParameters(config.parameters), connectionId);\n        };\n    }\n}\n\n//# sourceMappingURL=SpeechSynthesisConnectionFactory.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Context, SpeechServiceConfig } from \"./Exports\";\nexport var SynthesisServiceType;\n(function (SynthesisServiceType) {\n    SynthesisServiceType[SynthesisServiceType[\"Standard\"] = 0] = \"Standard\";\n    SynthesisServiceType[SynthesisServiceType[\"Custom\"] = 1] = \"Custom\";\n})(SynthesisServiceType || (SynthesisServiceType = {}));\nexport class SynthesizerConfig {\n    constructor(speechServiceConfig, parameters) {\n        this.privSynthesisServiceType = SynthesisServiceType.Standard;\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new SpeechServiceConfig(new Context(null));\n        this.privParameters = parameters;\n    }\n    get parameters() {\n        return this.privParameters;\n    }\n    get synthesisServiceType() {\n        return this.privSynthesisServiceType;\n    }\n    set synthesisServiceType(value) {\n        this.privSynthesisServiceType = value;\n    }\n    get SpeechServiceConfig() {\n        return this.privSpeechServiceConfig;\n    }\n}\n\n//# sourceMappingURL=SynthesizerConfig.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { EventType, PlatformEvent } from \"../common/Exports\";\nexport class SpeechSynthesisEvent extends PlatformEvent {\n    constructor(eventName, requestId, eventType = EventType.Info) {\n        super(eventName, eventType);\n        this.privRequestId = requestId;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class SynthesisTriggeredEvent extends SpeechSynthesisEvent {\n    constructor(requestId, sessionAudioDestinationId, turnAudioDestinationId) {\n        super(\"SynthesisTriggeredEvent\", requestId);\n        this.privSessionAudioDestinationId = sessionAudioDestinationId;\n        this.privTurnAudioDestinationId = turnAudioDestinationId;\n    }\n    get audioSessionDestinationId() {\n        return this.privSessionAudioDestinationId;\n    }\n    get audioTurnDestinationId() {\n        return this.privTurnAudioDestinationId;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class ConnectingToSynthesisServiceEvent extends SpeechSynthesisEvent {\n    constructor(requestId, authFetchEventId) {\n        super(\"ConnectingToSynthesisServiceEvent\", requestId);\n        this.privAuthFetchEventId = authFetchEventId;\n    }\n    get authFetchEventId() {\n        return this.privAuthFetchEventId;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class SynthesisStartedEvent extends SpeechSynthesisEvent {\n    constructor(requestId, authFetchEventId) {\n        super(\"SynthesisStartedEvent\", requestId);\n        this.privAuthFetchEventId = authFetchEventId;\n    }\n    get authFetchEventId() {\n        return this.privAuthFetchEventId;\n    }\n}\n\n//# sourceMappingURL=SynthesisEvents.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createNoDashGuid, Deferred, Events } from \"../common/Exports\";\nimport { PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\nimport { SynthesisAdapterBase } from \"./SynthesisAdapterBase\";\nimport { ConnectingToSynthesisServiceEvent, SynthesisStartedEvent, SynthesisTriggeredEvent, } from \"./SynthesisEvents\";\nexport class SynthesisTurn {\n    constructor() {\n        this.privIsDisposed = false;\n        this.privIsSynthesizing = false;\n        this.privIsSynthesisEnded = false;\n        this.privBytesReceived = 0;\n        this.privInTurn = false;\n        this.privTextOffset = 0;\n        this.privNextSearchTextIndex = 0;\n        this.onPreConnectionStart = (authFetchEventId, connectionId) => {\n            this.privAuthFetchEventId = authFetchEventId;\n            this.onEvent(new ConnectingToSynthesisServiceEvent(this.privRequestId, this.privAuthFetchEventId));\n        };\n        this.onAuthCompleted = (isError, error) => {\n            if (isError) {\n                this.onComplete();\n            }\n        };\n        this.onConnectionEstablishCompleted = (statusCode, reason) => {\n            if (statusCode === 200) {\n                this.onEvent(new SynthesisStartedEvent(this.requestId, this.privAuthFetchEventId));\n                this.privBytesReceived = 0;\n                return;\n            }\n            else if (statusCode === 403) {\n                this.onComplete();\n            }\n        };\n        this.onServiceResponseMessage = (responseJson) => {\n            const response = JSON.parse(responseJson);\n            this.streamId = response.audio.streamId;\n        };\n        this.onServiceTurnEndResponse = () => {\n            this.privInTurn = false;\n            this.privTurnDeferral.resolve();\n            this.onComplete();\n        };\n        this.onServiceTurnStartResponse = () => {\n            if (!!this.privTurnDeferral && !!this.privInTurn) {\n                // What? How are we starting a turn with another not done?\n                this.privTurnDeferral.reject(\"Another turn started before current completed.\");\n            }\n            this.privInTurn = true;\n            this.privTurnDeferral = new Deferred();\n        };\n        this.dispose = (error) => {\n            if (!this.privIsDisposed) {\n                // we should have completed by now. If we did not its an unknown error.\n                this.privIsDisposed = true;\n            }\n        };\n        this.onEvent = (event) => {\n            Events.instance.onEvent(event);\n        };\n        this.onComplete = () => {\n            if (this.privIsSynthesizing) {\n                this.privIsSynthesizing = false;\n                this.privIsSynthesisEnded = true;\n                this.privAudioOutputStream.close();\n                if (this.privTurnAudioDestination !== undefined) {\n                    this.privTurnAudioDestination.close();\n                    this.privTurnAudioDestination = undefined;\n                }\n            }\n        };\n        this.privRequestId = createNoDashGuid();\n        this.privTurnDeferral = new Deferred();\n        // We're not in a turn, so resolve.\n        this.privTurnDeferral.resolve();\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get streamId() {\n        return this.privStreamId;\n    }\n    set streamId(value) {\n        this.privStreamId = value;\n    }\n    get audioOutputFormat() {\n        return this.privAudioOutputFormat;\n    }\n    set audioOutputFormat(format) {\n        this.privAudioOutputFormat = format;\n    }\n    get turnCompletionPromise() {\n        return this.privTurnDeferral.promise;\n    }\n    get isSynthesisEnded() {\n        return this.privIsSynthesisEnded;\n    }\n    get isSynthesizing() {\n        return this.privIsSynthesizing;\n    }\n    get currentTextOffset() {\n        return this.privTextOffset;\n    }\n    // The number of bytes received for current turn\n    get bytesReceived() {\n        return this.privBytesReceived;\n    }\n    getAllReceivedAudio() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!!this.privReceivedAudio) {\n                return Promise.resolve(this.privReceivedAudio);\n            }\n            if (!this.privIsSynthesisEnded) {\n                return null;\n            }\n            yield this.readAllAudioFromStream();\n            return Promise.resolve(this.privReceivedAudio);\n        });\n    }\n    getAllReceivedAudioWithHeader() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!!this.privReceivedAudioWithHeader) {\n                return this.privReceivedAudioWithHeader;\n            }\n            if (!this.privIsSynthesisEnded) {\n                return null;\n            }\n            if (this.audioOutputFormat.hasHeader) {\n                const audio = yield this.getAllReceivedAudio();\n                this.privReceivedAudioWithHeader = SynthesisAdapterBase.addHeader(audio, this.audioOutputFormat);\n                return this.privReceivedAudioWithHeader;\n            }\n            else {\n                return this.getAllReceivedAudio();\n            }\n        });\n    }\n    startNewSynthesis(requestId, rawText, isSSML, audioDestination) {\n        this.privIsSynthesisEnded = false;\n        this.privIsSynthesizing = true;\n        this.privRequestId = requestId;\n        this.privRawText = rawText;\n        this.privIsSSML = isSSML;\n        this.privAudioOutputStream = new PullAudioOutputStreamImpl();\n        this.privAudioOutputStream.format = this.privAudioOutputFormat;\n        this.privReceivedAudio = null;\n        this.privReceivedAudioWithHeader = null;\n        this.privBytesReceived = 0;\n        this.privTextOffset = 0;\n        this.privNextSearchTextIndex = 0;\n        if (audioDestination !== undefined) {\n            this.privTurnAudioDestination = audioDestination;\n            this.privTurnAudioDestination.format = this.privAudioOutputFormat;\n        }\n        this.onEvent(new SynthesisTriggeredEvent(this.requestId, undefined, audioDestination === undefined ? undefined : audioDestination.id()));\n    }\n    onAudioChunkReceived(data) {\n        if (this.isSynthesizing) {\n            this.privAudioOutputStream.write(data);\n            this.privBytesReceived += data.byteLength;\n            if (this.privTurnAudioDestination !== undefined) {\n                this.privTurnAudioDestination.write(data);\n            }\n        }\n    }\n    onWordBoundaryEvent(text) {\n        this.updateTextOffset(text);\n    }\n    onStopSynthesizing() {\n        this.onComplete();\n    }\n    updateTextOffset(text) {\n        if (this.privTextOffset >= 0) {\n            this.privTextOffset = this.privRawText.indexOf(text, this.privNextSearchTextIndex);\n            if (this.privTextOffset >= 0) {\n                this.privNextSearchTextIndex = this.privTextOffset + text.length;\n            }\n            if (this.privIsSSML) {\n                if (this.privRawText.indexOf(\"<\", this.privTextOffset + 1) > this.privRawText.indexOf(\">\", this.privTextOffset + 1)) {\n                    this.updateTextOffset(text);\n                }\n            }\n        }\n    }\n    readAllAudioFromStream() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.privIsSynthesisEnded) {\n                this.privReceivedAudio = new ArrayBuffer(this.bytesReceived);\n                try {\n                    yield this.privAudioOutputStream.read(this.privReceivedAudio);\n                }\n                catch (e) {\n                    this.privReceivedAudio = new ArrayBuffer(0);\n                }\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=SynthesisTurn.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { EventType, PlatformEvent } from \"./Exports\";\nexport class BackgroundEvent extends PlatformEvent {\n    constructor(error) {\n        super(\"BackgroundEvent\", EventType.Error);\n        this.privError = error;\n    }\n    get error() {\n        return this.privError;\n    }\n}\n\n//# sourceMappingURL=BackgroundError.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * An abstract base class that defines callback methods (read() and close()) for\n * custom audio input streams).\n * @class PullAudioInputStreamCallback\n */\nexport class PullAudioInputStreamCallback {\n}\n\n//# sourceMappingURL=PullAudioInputStreamCallback.js.map\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { SynthesisAdapterBase } from \"../../common.speech/Exports\";\nimport { BackgroundEvent, createNoDashGuid, Events } from \"../../common/Exports\";\nimport { AudioFormatTag } from \"./AudioOutputFormat\";\nimport { PullAudioOutputStreamImpl } from \"./AudioOutputStream\";\nconst MediaDurationPlaceholderSeconds = 60 * 30;\nconst AudioFormatToMimeType = {\n    [AudioFormatTag.PCM]: \"audio/wav\",\n    [AudioFormatTag.MP3]: \"audio/mpeg\",\n    [AudioFormatTag.Opus]: \"audio/ogg\",\n};\n/**\n * Represents the speaker playback audio destination, which only works in browser.\n * Note: the SDK will try to use <a href=\"https://www.w3.org/TR/media-source/\">Media Source Extensions</a> to play audio.\n * Mp3 format has better supports on Microsoft Edge, Chrome and Safari (desktop), so, it's better to specify mp3 format for playback.\n * @class SpeakerAudioDestination\n * Updated in version 1.12.1\n */\nexport class SpeakerAudioDestination {\n    constructor(audioDestinationId) {\n        this.privPlaybackStarted = false;\n        this.privAppendingToBuffer = false;\n        this.privMediaSourceOpened = false;\n        this.privBytesReceived = 0;\n        this.privId = audioDestinationId ? audioDestinationId : createNoDashGuid();\n        this.privIsPaused = false;\n        this.privIsClosed = false;\n    }\n    id() {\n        return this.privId;\n    }\n    write(buffer, cb, err) {\n        if (this.privAudioBuffer !== undefined) {\n            this.privAudioBuffer.push(buffer);\n            this.updateSourceBuffer().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n        }\n        else if (this.privAudioOutputStream !== undefined) {\n            this.privAudioOutputStream.write(buffer);\n            this.privBytesReceived += buffer.byteLength;\n        }\n    }\n    close(cb, err) {\n        this.privIsClosed = true;\n        if (this.privSourceBuffer !== undefined) {\n            this.handleSourceBufferUpdateEnd().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n        }\n        else if (this.privAudioOutputStream !== undefined) {\n            let receivedAudio = new ArrayBuffer(this.privBytesReceived);\n            this.privAudioOutputStream.read(receivedAudio).then((_) => {\n                if (this.privFormat.hasHeader) {\n                    receivedAudio = SynthesisAdapterBase.addHeader(receivedAudio, this.privFormat);\n                }\n                const audioBlob = new Blob([receivedAudio], { type: AudioFormatToMimeType[this.privFormat.formatTag] });\n                this.privAudio.src = window.URL.createObjectURL(audioBlob);\n                this.notifyPlayback().then(() => {\n                    if (!!cb) {\n                        cb();\n                    }\n                }, (error) => {\n                    if (!!err) {\n                        err(error);\n                    }\n                });\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n        }\n    }\n    set format(format) {\n        if (typeof (AudioContext) !== \"undefined\" || typeof (window.webkitAudioContext) !== \"undefined\") {\n            this.privFormat = format;\n            const mimeType = AudioFormatToMimeType[this.privFormat.formatTag];\n            if (mimeType === undefined) {\n                // tslint:disable-next-line:no-console\n                console.warn(`Unknown mimeType for format ${AudioFormatTag[this.privFormat.formatTag]}.`);\n            }\n            else if (typeof (MediaSource) !== \"undefined\" && MediaSource.isTypeSupported(mimeType)) {\n                this.privAudio = new Audio();\n                this.privAudioBuffer = [];\n                this.privMediaSource = new MediaSource();\n                this.privAudio.src = URL.createObjectURL(this.privMediaSource);\n                this.privAudio.load();\n                this.privMediaSource.onsourceopen = (event) => {\n                    this.privMediaSourceOpened = true;\n                    this.privMediaSource.duration = MediaDurationPlaceholderSeconds;\n                    this.privSourceBuffer = this.privMediaSource.addSourceBuffer(mimeType);\n                    this.privSourceBuffer.onupdate = (_) => {\n                        this.updateSourceBuffer().catch((reason) => {\n                            Events.instance.onEvent(new BackgroundEvent(reason));\n                        });\n                    };\n                    this.privSourceBuffer.onupdateend = (_) => {\n                        this.handleSourceBufferUpdateEnd().catch((reason) => {\n                            Events.instance.onEvent(new BackgroundEvent(reason));\n                        });\n                    };\n                    this.privSourceBuffer.onupdatestart = (_) => {\n                        this.privAppendingToBuffer = false;\n                    };\n                };\n                this.updateSourceBuffer().catch((reason) => {\n                    Events.instance.onEvent(new BackgroundEvent(reason));\n                });\n            }\n            else {\n                // tslint:disable-next-line:no-console\n                console.warn(`Format ${AudioFormatTag[this.privFormat.formatTag]} could not be played by MSE, streaming playback is not enabled.`);\n                this.privAudioOutputStream = new PullAudioOutputStreamImpl();\n                this.privAudioOutputStream.format = this.privFormat;\n                this.privAudio = new Audio();\n            }\n        }\n    }\n    get isClosed() {\n        return this.privIsClosed;\n    }\n    get currentTime() {\n        if (this.privAudio !== undefined) {\n            return this.privAudio.currentTime;\n        }\n        return -1;\n    }\n    pause() {\n        if (!this.privIsPaused && this.privAudio !== undefined) {\n            this.privAudio.pause();\n            this.privIsPaused = true;\n        }\n    }\n    resume(cb, err) {\n        if (this.privIsPaused && this.privAudio !== undefined) {\n            this.privAudio.play().then(() => {\n                if (!!cb) {\n                    cb();\n                }\n            }, (error) => {\n                if (!!err) {\n                    err(error);\n                }\n            });\n            this.privIsPaused = false;\n        }\n    }\n    get internalAudio() {\n        return this.privAudio;\n    }\n    updateSourceBuffer() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.privAudioBuffer !== undefined && (this.privAudioBuffer.length > 0) && this.sourceBufferAvailable()) {\n                this.privAppendingToBuffer = true;\n                const binary = this.privAudioBuffer.shift();\n                try {\n                    this.privSourceBuffer.appendBuffer(binary);\n                }\n                catch (error) {\n                    this.privAudioBuffer.unshift(binary);\n                    // tslint:disable-next-line:no-console\n                    console.log(\"buffer filled, pausing addition of binaries until space is made\");\n                    return;\n                }\n                yield this.notifyPlayback();\n            }\n            else if (this.canEndStream()) {\n                yield this.handleSourceBufferUpdateEnd();\n            }\n        });\n    }\n    handleSourceBufferUpdateEnd() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.canEndStream() && this.sourceBufferAvailable()) {\n                this.privMediaSource.endOfStream();\n                yield this.notifyPlayback();\n            }\n        });\n    }\n    notifyPlayback() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.privPlaybackStarted && this.privAudio !== undefined) {\n                this.privAudio.onended = () => {\n                    if (!!this.onAudioEnd) {\n                        this.onAudioEnd(this);\n                    }\n                };\n                if (!this.privIsPaused) {\n                    yield this.privAudio.play();\n                }\n                this.privPlaybackStarted = true;\n            }\n        });\n    }\n    canEndStream() {\n        return (this.isClosed && this.privSourceBuffer !== undefined && (this.privAudioBuffer.length === 0)\n            && this.privMediaSourceOpened && !this.privAppendingToBuffer && this.privMediaSource.readyState === \"open\");\n    }\n    sourceBufferAvailable() {\n        return (this.privSourceBuffer !== undefined && !this.privSourceBuffer.updating);\n    }\n}\n\n//# sourceMappingURL=SpeakerAudioDestination.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Responsible for building the object to be sent to the speech service to support dynamic grammars.\n * @class DynamicGrammarBuilder\n */\nexport class DynamicGrammarBuilder {\n    // Adds one more reference phrases to the dynamic grammar to send.\n    // All added phrases are generic phrases.\n    addPhrase(phrase) {\n        if (!this.privPhrases) {\n            this.privPhrases = [];\n        }\n        if (phrase instanceof Array) {\n            this.privPhrases = this.privPhrases.concat(phrase);\n        }\n        else {\n            this.privPhrases.push(phrase);\n        }\n    }\n    // Clears all phrases stored in the current object.\n    clearPhrases() {\n        this.privPhrases = undefined;\n    }\n    // Adds one or more reference grammars to the current grammar.\n    addReferenceGrammar(grammar) {\n        if (!this.privGrammars) {\n            this.privGrammars = [];\n        }\n        if (grammar instanceof Array) {\n            this.privGrammars = this.privGrammars.concat(grammar);\n        }\n        else {\n            this.privGrammars.push(grammar);\n        }\n    }\n    // clears all grammars stored on the recognizer.\n    clearGrammars() {\n        this.privGrammars = undefined;\n    }\n    // Generates an object that represents the dynamic grammar used by the Speech Service.\n    // This is done by building an object with the correct layout based on the phrases and reference grammars added to this instance\n    // of a DynamicGrammarBuilder\n    generateGrammarObject() {\n        if (this.privGrammars === undefined && this.privPhrases === undefined) {\n            return undefined;\n        }\n        const retObj = {};\n        retObj.ReferenceGrammars = this.privGrammars;\n        if (undefined !== this.privPhrases && 0 !== this.privPhrases.length) {\n            const retPhrases = [];\n            this.privPhrases.forEach((value, index, array) => {\n                retPhrases.push({\n                    Text: value,\n                });\n            });\n            retObj.Groups = [{ Type: \"Generic\", Items: retPhrases }];\n        }\n        return retObj;\n    }\n}\n\n//# sourceMappingURL=DynamicGrammarBuilder.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Represents the JSON used in the speech.context message sent to the speech service.\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\n */\nexport class SpeechContext {\n    constructor(dynamicGrammar) {\n        this.privContext = {};\n        this.privDynamicGrammar = dynamicGrammar;\n    }\n    /**\n     * Adds a section to the speech.context object.\n     * @param sectionName Name of the section to add.\n     * @param value JSON serializable object that represents the value.\n     */\n    setSection(sectionName, value) {\n        this.privContext[sectionName] = value;\n    }\n    toJSON() {\n        const dgi = this.privDynamicGrammar.generateGrammarObject();\n        this.setSection(\"dgi\", dgi);\n        const ret = JSON.stringify(this.privContext);\n        return ret;\n    }\n}\n\n//# sourceMappingURL=SpeechContext.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class SpeechDetected {\n    constructor(json) {\n        this.privSpeechStartDetected = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new SpeechDetected(json);\n    }\n    get Offset() {\n        return this.privSpeechStartDetected.Offset;\n    }\n}\n\n//# sourceMappingURL=SpeechDetected.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { OutputFormatPropertyName, RecognitionMode, RecognizerConfig, SpeechConnectionFactory, SpeechServiceRecognizer, } from \"../common.speech/Exports\";\nimport { marshalPromiseToCallbacks } from \"../common/Exports\";\nimport { Contracts } from \"./Contracts\";\nimport { OutputFormat, PropertyId, Recognizer, } from \"./Exports\";\n/**\n * Performs speech recognition from microphone, file, or other audio input streams, and gets transcribed text as result.\n * @class SpeechRecognizer\n */\nexport class SpeechRecognizer extends Recognizer {\n    /**\n     * SpeechRecognizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    constructor(speechConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        Contracts.throwIfNullOrWhitespace(speechConfigImpl.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage), PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\n        super(audioConfig, speechConfigImpl.properties, new SpeechConnectionFactory());\n        this.privDisposedRecognizer = false;\n    }\n    /**\n     * SpeechRecognizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\n     */\n    static FromConfig(speechConfig, autoDetectSourceLanguageConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\n        const recognizer = new SpeechRecognizer(speechConfig, audioConfig);\n        return recognizer;\n    }\n    /**\n     * Gets the endpoint id of a customized speech model that is used for speech recognition.\n     * @member SpeechRecognizer.prototype.endpointId\n     * @function\n     * @public\n     * @returns {string} the endpoint id of a customized speech model that is used for speech recognition.\n     */\n    get endpointId() {\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_EndpointId, \"00000000-0000-0000-0000-000000000000\");\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member SpeechRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member SpeechRecognizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * Gets the spoken language of recognition.\n     * @member SpeechRecognizer.prototype.speechRecognitionLanguage\n     * @function\n     * @public\n     * @returns {string} The spoken language of recognition.\n     */\n    get speechRecognitionLanguage() {\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\n    }\n    /**\n     * Gets the output format of recognition.\n     * @member SpeechRecognizer.prototype.outputFormat\n     * @function\n     * @public\n     * @returns {OutputFormat} The output format of recognition.\n     */\n    get outputFormat() {\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        if (this.properties.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]) === OutputFormat[OutputFormat.Simple]) {\n            return OutputFormat.Simple;\n        }\n        else {\n            return OutputFormat.Detailed;\n        }\n    }\n    /**\n     * The collection of properties and their values defined for this SpeechRecognizer.\n     * @member SpeechRecognizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechRecognizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Starts speech recognition, and stops after the first utterance is recognized.\n     * The task returns the recognition text as result.\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\n     *       so it is suitable only for single shot recognition\n     *       like command or query. For long-running recognition, use StartContinuousRecognitionAsync() instead.\n     * @member SpeechRecognizer.prototype.recognizeOnceAsync\n     * @function\n     * @public\n     * @param cb - Callback that received the SpeechRecognitionResult.\n     * @param err - Callback invoked in case of an error.\n     */\n    recognizeOnceAsync(cb, err) {\n        marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(RecognitionMode.Interactive), cb, err);\n    }\n    /**\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * @member SpeechRecognizer.prototype.startContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startContinuousRecognitionAsync(cb, err) {\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\n    }\n    /**\n     * Stops continuous speech recognition.\n     * @member SpeechRecognizer.prototype.stopContinuousRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopContinuousRecognitionAsync(cb, err) {\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\n    }\n    /**\n     * Starts speech recognition with keyword spotting, until\n     * stopKeywordRecognitionAsync() is called.\n     * User must subscribe to events to receive recognition results.\n     * Note: Key word spotting functionality is only available on the\n     *      Speech Devices SDK. This functionality is currently not included in the SDK itself.\n     * @member SpeechRecognizer.prototype.startKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param {KeywordRecognitionModel} model The keyword recognition model that\n     *        specifies the keyword to be recognized.\n     * @param cb - Callback invoked once the recognition has started.\n     * @param err - Callback invoked in case of an error.\n     */\n    startKeywordRecognitionAsync(model, cb, err) {\n        Contracts.throwIfNull(model, \"model\");\n        if (!!err) {\n            err(\"Not yet implemented.\");\n        }\n    }\n    /**\n     * Stops continuous speech recognition.\n     * Note: Key word spotting functionality is only available on the\n     *       Speech Devices SDK. This functionality is currently not included in the SDK itself.\n     * @member SpeechRecognizer.prototype.stopKeywordRecognitionAsync\n     * @function\n     * @public\n     * @param cb - Callback invoked once the recognition has stopped.\n     * @param err - Callback invoked in case of an error.\n     */\n    stopKeywordRecognitionAsync(cb, err) {\n        if (!!cb) {\n            cb();\n        }\n    }\n    /**\n     * closes all external resources held by an instance of this class.\n     * @member SpeechRecognizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, errorCb) {\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\n    }\n    /**\n     * Disposes any resources held by the object.\n     * @member SpeechRecognizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - true if disposing the object.\n     */\n    dispose(disposing) {\n        const _super = Object.create(null, {\n            dispose: { get: () => super.dispose }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.privDisposedRecognizer) {\n                return;\n            }\n            if (disposing) {\n                this.privDisposedRecognizer = true;\n                yield this.implRecognizerStop();\n            }\n            yield _super.dispose.call(this, disposing);\n        });\n    }\n    createRecognizerConfig(speechConfig) {\n        return new RecognizerConfig(speechConfig, this.properties);\n    }\n    createServiceRecognizer(authentication, connectionFactory, audioConfig, recognizerConfig) {\n        const configImpl = audioConfig;\n        return new SpeechServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\n    }\n}\n\n//# sourceMappingURL=SpeechRecognizer.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ProxyInfo, WebsocketConnection, } from \"../common.browser/Exports\";\nimport { PropertyId } from \"../sdk/Exports\";\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase\";\nimport { WebsocketMessageFormatter, } from \"./Exports\";\nconst TestHooksParamName = \"testhooks\";\nconst ConnectionIdHeader = \"X-ConnectionId\";\nexport class IntentConnectionFactory extends ConnectionFactoryBase {\n    constructor() {\n        super(...arguments);\n        this.create = (config, authInfo, connectionId) => {\n            let endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint);\n            if (!endpoint) {\n                const region = config.parameters.getProperty(PropertyId.SpeechServiceConnection_IntentRegion);\n                const hostSuffix = (region && region.toLowerCase().startsWith(\"china\")) ? \".azure.cn\" : \".microsoft.com\";\n                const host = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".sr.speech\" + hostSuffix);\n                endpoint = host + \"/speech/recognition/interactive/cognitiveservices/v1\";\n            }\n            const queryParams = {\n                format: \"simple\",\n                language: config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage),\n            };\n            this.setCommonUrlParams(config, queryParams, endpoint);\n            const headers = {};\n            if (authInfo.token !== undefined && authInfo.token !== \"\") {\n                headers[authInfo.headerName] = authInfo.token;\n            }\n            headers[ConnectionIdHeader] = connectionId;\n            config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\n            return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), connectionId);\n        };\n    }\n    getSpeechRegionFromIntentRegion(intentRegion) {\n        switch (intentRegion) {\n            case \"West US\":\n            case \"US West\":\n            case \"westus\":\n                return \"uswest\";\n            case \"West US 2\":\n            case \"US West 2\":\n            case \"westus2\":\n                return \"uswest2\";\n            case \"South Central US\":\n            case \"US South Central\":\n            case \"southcentralus\":\n                return \"ussouthcentral\";\n            case \"West Central US\":\n            case \"US West Central\":\n            case \"westcentralus\":\n                return \"uswestcentral\";\n            case \"East US\":\n            case \"US East\":\n            case \"eastus\":\n                return \"useast\";\n            case \"East US 2\":\n            case \"US East 2\":\n            case \"eastus2\":\n                return \"useast2\";\n            case \"West Europe\":\n            case \"Europe West\":\n            case \"westeurope\":\n                return \"europewest\";\n            case \"North Europe\":\n            case \"Europe North\":\n            case \"northeurope\":\n                return \"europenorth\";\n            case \"Brazil South\":\n            case \"South Brazil\":\n            case \"southbrazil\":\n                return \"brazilsouth\";\n            case \"Australia East\":\n            case \"East Australia\":\n            case \"eastaustralia\":\n                return \"australiaeast\";\n            case \"Southeast Asia\":\n            case \"Asia Southeast\":\n            case \"southeastasia\":\n                return \"asiasoutheast\";\n            case \"East Asia\":\n            case \"Asia East\":\n            case \"eastasia\":\n                return \"asiaeast\";\n            default:\n                return intentRegion;\n        }\n    }\n}\n\n//# sourceMappingURL=IntentConnectionFactory.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * @class AddedLmIntent\n */\n// tslint:disable-next-line:max-classes-per-file\nexport class AddedLmIntent {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param modelImpl - The model.\n     * @param intentName - The intent name.\n     */\n    constructor(modelImpl, intentName) {\n        this.modelImpl = modelImpl;\n        this.intentName = intentName;\n    }\n}\n\n//# sourceMappingURL=AddedLmIntent.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { MessageType, } from \"../common/Exports\";\nimport { CancellationErrorCode, IntentRecognitionCanceledEventArgs, IntentRecognitionEventArgs, IntentRecognitionResult, PropertyCollection, PropertyId, ResultReason, } from \"../sdk/Exports\";\nimport { CancellationErrorCodePropertyName, EnumTranslation, IntentResponse, ServiceRecognizerBase, SimpleSpeechPhrase, SpeechHypothesis, } from \"./Exports\";\n// tslint:disable-next-line:max-classes-per-file\nexport class IntentServiceRecognizer extends ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, recognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\n        this.privIntentRecognizer = recognizer;\n        this.privIntentDataSent = false;\n    }\n    setIntents(addedIntents, umbrellaIntent) {\n        this.privAddedLmIntents = addedIntents;\n        this.privUmbrellaIntent = umbrellaIntent;\n        this.privIntentDataSent = true;\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let result;\n            let ev;\n            let processed = false;\n            const resultProps = new PropertyCollection();\n            if (connectionMessage.messageType === MessageType.Text) {\n                resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n            }\n            switch (connectionMessage.path.toLowerCase()) {\n                case \"speech.hypothesis\":\n                    const speechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody);\n                    result = new IntentRecognitionResult(undefined, this.privRequestSession.requestId, ResultReason.RecognizingIntent, speechHypothesis.Text, speechHypothesis.Duration, speechHypothesis.Offset + this.privRequestSession.currentTurnAudioOffset, speechHypothesis.Language, speechHypothesis.LanguageDetectionConfidence, undefined, connectionMessage.textBody, resultProps);\n                    this.privRequestSession.onHypothesis(result.offset);\n                    ev = new IntentRecognitionEventArgs(result, speechHypothesis.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\n                    if (!!this.privIntentRecognizer.recognizing) {\n                        try {\n                            this.privIntentRecognizer.recognizing(this.privIntentRecognizer, ev);\n                            /* tslint:disable:no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                    processed = true;\n                    break;\n                case \"speech.phrase\":\n                    const simple = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\n                    result = new IntentRecognitionResult(undefined, this.privRequestSession.requestId, EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus), simple.DisplayText, simple.Duration, simple.Offset + this.privRequestSession.currentTurnAudioOffset, simple.Language, simple.LanguageDetectionConfidence, undefined, connectionMessage.textBody, resultProps);\n                    ev = new IntentRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                    const sendEvent = () => {\n                        if (!!this.privIntentRecognizer.recognized) {\n                            try {\n                                this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\n                                /* tslint:disable:no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                        // report result to promise.\n                        if (!!this.privSuccessCallback) {\n                            try {\n                                this.privSuccessCallback(result);\n                            }\n                            catch (e) {\n                                if (!!this.privErrorCallback) {\n                                    this.privErrorCallback(e);\n                                }\n                            }\n                            // Only invoke the call back once.\n                            // and if it's successful don't invoke the\n                            // error after that.\n                            this.privSuccessCallback = undefined;\n                            this.privErrorCallback = undefined;\n                        }\n                    };\n                    // If intent data was sent, the terminal result for this recognizer is an intent being found.\n                    // If no intent data was sent, the terminal event is speech recognition being successful.\n                    if (false === this.privIntentDataSent || ResultReason.NoMatch === ev.result.reason) {\n                        // Advance the buffers.\n                        this.privRequestSession.onPhraseRecognized(ev.offset + ev.result.duration);\n                        sendEvent();\n                    }\n                    else {\n                        // Squirrel away the args, when the response event arrives it will build upon them\n                        // and then return\n                        this.privPendingIntentArgs = ev;\n                    }\n                    processed = true;\n                    break;\n                case \"response\":\n                    // Response from LUIS\n                    ev = this.privPendingIntentArgs;\n                    this.privPendingIntentArgs = undefined;\n                    if (undefined === ev) {\n                        if (\"\" === connectionMessage.textBody) {\n                            // This condition happens if there is nothing but silence in the\n                            // audio sent to the service.\n                            return;\n                        }\n                        // Odd... Not sure this can happen\n                        ev = new IntentRecognitionEventArgs(new IntentRecognitionResult(), 0 /*TODO*/, this.privRequestSession.sessionId);\n                    }\n                    const intentResponse = IntentResponse.fromJSON(connectionMessage.textBody);\n                    // If LUIS didn't return anything, send the existing event, else\n                    // modify it to show the match.\n                    // See if the intent found is in the list of intents asked for.\n                    let addedIntent = this.privAddedLmIntents[intentResponse.topScoringIntent.intent];\n                    if (this.privUmbrellaIntent !== undefined) {\n                        addedIntent = this.privUmbrellaIntent;\n                    }\n                    if (null !== intentResponse && addedIntent !== undefined) {\n                        const intentId = addedIntent.intentName === undefined ? intentResponse.topScoringIntent.intent : addedIntent.intentName;\n                        let reason = ev.result.reason;\n                        if (undefined !== intentId) {\n                            reason = ResultReason.RecognizedIntent;\n                        }\n                        // make sure, properties is set.\n                        const properties = (undefined !== ev.result.properties) ?\n                            ev.result.properties : new PropertyCollection();\n                        properties.setProperty(PropertyId.LanguageUnderstandingServiceResponse_JsonResult, connectionMessage.textBody);\n                        ev = new IntentRecognitionEventArgs(new IntentRecognitionResult(intentId, ev.result.resultId, reason, ev.result.text, ev.result.duration, ev.result.offset, undefined, undefined, ev.result.errorDetails, ev.result.json, properties), ev.offset, ev.sessionId);\n                    }\n                    this.privRequestSession.onPhraseRecognized(ev.offset + ev.result.duration);\n                    if (!!this.privIntentRecognizer.recognized) {\n                        try {\n                            this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\n                            /* tslint:disable:no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                    // report result to promise.\n                    if (!!this.privSuccessCallback) {\n                        try {\n                            this.privSuccessCallback(ev.result);\n                        }\n                        catch (e) {\n                            if (!!this.privErrorCallback) {\n                                this.privErrorCallback(e);\n                            }\n                        }\n                        // Only invoke the call back once.\n                        // and if it's successful don't invoke the\n                        // error after that.\n                        this.privSuccessCallback = undefined;\n                        this.privErrorCallback = undefined;\n                    }\n                    processed = true;\n                    break;\n                default:\n                    break;\n            }\n            return processed;\n        });\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new PropertyCollection();\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\n        if (!!this.privIntentRecognizer.canceled) {\n            const cancelEvent = new IntentRecognitionCanceledEventArgs(cancellationReason, error, errorCode, undefined, undefined, sessionId);\n            try {\n                this.privIntentRecognizer.canceled(this.privIntentRecognizer, cancelEvent);\n                /* tslint:disable:no-empty */\n            }\n            catch (_a) { }\n        }\n        if (!!this.privSuccessCallback) {\n            const result = new IntentRecognitionResult(undefined, // Intent Id\n            requestId, ResultReason.Canceled, undefined, // Text\n            undefined, // Duration\n            undefined, // Offset\n            undefined, // Language\n            undefined, // LanguageDetectionConfidence\n            error, undefined, // Json\n            properties);\n            try {\n                this.privSuccessCallback(result);\n                this.privSuccessCallback = undefined;\n                /* tslint:disable:no-empty */\n            }\n            catch (_b) { }\n        }\n    }\n}\n\n//# sourceMappingURL=IntentServiceRecognizer.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Output format\n * @class VoiceProfileType\n */\nexport var VoiceProfileType;\n(function (VoiceProfileType) {\n    /**\n     * Text independent speaker identification\n     * @member VoiceProfileType.TextIndependentIdentification\n     */\n    VoiceProfileType[VoiceProfileType[\"TextIndependentIdentification\"] = 0] = \"TextIndependentIdentification\";\n    /**\n     * Text dependent speaker verification\n     * @member VoiceProfileType.TextDependentVerification\n     */\n    VoiceProfileType[VoiceProfileType[\"TextDependentVerification\"] = 1] = \"TextDependentVerification\";\n    /**\n     * Text independent speaker verification\n     * @member VoiceProfileType.TextIndependentVerification\n     */\n    VoiceProfileType[VoiceProfileType[\"TextIndependentVerification\"] = 2] = \"TextIndependentVerification\";\n})(VoiceProfileType || (VoiceProfileType = {}));\n\n//# sourceMappingURL=VoiceProfileType.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ProxyInfo, WebsocketConnection, } from \"../common.browser/Exports\";\nimport { PropertyId } from \"../sdk/Exports\";\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase\";\nimport { WebsocketMessageFormatter, } from \"./Exports\";\nimport { QueryParameterNames } from \"./QueryParameterNames\";\nconst TestHooksParamName = \"testhooks\";\nconst ConnectionIdHeader = \"X-ConnectionId\";\nexport class TranslationConnectionFactory extends ConnectionFactoryBase {\n    constructor() {\n        super(...arguments);\n        this.create = (config, authInfo, connectionId) => {\n            let endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\n            if (!endpoint) {\n                const region = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, undefined);\n                const hostSuffix = (region && region.toLowerCase().startsWith(\"china\")) ? \".azure.cn\" : \".microsoft.com\";\n                const host = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".s2s.speech\" + hostSuffix);\n                endpoint = host + \"/speech/translation/cognitiveservices/v1\";\n            }\n            const queryParams = {\n                from: config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage),\n                to: config.parameters.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages),\n            };\n            this.setCommonUrlParams(config, queryParams, endpoint);\n            this.setUrlParameter(PropertyId.SpeechServiceResponse_TranslationRequestStablePartialResult, QueryParameterNames.StableTranslation, config, queryParams, endpoint);\n            const voiceName = \"voice\";\n            const featureName = \"features\";\n            if (config.parameters.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice, undefined) !== undefined) {\n                queryParams[voiceName] = config.parameters.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice);\n                queryParams[featureName] = \"texttospeech\";\n            }\n            const headers = {};\n            if (authInfo.token !== undefined && authInfo.token !== \"\") {\n                headers[authInfo.headerName] = authInfo.token;\n            }\n            headers[ConnectionIdHeader] = connectionId;\n            config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\n            return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), connectionId);\n        };\n    }\n}\n\n//# sourceMappingURL=TranslationConnectionFactory.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { MessageType, TranslationStatus, } from \"../common/Exports\";\nimport { CancellationErrorCode, CancellationReason, PropertyCollection, PropertyId, ResultReason, TranslationRecognitionCanceledEventArgs, TranslationRecognitionEventArgs, TranslationRecognitionResult, Translations, TranslationSynthesisEventArgs, TranslationSynthesisResult, } from \"../sdk/Exports\";\nimport { CancellationErrorCodePropertyName, EnumTranslation, RecognitionStatus, ServiceRecognizerBase, SynthesisStatus, TranslationHypothesis, TranslationPhrase, TranslationSynthesisEnd, } from \"./Exports\";\n// tslint:disable-next-line:max-classes-per-file\nexport class TranslationServiceRecognizer extends ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, translationRecognizer) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, translationRecognizer);\n        this.privTranslationRecognizer = translationRecognizer;\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resultProps = new PropertyCollection();\n            let processed = false;\n            if (connectionMessage.messageType === MessageType.Text) {\n                resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n            }\n            switch (connectionMessage.path.toLowerCase()) {\n                case \"translation.hypothesis\":\n                    const result = this.fireEventForResult(TranslationHypothesis.fromJSON(connectionMessage.textBody), resultProps);\n                    this.privRequestSession.onHypothesis(this.privRequestSession.currentTurnAudioOffset + result.offset);\n                    if (!!this.privTranslationRecognizer.recognizing) {\n                        try {\n                            this.privTranslationRecognizer.recognizing(this.privTranslationRecognizer, result);\n                            /* tslint:disable:no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                    processed = true;\n                    break;\n                case \"translation.phrase\":\n                    const translatedPhrase = TranslationPhrase.fromJSON(connectionMessage.textBody);\n                    this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + translatedPhrase.Offset + translatedPhrase.Duration);\n                    if (translatedPhrase.RecognitionStatus === RecognitionStatus.Success) {\n                        // OK, the recognition was successful. How'd the translation do?\n                        const result = this.fireEventForResult(translatedPhrase, resultProps);\n                        if (!!this.privTranslationRecognizer.recognized) {\n                            try {\n                                this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, result);\n                                /* tslint:disable:no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                        // report result to promise.\n                        if (!!this.privSuccessCallback) {\n                            try {\n                                this.privSuccessCallback(result.result);\n                            }\n                            catch (e) {\n                                if (!!this.privErrorCallback) {\n                                    this.privErrorCallback(e);\n                                }\n                            }\n                            // Only invoke the call back once.\n                            // and if it's successful don't invoke the\n                            // error after that.\n                            this.privSuccessCallback = undefined;\n                            this.privErrorCallback = undefined;\n                        }\n                        break;\n                    }\n                    else {\n                        const reason = EnumTranslation.implTranslateRecognitionResult(translatedPhrase.RecognitionStatus);\n                        const result = new TranslationRecognitionResult(undefined, this.privRequestSession.requestId, reason, translatedPhrase.Text, translatedPhrase.Duration, this.privRequestSession.currentTurnAudioOffset + translatedPhrase.Offset, undefined, connectionMessage.textBody, resultProps);\n                        if (reason === ResultReason.Canceled) {\n                            const cancelReason = EnumTranslation.implTranslateCancelResult(translatedPhrase.RecognitionStatus);\n                            yield this.cancelRecognitionLocal(cancelReason, EnumTranslation.implTranslateCancelErrorCode(translatedPhrase.RecognitionStatus), undefined);\n                        }\n                        else {\n                            if (!(this.privRequestSession.isSpeechEnded && reason === ResultReason.NoMatch && translatedPhrase.RecognitionStatus !== RecognitionStatus.InitialSilenceTimeout)) {\n                                const ev = new TranslationRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                                if (!!this.privTranslationRecognizer.recognized) {\n                                    try {\n                                        this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, ev);\n                                        /* tslint:disable:no-empty */\n                                    }\n                                    catch (error) {\n                                        // Not going to let errors in the event handler\n                                        // trip things up.\n                                    }\n                                }\n                            }\n                            // report result to promise.\n                            if (!!this.privSuccessCallback) {\n                                try {\n                                    this.privSuccessCallback(result);\n                                }\n                                catch (e) {\n                                    if (!!this.privErrorCallback) {\n                                        this.privErrorCallback(e);\n                                    }\n                                }\n                                // Only invoke the call back once.\n                                // and if it's successful don't invoke the\n                                // error after that.\n                                this.privSuccessCallback = undefined;\n                                this.privErrorCallback = undefined;\n                            }\n                        }\n                    }\n                    processed = true;\n                    break;\n                case \"translation.synthesis\":\n                    this.sendSynthesisAudio(connectionMessage.binaryBody, this.privRequestSession.sessionId);\n                    processed = true;\n                    break;\n                case \"translation.synthesis.end\":\n                    const synthEnd = TranslationSynthesisEnd.fromJSON(connectionMessage.textBody);\n                    switch (synthEnd.SynthesisStatus) {\n                        case SynthesisStatus.Error:\n                            if (!!this.privTranslationRecognizer.synthesizing) {\n                                const result = new TranslationSynthesisResult(ResultReason.Canceled, undefined);\n                                const retEvent = new TranslationSynthesisEventArgs(result, this.privRequestSession.sessionId);\n                                try {\n                                    this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\n                                    /* tslint:disable:no-empty */\n                                }\n                                catch (error) {\n                                    // Not going to let errors in the event handler\n                                    // trip things up.\n                                }\n                            }\n                            if (!!this.privTranslationRecognizer.canceled) {\n                                // And raise a canceled event to send the rich(er) error message back.\n                                const canceledResult = new TranslationRecognitionCanceledEventArgs(this.privRequestSession.sessionId, CancellationReason.Error, synthEnd.FailureReason, CancellationErrorCode.ServiceError, null);\n                                try {\n                                    this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, canceledResult);\n                                    /* tslint:disable:no-empty */\n                                }\n                                catch (error) {\n                                    // Not going to let errors in the event handler\n                                    // trip things up.\n                                }\n                            }\n                            break;\n                        case SynthesisStatus.Success:\n                            this.sendSynthesisAudio(undefined, this.privRequestSession.sessionId);\n                            break;\n                        default:\n                            break;\n                    }\n                    processed = true;\n                    break;\n                default:\n                    break;\n            }\n            return processed;\n        });\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new PropertyCollection();\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\n        if (!!this.privTranslationRecognizer.canceled) {\n            const cancelEvent = new TranslationRecognitionCanceledEventArgs(sessionId, cancellationReason, error, errorCode, undefined);\n            try {\n                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, cancelEvent);\n                /* tslint:disable:no-empty */\n            }\n            catch (_a) { }\n        }\n        if (!!this.privSuccessCallback) {\n            const result = new TranslationRecognitionResult(undefined, // Translations\n            requestId, ResultReason.Canceled, undefined, // Text\n            undefined, // Druation\n            undefined, // Offset\n            error, undefined, // Json\n            properties);\n            try {\n                this.privSuccessCallback(result);\n                /* tslint:disable:no-empty */\n                this.privSuccessCallback = undefined;\n            }\n            catch (_b) { }\n        }\n    }\n    fireEventForResult(serviceResult, properties) {\n        let translations;\n        if (undefined !== serviceResult.Translation.Translations) {\n            translations = new Translations();\n            for (const translation of serviceResult.Translation.Translations) {\n                translations.set(translation.Language, translation.Text);\n            }\n        }\n        let resultReason;\n        if (serviceResult instanceof TranslationPhrase) {\n            if (serviceResult.Translation.TranslationStatus === TranslationStatus.Success) {\n                resultReason = ResultReason.TranslatedSpeech;\n            }\n            else {\n                resultReason = ResultReason.RecognizedSpeech;\n            }\n        }\n        else {\n            resultReason = ResultReason.TranslatingSpeech;\n        }\n        const offset = serviceResult.Offset + this.privRequestSession.currentTurnAudioOffset;\n        const result = new TranslationRecognitionResult(translations, this.privRequestSession.requestId, resultReason, serviceResult.Text, serviceResult.Duration, offset, serviceResult.Translation.FailureReason, JSON.stringify(serviceResult), properties);\n        const ev = new TranslationRecognitionEventArgs(result, offset, this.privRequestSession.sessionId);\n        return ev;\n    }\n    sendSynthesisAudio(audio, sessionId) {\n        const reason = (undefined === audio) ? ResultReason.SynthesizingAudioCompleted : ResultReason.SynthesizingAudio;\n        const result = new TranslationSynthesisResult(reason, audio);\n        const retEvent = new TranslationSynthesisEventArgs(result, sessionId);\n        if (!!this.privTranslationRecognizer.synthesizing) {\n            try {\n                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\n                /* tslint:disable:no-empty */\n            }\n            catch (error) {\n                // Not going to let errors in the event handler\n                // trip things up.\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=TranslationServiceRecognizer.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Defines contents of received message/events.\n * @class ActivityReceivedEventArgs\n */\nexport class ActivityReceivedEventArgs {\n    /**\n     * Creates and initializes an instance of this class.\n     * @constructor\n     * @param {any} activity - The activity..\n     */\n    constructor(activity, audioStream) {\n        this.privActivity = activity;\n        this.privAudioStream = audioStream;\n    }\n    /**\n     * Gets the received activity\n     * @member ActivityReceivedEventArgs.prototype.activity\n     * @function\n     * @public\n     * @returns {any} the received activity.\n     */\n    get activity() {\n        return this.privActivity;\n    }\n    get audioStream() {\n        return this.privAudioStream;\n    }\n}\n\n//# sourceMappingURL=ActivityReceivedEventArgs.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Context } from \"./Exports\";\nexport class SpeakerRecognitionConfig {\n    constructor(context, parameters) {\n        this.privContext = context ? context : new Context(null);\n        this.privParameters = parameters;\n    }\n    get parameters() {\n        return this.privParameters;\n    }\n    get Context() {\n        return this.privContext;\n    }\n}\n\n//# sourceMappingURL=SpeakerRecognitionConfig.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ProxyInfo, WebsocketConnection, } from \"../common.browser/Exports\";\nimport { PropertyId } from \"../sdk/Exports\";\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase\";\nimport { WebsocketMessageFormatter } from \"./Exports\";\nimport { QueryParameterNames } from \"./QueryParameterNames\";\nexport class TranscriberConnectionFactory extends ConnectionFactoryBase {\n    constructor() {\n        super(...arguments);\n        this.multiaudioRelativeUri = \"/speech/recognition/multiaudio\";\n        this.create = (config, authInfo, connectionId) => {\n            let endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\n            const region = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, \"centralus\");\n            const hostSuffix = (region && region.toLowerCase().startsWith(\"china\")) ? \".azure.cn\" : \".microsoft.com\";\n            const hostDefault = \"wss://transcribe.\" + region + \".cts.speech\" + hostSuffix + this.multiaudioRelativeUri;\n            const host = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, hostDefault);\n            const queryParams = {};\n            const endpointId = config.parameters.getProperty(PropertyId.SpeechServiceConnection_EndpointId, undefined);\n            const language = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\n            if (endpointId) {\n                if (!endpoint || endpoint.search(QueryParameterNames.DeploymentIdParamName) === -1) {\n                    queryParams[QueryParameterNames.DeploymentIdParamName] = endpointId;\n                }\n            }\n            else if (language) {\n                if (!endpoint || endpoint.search(QueryParameterNames.LanguageParamName) === -1) {\n                    queryParams[QueryParameterNames.LanguageParamName] = language;\n                }\n            }\n            this.setCommonUrlParams(config, queryParams, endpoint);\n            if (!endpoint) {\n                endpoint = host;\n            }\n            const headers = {};\n            if (authInfo.token !== undefined && authInfo.token !== \"\") {\n                headers[authInfo.headerName] = authInfo.token;\n            }\n            headers[QueryParameterNames.ConnectionIdHeader] = connectionId;\n            config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\n            return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), connectionId);\n        };\n    }\n}\n\n//# sourceMappingURL=TranscriberConnectionFactory.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { MessageType } from \"../common/Exports\";\nimport { CancellationErrorCode, ConversationTranscriptionCanceledEventArgs, OutputFormat, PropertyCollection, PropertyId, ResultReason, SpeechRecognitionEventArgs, SpeechRecognitionResult, } from \"../sdk/Exports\";\nimport { CancellationErrorCodePropertyName, DetailedSpeechPhrase, EnumTranslation, OutputFormatPropertyName, RecognitionStatus, ServiceRecognizerBase, SimpleSpeechPhrase, SpeechHypothesis } from \"./Exports\";\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\n// tslint:disable-next-line:max-classes-per-file\nexport class TranscriptionServiceRecognizer extends ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, transcriber) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, transcriber);\n        this.sendSpeechEvent = (connection, payload) => {\n            const speechEventJson = JSON.stringify(payload);\n            if (speechEventJson) {\n                return connection.send(new SpeechConnectionMessage(MessageType.Text, \"speech.event\", this.privRequestSession.requestId, \"application/json\", speechEventJson));\n            }\n            return;\n        };\n        this.privTranscriberRecognizer = transcriber;\n        this.sendPrePayloadJSONOverride = this.sendTranscriptionStartJSON;\n    }\n    sendSpeechEventAsync(info, command) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!!this.privRequestSession.isRecognizing) {\n                const connection = yield this.fetchConnection();\n                yield this.sendSpeechEvent(connection, this.createSpeechEventPayload(info, command));\n            }\n        });\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let result;\n            const resultProps = new PropertyCollection();\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n            let processed = false;\n            switch (connectionMessage.path.toLowerCase()) {\n                case \"speech.hypothesis\":\n                case \"speech.fragment\":\n                    const hypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody);\n                    const offset = hypothesis.Offset + this.privRequestSession.currentTurnAudioOffset;\n                    result = new SpeechRecognitionResult(this.privRequestSession.requestId, ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, offset, hypothesis.Language, hypothesis.LanguageDetectionConfidence, hypothesis.SpeakerId, undefined, connectionMessage.textBody, resultProps);\n                    this.privRequestSession.onHypothesis(offset);\n                    const ev = new SpeechRecognitionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\n                    if (!!this.privTranscriberRecognizer.recognizing) {\n                        try {\n                            this.privTranscriberRecognizer.recognizing(this.privTranscriberRecognizer, ev);\n                            /* tslint:disable:no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                    processed = true;\n                    break;\n                case \"speech.phrase\":\n                    const simple = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\n                    const resultReason = EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\n                    this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + simple.Offset + simple.Duration);\n                    if (ResultReason.Canceled === resultReason) {\n                        const cancelReason = EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\n                        yield this.cancelRecognitionLocal(cancelReason, EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus), undefined);\n                    }\n                    else {\n                        if (!(this.privRequestSession.isSpeechEnded && resultReason === ResultReason.NoMatch && simple.RecognitionStatus !== RecognitionStatus.InitialSilenceTimeout)) {\n                            if (this.privRecognizerConfig.parameters.getProperty(OutputFormatPropertyName) === OutputFormat[OutputFormat.Simple]) {\n                                result = new SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, simple.DisplayText, simple.Duration, simple.Offset + this.privRequestSession.currentTurnAudioOffset, simple.Language, simple.LanguageDetectionConfidence, simple.SpeakerId, undefined, connectionMessage.textBody, resultProps);\n                            }\n                            else {\n                                const detailed = DetailedSpeechPhrase.fromJSON(connectionMessage.textBody);\n                                result = new SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, detailed.RecognitionStatus === RecognitionStatus.Success ? detailed.NBest[0].Display : undefined, detailed.Duration, detailed.Offset + this.privRequestSession.currentTurnAudioOffset, detailed.Language, detailed.LanguageDetectionConfidence, undefined, undefined, connectionMessage.textBody, resultProps);\n                            }\n                            const event = new SpeechRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\n                            if (!!this.privTranscriberRecognizer.recognized) {\n                                try {\n                                    this.privTranscriberRecognizer.recognized(this.privTranscriberRecognizer, event);\n                                    /* tslint:disable:no-empty */\n                                }\n                                catch (error) {\n                                    // Not going to let errors in the event handler\n                                    // trip things up.\n                                }\n                            }\n                        }\n                        if (!!this.privSuccessCallback) {\n                            try {\n                                this.privSuccessCallback(result);\n                            }\n                            catch (e) {\n                                if (!!this.privErrorCallback) {\n                                    this.privErrorCallback(e);\n                                }\n                            }\n                            // Only invoke the call back once.\n                            // and if it's successful don't invoke the\n                            // error after that.\n                            this.privSuccessCallback = undefined;\n                            this.privErrorCallback = undefined;\n                        }\n                    }\n                    processed = true;\n                    break;\n                default:\n                    break;\n            }\n            return processed;\n        });\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        const properties = new PropertyCollection();\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\n        if (!!this.privTranscriberRecognizer.canceled) {\n            const cancelEvent = new ConversationTranscriptionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n            try {\n                this.privTranscriberRecognizer.canceled(this.privTranscriberRecognizer, cancelEvent);\n                /* tslint:disable:no-empty */\n            }\n            catch (_a) { }\n        }\n        if (!!this.privSuccessCallback) {\n            const result = new SpeechRecognitionResult(requestId, ResultReason.Canceled, undefined, // Text\n            undefined, // Duration\n            undefined, // Offset\n            undefined, // Language\n            undefined, // Language Detection Confidence\n            undefined, // Speaker Id\n            error, undefined, // Json\n            properties);\n            try {\n                this.privSuccessCallback(result);\n                this.privSuccessCallback = undefined;\n                /* tslint:disable:no-empty */\n            }\n            catch (_b) { }\n        }\n    }\n    // Encapsulated for derived service recognizers that need to send additional JSON\n    sendTranscriptionStartJSON(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.sendSpeechContext(connection);\n            const info = this.privTranscriberRecognizer.getConversationInfo();\n            const payload = this.createSpeechEventPayload(info, \"start\");\n            yield this.sendSpeechEvent(connection, payload);\n            yield this.sendWaveHeader(connection);\n            return;\n        });\n    }\n    createSpeechEventPayload(info, command) {\n        const meeting = \"meeting\";\n        const eventDict = { id: meeting, name: command, meeting: info.conversationProperties };\n        const idString = \"id\";\n        const attendees = \"attendees\";\n        const record = \"record\";\n        eventDict[meeting][idString] = info.id;\n        eventDict[meeting][attendees] = info.participants;\n        eventDict[meeting][record] = info.conversationProperties.audiorecording === \"on\" ? \"true\" : \"false\";\n        return eventDict;\n    }\n}\n\n//# sourceMappingURL=TranscriptionServiceRecognizer.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AutoDetectSourceLanguagesOpenRangeOptionName, CognitiveSubscriptionKeyAuthentication, CognitiveTokenAuthentication, Context, OS, SpeechServiceConfig, SpeechSynthesisConnectionFactory, SynthesisAdapterBase, SynthesizerConfig, } from \"../common.speech/Exports\";\nimport { createNoDashGuid, marshalPromiseToCallbacks, Queue } from \"../common/Exports\";\nimport { AudioFileWriter } from \"./Audio/AudioFileWriter\";\nimport { AudioOutputFormatImpl } from \"./Audio/AudioOutputFormat\";\nimport { PushAudioOutputStreamImpl } from \"./Audio/AudioOutputStream\";\nimport { Contracts } from \"./Contracts\";\nimport { AudioConfig, PropertyId, PullAudioOutputStream, PushAudioOutputStreamCallback, SpeechSynthesisOutputFormat, } from \"./Exports\";\n/**\n * Defines the class SpeechSynthesizer for text to speech.\n * Added in version 1.11.0\n * @class SpeechSynthesizer\n */\nexport class SpeechSynthesizer {\n    /**\n     * SpeechSynthesizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer.\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer.\n     */\n    constructor(speechConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n        if (audioConfig !== null) {\n            if (audioConfig === undefined) {\n                this.audioConfig = (typeof window === \"undefined\") ? undefined : AudioConfig.fromDefaultSpeakerOutput();\n            }\n            else {\n                this.audioConfig = audioConfig;\n            }\n        }\n        this.privProperties = speechConfigImpl.properties.clone();\n        this.privDisposed = false;\n        this.privSynthesizing = false;\n        this.privConnectionFactory = new SpeechSynthesisConnectionFactory();\n        this.synthesisRequestQueue = new Queue();\n        this.implCommonSynthesizeSetup();\n    }\n    /**\n     * Gets the authorization token used to communicate with the service.\n     * @member SpeechSynthesizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @returns {string} Authorization token.\n     */\n    get authorizationToken() {\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\n    }\n    /**\n     * Gets/Sets the authorization token used to communicate with the service.\n     * @member SpeechSynthesizer.prototype.authorizationToken\n     * @function\n     * @public\n     * @param {string} token - Authorization token.\n     */\n    set authorizationToken(token) {\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\n    }\n    /**\n     * The collection of properties and their values defined for this SpeechSynthesizer.\n     * @member SpeechSynthesizer.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechSynthesizer.\n     */\n    get properties() {\n        return this.privProperties;\n    }\n    /**\n     * Indicates if auto detect source language is enabled\n     * @member SpeechSynthesizer.prototype.properties\n     * @function\n     * @public\n     * @returns {boolean} if auto detect source language is enabled\n     */\n    get autoDetectSourceLanguage() {\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages) === AutoDetectSourceLanguagesOpenRangeOptionName;\n    }\n    /**\n     * SpeechSynthesizer constructor.\n     * @constructor\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this synthesizer\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the synthesizer\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer\n     */\n    static FromConfig(speechConfig, autoDetectSourceLanguageConfig, audioConfig) {\n        const speechConfigImpl = speechConfig;\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\n        return new SpeechSynthesizer(speechConfig, audioConfig);\n    }\n    buildSsml(text) {\n        const languageToDefaultVoice = {\n            [\"ar-EG\"]: \"Microsoft Server Speech Text to Speech Voice (ar-EG, Hoda)\",\n            [\"ar-SA\"]: \"Microsoft Server Speech Text to Speech Voice (ar-SA, Naayf)\",\n            [\"bg-BG\"]: \"Microsoft Server Speech Text to Speech Voice (bg-BG, Ivan)\",\n            [\"ca-ES\"]: \"Microsoft Server Speech Text to Speech Voice (ca-ES, HerenaRUS)\",\n            [\"cs-CZ\"]: \"Microsoft Server Speech Text to Speech Voice (cs-CZ, Jakub)\",\n            [\"da-DK\"]: \"Microsoft Server Speech Text to Speech Voice (da-DK, HelleRUS)\",\n            [\"de-AT\"]: \"Microsoft Server Speech Text to Speech Voice (de-AT, Michael)\",\n            [\"de-CH\"]: \"Microsoft Server Speech Text to Speech Voice (de-CH, Karsten)\",\n            [\"de-DE\"]: \"Microsoft Server Speech Text to Speech Voice (de-DE, HeddaRUS)\",\n            [\"el-GR\"]: \"Microsoft Server Speech Text to Speech Voice (el-GR, Stefanos)\",\n            [\"en-AU\"]: \"Microsoft Server Speech Text to Speech Voice (en-AU, HayleyRUS)\",\n            [\"en-CA\"]: \"Microsoft Server Speech Text to Speech Voice (en-CA, HeatherRUS)\",\n            [\"en-GB\"]: \"Microsoft Server Speech Text to Speech Voice (en-GB, HazelRUS)\",\n            [\"en-IE\"]: \"Microsoft Server Speech Text to Speech Voice (en-IE, Sean)\",\n            [\"en-IN\"]: \"Microsoft Server Speech Text to Speech Voice (en-IN, PriyaRUS)\",\n            [\"en-US\"]: \"Microsoft Server Speech Text to Speech Voice (en-US, AriaRUS)\",\n            [\"es-ES\"]: \"Microsoft Server Speech Text to Speech Voice (es-ES, HelenaRUS)\",\n            [\"es-MX\"]: \"Microsoft Server Speech Text to Speech Voice (es-MX, HildaRUS)\",\n            [\"fi-FI\"]: \"Microsoft Server Speech Text to Speech Voice (fi-FI, HeidiRUS)\",\n            [\"fr-CA\"]: \"Microsoft Server Speech Text to Speech Voice (fr-CA, HarmonieRUS)\",\n            [\"fr-CH\"]: \"Microsoft Server Speech Text to Speech Voice (fr-CH, Guillaume)\",\n            [\"fr-FR\"]: \"Microsoft Server Speech Text to Speech Voice (fr-FR, HortenseRUS)\",\n            [\"he-IL\"]: \"Microsoft Server Speech Text to Speech Voice (he-IL, Asaf)\",\n            [\"hi-IN\"]: \"Microsoft Server Speech Text to Speech Voice (hi-IN, Kalpana)\",\n            [\"hr-HR\"]: \"Microsoft Server Speech Text to Speech Voice (hr-HR, Matej)\",\n            [\"hu-HU\"]: \"Microsoft Server Speech Text to Speech Voice (hu-HU, Szabolcs)\",\n            [\"id-ID\"]: \"Microsoft Server Speech Text to Speech Voice (id-ID, Andika)\",\n            [\"it-IT\"]: \"Microsoft Server Speech Text to Speech Voice (it-IT, LuciaRUS)\",\n            [\"ja-JP\"]: \"Microsoft Server Speech Text to Speech Voice (ja-JP, HarukaRUS)\",\n            [\"ko-KR\"]: \"Microsoft Server Speech Text to Speech Voice (ko-KR, HeamiRUS)\",\n            [\"ms-MY\"]: \"Microsoft Server Speech Text to Speech Voice (ms-MY, Rizwan)\",\n            [\"nb-NO\"]: \"Microsoft Server Speech Text to Speech Voice (nb-NO, HuldaRUS)\",\n            [\"nl-NL\"]: \"Microsoft Server Speech Text to Speech Voice (nl-NL, HannaRUS)\",\n            [\"pl-PL\"]: \"Microsoft Server Speech Text to Speech Voice (pl-PL, PaulinaRUS)\",\n            [\"pt-BR\"]: \"Microsoft Server Speech Text to Speech Voice (pt-BR, HeloisaRUS)\",\n            [\"pt-PT\"]: \"Microsoft Server Speech Text to Speech Voice (pt-PT, HeliaRUS)\",\n            [\"ro-RO\"]: \"Microsoft Server Speech Text to Speech Voice (ro-RO, Andrei)\",\n            [\"ru-RU\"]: \"Microsoft Server Speech Text to Speech Voice (ru-RU, EkaterinaRUS)\",\n            [\"sk-SK\"]: \"Microsoft Server Speech Text to Speech Voice (sk-SK, Filip)\",\n            [\"sl-SI\"]: \"Microsoft Server Speech Text to Speech Voice (sl-SI, Lado)\",\n            [\"sv-SE\"]: \"Microsoft Server Speech Text to Speech Voice (sv-SE, HedvigRUS)\",\n            [\"ta-IN\"]: \"Microsoft Server Speech Text to Speech Voice (ta-IN, Valluvar)\",\n            [\"te-IN\"]: \"Microsoft Server Speech Text to Speech Voice (te-IN, Chitra)\",\n            [\"th-TH\"]: \"Microsoft Server Speech Text to Speech Voice (th-TH, Pattara)\",\n            [\"tr-TR\"]: \"Microsoft Server Speech Text to Speech Voice (tr-TR, SedaRUS)\",\n            [\"vi-VN\"]: \"Microsoft Server Speech Text to Speech Voice (vi-VN, An)\",\n            [\"zh-CN\"]: \"Microsoft Server Speech Text to Speech Voice (zh-CN, HuihuiRUS)\",\n            [\"zh-HK\"]: \"Microsoft Server Speech Text to Speech Voice (zh-HK, TracyRUS)\",\n            [\"zh-TW\"]: \"Microsoft Server Speech Text to Speech Voice (zh-TW, HanHanRUS)\",\n        };\n        let language = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage, \"en-US\");\n        let voice = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice, \"\");\n        let ssml = SpeechSynthesizer.XMLEncode(text);\n        if (this.autoDetectSourceLanguage) {\n            language = \"en-US\";\n        }\n        else {\n            voice = voice || languageToDefaultVoice[language];\n        }\n        if (voice) {\n            ssml = `<voice name='${voice}'>${ssml}</voice>`;\n        }\n        ssml = `<speak version='1.0' xmlns='http://www.w3.org/2001/10/synthesis' xmlns:mstts='http://www.w3.org/2001/mstts' xmlns:emo='http://www.w3.org/2009/10/emotionml' xml:lang='${language}'>${ssml}</speak>`;\n        return ssml;\n    }\n    /**\n     * Executes speech synthesis on plain text.\n     * The task returns the synthesis result.\n     * @member SpeechSynthesizer.prototype.speakTextAsync\n     * @function\n     * @public\n     * @param text - Text to be synthesized.\n     * @param cb - Callback that received the SpeechSynthesisResult.\n     * @param err - Callback invoked in case of an error.\n     * @param stream - AudioOutputStream to receive the synthesized audio.\n     */\n    speakTextAsync(text, cb, err, stream) {\n        this.speakImpl(text, false, cb, err, stream);\n    }\n    /**\n     * Executes speech synthesis on SSML.\n     * The task returns the synthesis result.\n     * @member SpeechSynthesizer.prototype.speakSsmlAsync\n     * @function\n     * @public\n     * @param ssml - SSML to be synthesized.\n     * @param cb - Callback that received the SpeechSynthesisResult.\n     * @param err - Callback invoked in case of an error.\n     * @param stream - AudioOutputStream to receive the synthesized audio.\n     */\n    speakSsmlAsync(ssml, cb, err, stream) {\n        this.speakImpl(ssml, true, cb, err, stream);\n    }\n    /**\n     * Dispose of associated resources.\n     * @member SpeechSynthesizer.prototype.close\n     * @function\n     * @public\n     */\n    close(cb, err) {\n        Contracts.throwIfDisposed(this.privDisposed);\n        marshalPromiseToCallbacks(this.dispose(true), cb, err);\n    }\n    /**\n     * @Internal\n     * Do not use externally, object returned will change without warning or notice.\n     */\n    get internalData() {\n        return this.privAdapter;\n    }\n    /**\n     * This method performs cleanup of resources.\n     * The Boolean parameter disposing indicates whether the method is called\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\n     * Derived classes should override this method to dispose resource if needed.\n     * @member SpeechSynthesizer.prototype.dispose\n     * @function\n     * @public\n     * @param {boolean} disposing - Flag to request disposal.\n     */\n    dispose(disposing) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.privDisposed) {\n                return;\n            }\n            if (disposing) {\n                if (this.privAdapter) {\n                    yield this.privAdapter.dispose();\n                }\n            }\n            this.privDisposed = true;\n        });\n    }\n    //\n    // ################################################################################################################\n    // IMPLEMENTATION.\n    // Move to independent class\n    // ################################################################################################################\n    //\n    createSynthesizerConfig(speechConfig) {\n        return new SynthesizerConfig(speechConfig, this.privProperties);\n    }\n    // Creates the synthesis adapter\n    createSynthesisAdapter(authentication, connectionFactory, audioConfig, synthesizerConfig) {\n        return new SynthesisAdapterBase(authentication, connectionFactory, synthesizerConfig, this, this.audioConfig);\n    }\n    implCommonSynthesizeSetup() {\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\n        let osName = \"unknown\";\n        let osVersion = \"unknown\";\n        if (typeof navigator !== \"undefined\") {\n            osPlatform = osPlatform + \"/\" + navigator.platform;\n            osName = navigator.userAgent;\n            osVersion = navigator.appVersion;\n        }\n        const synthesizerConfig = this.createSynthesizerConfig(new SpeechServiceConfig(new Context(new OS(osPlatform, osName, osVersion))));\n        const subscriptionKey = this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\n        const authentication = (subscriptionKey && subscriptionKey !== \"\") ?\n            new CognitiveSubscriptionKeyAuthentication(subscriptionKey) :\n            new CognitiveTokenAuthentication((authFetchEventId) => {\n                const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\n                return Promise.resolve(authorizationToken);\n            }, (authFetchEventId) => {\n                const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\n                return Promise.resolve(authorizationToken);\n            });\n        this.privAdapter = this.createSynthesisAdapter(authentication, this.privConnectionFactory, this.audioConfig, synthesizerConfig);\n        this.privAdapter.audioOutputFormat = AudioOutputFormatImpl.fromSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat[this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)]);\n    }\n    speakImpl(text, IsSsml, cb, err, dataStream) {\n        try {\n            Contracts.throwIfDisposed(this.privDisposed);\n            const requestId = createNoDashGuid();\n            let audioDestination;\n            if (dataStream instanceof PushAudioOutputStreamCallback) {\n                audioDestination = new PushAudioOutputStreamImpl(dataStream);\n            }\n            else if (dataStream instanceof PullAudioOutputStream) {\n                audioDestination = dataStream;\n            }\n            else if (dataStream !== undefined) {\n                audioDestination = new AudioFileWriter(dataStream);\n            }\n            else {\n                audioDestination = undefined;\n            }\n            this.synthesisRequestQueue.enqueue(new SynthesisRequest(requestId, text, IsSsml, (e) => {\n                this.privSynthesizing = false;\n                if (!!cb) {\n                    try {\n                        cb(e);\n                    }\n                    catch (e) {\n                        if (!!err) {\n                            err(e);\n                        }\n                    }\n                }\n                cb = undefined;\n                /* tslint:disable:no-empty */\n                this.adapterSpeak().catch(() => { });\n            }, (e) => {\n                if (!!err) {\n                    err(e);\n                }\n            }, audioDestination));\n            /* tslint:disable:no-empty */\n            this.adapterSpeak().catch(() => { });\n        }\n        catch (error) {\n            if (!!err) {\n                if (error instanceof Error) {\n                    const typedError = error;\n                    err(typedError.name + \": \" + typedError.message);\n                }\n                else {\n                    err(error);\n                }\n            }\n            // Destroy the synthesizer.\n            /* tslint:disable:no-empty */\n            this.dispose(true).catch(() => { });\n        }\n    }\n    adapterSpeak() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.privDisposed && !this.privSynthesizing) {\n                this.privSynthesizing = true;\n                const request = yield this.synthesisRequestQueue.dequeue();\n                return this.privAdapter.Speak(request.text, request.isSSML, request.requestId, request.cb, request.err, request.dataStream);\n            }\n        });\n    }\n    static XMLEncode(text) {\n        return text.replace(/&/g, \"&amp;\")\n            .replace(/</g, \"&lt;\")\n            .replace(/>/g, \"&gt;\")\n            .replace(/\"/g, \"&quot;\")\n            .replace(/'/g, \"&apos;\");\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class SynthesisRequest {\n    constructor(requestId, text, isSSML, cb, err, dataStream) {\n        this.requestId = requestId;\n        this.text = text;\n        this.isSSML = isSSML;\n        this.cb = cb;\n        this.err = err;\n        this.dataStream = dataStream;\n    }\n}\n\n//# sourceMappingURL=SpeechSynthesizer.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// response\nexport class ActivityPayloadResponse {\n    constructor(json) {\n        this.privActivityResponse = JSON.parse(json);\n    }\n    static fromJSON(json) {\n        return new ActivityPayloadResponse(json);\n    }\n    get conversationId() {\n        return this.privActivityResponse.conversationId;\n    }\n    get messageDataStreamType() {\n        return this.privActivityResponse.messageDataStreamType;\n    }\n    get messagePayload() {\n        return this.privActivityResponse.messagePayload;\n    }\n    get version() {\n        return this.privActivityResponse.version;\n    }\n}\nexport var MessageDataStreamType;\n(function (MessageDataStreamType) {\n    MessageDataStreamType[MessageDataStreamType[\"None\"] = 0] = \"None\";\n    MessageDataStreamType[MessageDataStreamType[\"TextToSpeechAudio\"] = 1] = \"TextToSpeechAudio\";\n})(MessageDataStreamType || (MessageDataStreamType = {}));\n\n//# sourceMappingURL=ActivityResponsePayload.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\nimport { AudioOutputStream } from \"../sdk/Audio/AudioOutputStream\";\nimport { MessageDataStreamType } from \"./ServiceMessages/ActivityResponsePayload\";\nexport class DialogServiceTurnState {\n    constructor(manager, requestId) {\n        this.privRequestId = requestId;\n        this.privIsCompleted = false;\n        this.privAudioStream = null;\n        this.privTurnManager = manager;\n        this.resetTurnEndTimeout();\n        // tslint:disable-next-line:no-console\n        // console.info(\"DialogServiceTurnState debugturn start:\" + this.privRequestId);\n    }\n    get audioStream() {\n        // Called when is needed to stream.\n        this.resetTurnEndTimeout();\n        return this.privAudioStream;\n    }\n    processActivityPayload(payload, audioFormat) {\n        if (payload.messageDataStreamType === MessageDataStreamType.TextToSpeechAudio) {\n            this.privAudioStream = AudioOutputStream.createPullStream();\n            this.privAudioStream.format = (audioFormat !== undefined) ? audioFormat : AudioOutputFormatImpl.getDefaultOutputFormat();\n            // tslint:disable-next-line:no-console\n            // console.info(\"Audio start debugturn:\" + this.privRequestId);\n        }\n        return this.privAudioStream;\n    }\n    endAudioStream() {\n        if (this.privAudioStream !== null && !this.privAudioStream.isClosed) {\n            this.privAudioStream.close();\n        }\n    }\n    complete() {\n        if (this.privTimeoutToken !== undefined) {\n            clearTimeout(this.privTimeoutToken);\n        }\n        this.endAudioStream();\n    }\n    resetTurnEndTimeout() {\n        if (this.privTimeoutToken !== undefined) {\n            clearTimeout(this.privTimeoutToken);\n        }\n        // tslint:disable-next-line:no-console\n        // console.info(\"Timeout reset debugturn:\" + this.privRequestId);\n        this.privTimeoutToken = setTimeout(() => {\n            // tslint:disable-next-line:no-console\n            // console.info(\"Timeout complete debugturn:\" + this.privRequestId);\n            this.privTurnManager.CompleteTurn(this.privRequestId);\n            return;\n        }, 2000);\n    }\n}\n\n//# sourceMappingURL=DialogServiceTurnState.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { InvalidOperationError } from \"../common/Error\";\nimport { DialogServiceTurnState } from \"./DialogServiceTurnState\";\nexport class DialogServiceTurnStateManager {\n    constructor() {\n        this.privTurnMap = new Map();\n        return;\n    }\n    StartTurn(id) {\n        if (this.privTurnMap.has(id)) {\n            throw new InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\n        }\n        const turnState = new DialogServiceTurnState(this, id);\n        this.privTurnMap.set(id, turnState);\n        return this.privTurnMap.get(id);\n    }\n    GetTurn(id) {\n        return this.privTurnMap.get(id);\n    }\n    CompleteTurn(id) {\n        if (!this.privTurnMap.has(id)) {\n            throw new InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\n        }\n        const turnState = this.privTurnMap.get(id);\n        turnState.complete();\n        this.privTurnMap.delete(id);\n        return turnState;\n    }\n}\n\n//# sourceMappingURL=DialogServiceTurnStateManager.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ReplayableAudioNode } from \"../common.browser/Exports\";\nimport { BackgroundEvent, createGuid, createNoDashGuid, Deferred, Events, MessageType, ServiceEvent, } from \"../common/Exports\";\nimport { ActivityReceivedEventArgs, CancellationErrorCode, CancellationReason, PropertyCollection, PropertyId, RecognitionEventArgs, ResultReason, SessionEventArgs, SpeechRecognitionCanceledEventArgs, SpeechRecognitionEventArgs, SpeechRecognitionResult, SpeechSynthesisOutputFormat, } from \"../sdk/Exports\";\nimport { DialogServiceTurnStateManager } from \"./DialogServiceTurnStateManager\";\nimport { CancellationErrorCodePropertyName, EnumTranslation, RecognitionStatus, ServiceRecognizerBase, SimpleSpeechPhrase, SpeechDetected, SpeechHypothesis, } from \"./Exports\";\nimport { ActivityPayloadResponse } from \"./ServiceMessages/ActivityResponsePayload\";\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal\";\nexport class DialogServiceAdapter extends ServiceRecognizerBase {\n    constructor(authentication, connectionFactory, audioSource, recognizerConfig, dialogServiceConnector) {\n        super(authentication, connectionFactory, audioSource, recognizerConfig, dialogServiceConnector);\n        this.sendAgentConfig = (connection) => {\n            if (this.agentConfig && !this.agentConfigSent) {\n                if (this.privRecognizerConfig.parameters.getProperty(PropertyId.Conversation_DialogType) === \"custom_commands\") {\n                    const config = this.agentConfig.get();\n                    config.botInfo.commandsCulture = this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, \"en-us\");\n                    this.agentConfig.set(config);\n                }\n                const agentConfigJson = this.agentConfig.toJsonString();\n                // guard against sending this multiple times on one connection\n                this.agentConfigSent = true;\n                return connection.send(new SpeechConnectionMessage(MessageType.Text, \"agent.config\", this.privRequestSession.requestId, \"application/json\", agentConfigJson));\n            }\n            return;\n        };\n        this.sendAgentContext = (connection) => {\n            const guid = createGuid();\n            const speechActivityTemplate = this.privDialogServiceConnector.properties.getProperty(PropertyId.Conversation_Speech_Activity_Template);\n            const agentContext = {\n                channelData: \"\",\n                context: {\n                    interactionId: guid\n                },\n                messagePayload: typeof speechActivityTemplate === undefined ? undefined : speechActivityTemplate,\n                version: 0.5\n            };\n            const agentContextJson = JSON.stringify(agentContext);\n            return connection.send(new SpeechConnectionMessage(MessageType.Text, \"speech.agent.context\", this.privRequestSession.requestId, \"application/json\", agentContextJson));\n        };\n        this.privDialogServiceConnector = dialogServiceConnector;\n        this.receiveMessageOverride = this.receiveDialogMessageOverride;\n        this.privTurnStateManager = new DialogServiceTurnStateManager();\n        this.recognizeOverride = this.listenOnce;\n        this.postConnectImplOverride = this.dialogConnectImpl;\n        this.configConnectionOverride = this.configConnection;\n        this.disconnectOverride = this.privDisconnect;\n        this.privDialogAudioSource = audioSource;\n        this.agentConfigSent = false;\n        this.privLastResult = null;\n    }\n    sendMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const interactionGuid = createGuid();\n            const requestId = createNoDashGuid();\n            const agentMessage = {\n                context: {\n                    interactionId: interactionGuid\n                },\n                messagePayload: JSON.parse(message),\n                version: 0.5\n            };\n            const agentMessageJson = JSON.stringify(agentMessage);\n            const connection = yield this.fetchConnection();\n            yield connection.send(new SpeechConnectionMessage(MessageType.Text, \"agent\", requestId, \"application/json\", agentMessageJson));\n        });\n    }\n    privDisconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.NoError, \"Disconnecting\");\n            this.terminateMessageLoop = true;\n            this.agentConfigSent = false;\n            return;\n        });\n    }\n    processTypeSpecificMessages(connectionMessage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resultProps = new PropertyCollection();\n            if (connectionMessage.messageType === MessageType.Text) {\n                resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\n            }\n            let result;\n            let processed;\n            switch (connectionMessage.path.toLowerCase()) {\n                case \"speech.phrase\":\n                    const speechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody);\n                    this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + speechPhrase.Offset + speechPhrase.Duration);\n                    if (speechPhrase.RecognitionStatus !== RecognitionStatus.TooManyRequests && speechPhrase.RecognitionStatus !== RecognitionStatus.Error) {\n                        const args = this.fireEventForResult(speechPhrase, resultProps);\n                        this.privLastResult = args.result;\n                        if (!!this.privDialogServiceConnector.recognized) {\n                            try {\n                                this.privDialogServiceConnector.recognized(this.privDialogServiceConnector, args);\n                                /* tslint:disable:no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                    }\n                    processed = true;\n                    break;\n                case \"speech.hypothesis\":\n                    const hypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody);\n                    const offset = hypothesis.Offset + this.privRequestSession.currentTurnAudioOffset;\n                    result = new SpeechRecognitionResult(this.privRequestSession.requestId, ResultReason.RecognizingSpeech, hypothesis.Text, hypothesis.Duration, offset, hypothesis.Language, hypothesis.LanguageDetectionConfidence, undefined, undefined, connectionMessage.textBody, resultProps);\n                    this.privRequestSession.onHypothesis(offset);\n                    const ev = new SpeechRecognitionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\n                    if (!!this.privDialogServiceConnector.recognizing) {\n                        try {\n                            this.privDialogServiceConnector.recognizing(this.privDialogServiceConnector, ev);\n                            /* tslint:disable:no-empty */\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                    processed = true;\n                    break;\n                case \"audio\":\n                    {\n                        const audioRequestId = connectionMessage.requestId.toUpperCase();\n                        const turn = this.privTurnStateManager.GetTurn(audioRequestId);\n                        try {\n                            // Empty binary message signals end of stream.\n                            if (!connectionMessage.binaryBody) {\n                                turn.endAudioStream();\n                            }\n                            else {\n                                turn.audioStream.write(connectionMessage.binaryBody);\n                            }\n                        }\n                        catch (error) {\n                            // Not going to let errors in the event handler\n                            // trip things up.\n                        }\n                    }\n                    processed = true;\n                    break;\n                case \"response\":\n                    {\n                        const responseRequestId = connectionMessage.requestId.toUpperCase();\n                        const activityPayload = ActivityPayloadResponse.fromJSON(connectionMessage.textBody);\n                        const turn = this.privTurnStateManager.GetTurn(responseRequestId);\n                        // update the conversation Id\n                        if (activityPayload.conversationId) {\n                            const updateAgentConfig = this.agentConfig.get();\n                            updateAgentConfig.botInfo.conversationId = activityPayload.conversationId;\n                            this.agentConfig.set(updateAgentConfig);\n                        }\n                        const pullAudioOutputStream = turn.processActivityPayload(activityPayload, SpeechSynthesisOutputFormat[this.privDialogServiceConnector.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)]);\n                        const activity = new ActivityReceivedEventArgs(activityPayload.messagePayload, pullAudioOutputStream);\n                        if (!!this.privDialogServiceConnector.activityReceived) {\n                            try {\n                                this.privDialogServiceConnector.activityReceived(this.privDialogServiceConnector, activity);\n                                /* tslint:disable:no-empty */\n                            }\n                            catch (error) {\n                                // Not going to let errors in the event handler\n                                // trip things up.\n                            }\n                        }\n                    }\n                    processed = true;\n                    break;\n                default:\n                    break;\n            }\n            return processed;\n        });\n    }\n    // Cancels recognition.\n    cancelRecognition(sessionId, requestId, cancellationReason, errorCode, error) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.terminateMessageLoop = true;\n            if (!!this.privRequestSession.isRecognizing) {\n                yield this.privRequestSession.onStopRecognizing();\n            }\n            if (!!this.privDialogServiceConnector.canceled) {\n                const properties = new PropertyCollection();\n                properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\n                const cancelEvent = new SpeechRecognitionCanceledEventArgs(cancellationReason, error, errorCode, undefined, sessionId);\n                try {\n                    this.privDialogServiceConnector.canceled(this.privDialogServiceConnector, cancelEvent);\n                    /* tslint:disable:no-empty */\n                }\n                catch (_a) { }\n                if (!!this.privSuccessCallback) {\n                    const result = new SpeechRecognitionResult(undefined, // ResultId\n                    ResultReason.Canceled, undefined, // Text\n                    undefined, // Duration\n                    undefined, // Offset\n                    undefined, // Language\n                    undefined, // Language Detection Confidence\n                    undefined, // Speaker Id\n                    error, undefined, // Json\n                    properties);\n                    try {\n                        this.privSuccessCallback(result);\n                        this.privSuccessCallback = undefined;\n                        /* tslint:disable:no-empty */\n                    }\n                    catch (_b) { }\n                }\n            }\n        });\n    }\n    listenOnce(recoMode, successCallback, errorCallback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.privRecognizerConfig.recognitionMode = recoMode;\n            this.privSuccessCallback = successCallback;\n            this.privErrorCallback = errorCallback;\n            this.privRequestSession.startNewRecognition();\n            this.privRequestSession.listenForServiceTelemetry(this.privDialogAudioSource.events);\n            this.privRecognizerConfig.parameters.setProperty(PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\n            // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\n            const conPromise = this.connectImpl();\n            const preAudioPromise = this.sendPreAudioMessages();\n            const node = yield this.privDialogAudioSource.attach(this.privRequestSession.audioNodeId);\n            const format = yield this.privDialogAudioSource.format;\n            const deviceInfo = yield this.privDialogAudioSource.deviceInfo;\n            const audioNode = new ReplayableAudioNode(node, format.avgBytesPerSec);\n            yield this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\n            this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\n            try {\n                yield conPromise;\n                yield preAudioPromise;\n            }\n            catch (error) {\n                yield this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.ConnectionFailure, error);\n                return Promise.resolve();\n            }\n            const sessionStartEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\n            if (!!this.privRecognizer.sessionStarted) {\n                this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\n            }\n            const audioSendPromise = this.sendAudio(audioNode);\n            // /* tslint:disable:no-empty */\n            audioSendPromise.then(() => { }, (error) => __awaiter(this, void 0, void 0, function* () {\n                yield this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\n            }));\n        });\n    }\n    // Establishes a websocket connection to the end point.\n    dialogConnectImpl(connection) {\n        this.privConnectionLoop = this.startMessageLoop();\n        return connection;\n    }\n    receiveDialogMessageOverride() {\n        // we won't rely on the cascading promises of the connection since we want to continually be available to receive messages\n        const communicationCustodian = new Deferred();\n        const loop = () => __awaiter(this, void 0, void 0, function* () {\n            try {\n                const isDisposed = this.isDisposed();\n                const terminateMessageLoop = (!this.isDisposed() && this.terminateMessageLoop);\n                if (isDisposed || terminateMessageLoop) {\n                    // We're done.\n                    communicationCustodian.resolve(undefined);\n                    return;\n                }\n                const connection = yield this.fetchConnection();\n                const message = yield connection.read();\n                if (!message) {\n                    return loop();\n                }\n                const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\n                switch (connectionMessage.path.toLowerCase()) {\n                    case \"turn.start\":\n                        {\n                            const turnRequestId = connectionMessage.requestId.toUpperCase();\n                            const audioSessionReqId = this.privRequestSession.requestId.toUpperCase();\n                            // turn started by the service\n                            if (turnRequestId !== audioSessionReqId) {\n                                this.privTurnStateManager.StartTurn(turnRequestId);\n                            }\n                            else {\n                                this.privRequestSession.onServiceTurnStartResponse();\n                            }\n                        }\n                        break;\n                    case \"speech.startdetected\":\n                        const speechStartDetected = SpeechDetected.fromJSON(connectionMessage.textBody);\n                        const speechStartEventArgs = new RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\n                        if (!!this.privRecognizer.speechStartDetected) {\n                            this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\n                        }\n                        break;\n                    case \"speech.enddetected\":\n                        let json;\n                        if (connectionMessage.textBody.length > 0) {\n                            json = connectionMessage.textBody;\n                        }\n                        else {\n                            // If the request was empty, the JSON returned is empty.\n                            json = \"{ Offset: 0 }\";\n                        }\n                        const speechStopDetected = SpeechDetected.fromJSON(json);\n                        this.privRequestSession.onServiceRecognized(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset);\n                        const speechStopEventArgs = new RecognitionEventArgs(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\n                        if (!!this.privRecognizer.speechEndDetected) {\n                            this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\n                        }\n                        break;\n                    case \"turn.end\":\n                        {\n                            const turnEndRequestId = connectionMessage.requestId.toUpperCase();\n                            const audioSessionReqId = this.privRequestSession.requestId.toUpperCase();\n                            // turn started by the service\n                            if (turnEndRequestId !== audioSessionReqId) {\n                                this.privTurnStateManager.CompleteTurn(turnEndRequestId);\n                            }\n                            else {\n                                // Audio session turn\n                                const sessionStopEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\n                                yield this.privRequestSession.onServiceTurnEndResponse(false);\n                                if (this.privRequestSession.isSpeechEnded) {\n                                    if (!!this.privRecognizer.sessionStopped) {\n                                        this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\n                                    }\n                                }\n                                // report result to promise.\n                                if (!!this.privSuccessCallback && this.privLastResult) {\n                                    try {\n                                        this.privSuccessCallback(this.privLastResult);\n                                        this.privLastResult = null;\n                                    }\n                                    catch (e) {\n                                        if (!!this.privErrorCallback) {\n                                            this.privErrorCallback(e);\n                                        }\n                                    }\n                                    // Only invoke the call back once.\n                                    // and if it's successful don't invoke the\n                                    // error after that.\n                                    this.privSuccessCallback = undefined;\n                                    this.privErrorCallback = undefined;\n                                }\n                            }\n                        }\n                        break;\n                    default:\n                        if (!this.processTypeSpecificMessages(connectionMessage)) {\n                            if (!!this.serviceEvents) {\n                                this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\n                            }\n                        }\n                }\n                const ret = loop();\n                return ret;\n            }\n            catch (error) {\n                this.terminateMessageLoop = true;\n                communicationCustodian.resolve();\n            }\n        });\n        loop().catch((reason) => {\n            Events.instance.onEvent(new BackgroundEvent(reason));\n        });\n        return communicationCustodian.promise;\n    }\n    startMessageLoop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.terminateMessageLoop = false;\n            try {\n                yield this.receiveDialogMessageOverride();\n            }\n            catch (error) {\n                yield this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\n            }\n            return Promise.resolve();\n        });\n    }\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\n    configConnection(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.terminateMessageLoop) {\n                this.terminateMessageLoop = false;\n                return Promise.reject(`Connection to service terminated.`);\n            }\n            yield this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\n            yield this.sendAgentConfig(connection);\n            return connection;\n        });\n    }\n    sendPreAudioMessages() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.fetchConnection();\n            yield this.sendAgentContext(connection);\n            yield this.sendWaveHeader(connection);\n        });\n    }\n    fireEventForResult(serviceResult, properties) {\n        const resultReason = EnumTranslation.implTranslateRecognitionResult(serviceResult.RecognitionStatus);\n        const offset = serviceResult.Offset + this.privRequestSession.currentTurnAudioOffset;\n        const result = new SpeechRecognitionResult(this.privRequestSession.requestId, resultReason, serviceResult.DisplayText, serviceResult.Duration, offset, serviceResult.Language, serviceResult.LanguageDetectionConfidence, undefined, undefined, JSON.stringify(serviceResult), properties);\n        const ev = new SpeechRecognitionEventArgs(result, offset, this.privRequestSession.sessionId);\n        return ev;\n    }\n}\n\n//# sourceMappingURL=DialogServiceAdapter.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ConsoleLoggingListener } from \"./src/common.browser/Exports\";\nimport { Events } from \"./src/common/Exports\";\n// Common.Storage.SetLocalStorage(new Common.Browser.LocalStorage());\n// Common.Storage.SetSessionStorage(new Common.Browser.SessionStorage());\nEvents.instance.attachListener(new ConsoleLoggingListener());\n// Speech SDK API\nexport * from \"./src/sdk/Exports\";\n\n//# sourceMappingURL=microsoft.cognitiveservices.speech.sdk.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { EventType } from \"../common/Exports\";\nexport class ConsoleLoggingListener {\n    constructor(logLevelFilter = EventType.Warning) {\n        this.onEvent = (event) => {\n            if (event.eventType >= this.privLogLevelFilter) {\n                const log = this.toString(event);\n                switch (event.eventType) {\n                    case EventType.Debug:\n                        // tslint:disable-next-line:no-console\n                        console.debug(log);\n                        break;\n                    case EventType.Info:\n                        // tslint:disable-next-line:no-console\n                        console.info(log);\n                        break;\n                    case EventType.Warning:\n                        // tslint:disable-next-line:no-console\n                        console.warn(log);\n                        break;\n                    case EventType.Error:\n                        // tslint:disable-next-line:no-console\n                        console.error(log);\n                        break;\n                    default:\n                        // tslint:disable-next-line:no-console\n                        console.log(log);\n                        break;\n                }\n            }\n        };\n        this.toString = (event) => {\n            const logFragments = [\n                `${event.EventTime}`,\n                `${event.Name}`,\n            ];\n            for (const prop in event) {\n                if (prop && event.hasOwnProperty(prop) &&\n                    prop !== \"eventTime\" && prop !== \"eventType\" &&\n                    prop !== \"eventId\" && prop !== \"name\" &&\n                    prop !== \"constructor\") {\n                    const value = event[prop];\n                    let valueToLog = \"<NULL>\";\n                    if (value !== undefined && value !== null) {\n                        if (typeof (value) === \"number\" || typeof (value) === \"string\") {\n                            valueToLog = value.toString();\n                        }\n                        else {\n                            valueToLog = JSON.stringify(value);\n                        }\n                    }\n                    logFragments.push(`${prop}: ${valueToLog}`);\n                }\n            }\n            return logFragments.join(\" | \");\n        };\n        this.privLogLevelFilter = logLevelFilter;\n    }\n}\n\n//# sourceMappingURL=ConsoleLoggingListener.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { AudioSourceErrorEvent, AudioStreamNodeAttachedEvent, AudioStreamNodeAttachingEvent, AudioStreamNodeDetachedEvent, AudioStreamNodeErrorEvent, ConnectionEstablishedEvent, ConnectionEstablishErrorEvent, ConnectionMessageReceivedEvent, ConnectionStartEvent, } from \"../common/Exports\";\nimport { ConnectingToServiceEvent, RecognitionTriggeredEvent } from \"./RecognitionEvents\";\n// tslint:disable-next-line:max-classes-per-file\nexport class ServiceTelemetryListener {\n    constructor(requestId, audioSourceId, audioNodeId) {\n        this.privIsDisposed = false;\n        this.privListeningTriggerMetric = null;\n        this.privMicMetric = null;\n        this.privConnectionEstablishMetric = null;\n        this.onEvent = (e) => {\n            if (this.privIsDisposed) {\n                return;\n            }\n            if (e instanceof RecognitionTriggeredEvent && e.requestId === this.privRequestId) {\n                this.privListeningTriggerMetric = {\n                    End: e.eventTime,\n                    Name: \"ListeningTrigger\",\n                    Start: e.eventTime,\n                };\n            }\n            if (e instanceof AudioStreamNodeAttachingEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\n                this.privMicStartTime = e.eventTime;\n            }\n            if (e instanceof AudioStreamNodeAttachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\n                this.privMicStartTime = e.eventTime;\n            }\n            if (e instanceof AudioSourceErrorEvent && e.audioSourceId === this.privAudioSourceId) {\n                if (!this.privMicMetric) {\n                    this.privMicMetric = {\n                        End: e.eventTime,\n                        Error: e.error,\n                        Name: \"Microphone\",\n                        Start: this.privMicStartTime,\n                    };\n                }\n            }\n            if (e instanceof AudioStreamNodeErrorEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\n                if (!this.privMicMetric) {\n                    this.privMicMetric = {\n                        End: e.eventTime,\n                        Error: e.error,\n                        Name: \"Microphone\",\n                        Start: this.privMicStartTime,\n                    };\n                }\n            }\n            if (e instanceof AudioStreamNodeDetachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\n                if (!this.privMicMetric) {\n                    this.privMicMetric = {\n                        End: e.eventTime,\n                        Name: \"Microphone\",\n                        Start: this.privMicStartTime,\n                    };\n                }\n            }\n            if (e instanceof ConnectingToServiceEvent && e.requestId === this.privRequestId) {\n                this.privConnectionId = e.sessionId;\n            }\n            if (e instanceof ConnectionStartEvent && e.connectionId === this.privConnectionId) {\n                this.privConnectionStartTime = e.eventTime;\n            }\n            if (e instanceof ConnectionEstablishedEvent && e.connectionId === this.privConnectionId) {\n                if (!this.privConnectionEstablishMetric) {\n                    this.privConnectionEstablishMetric = {\n                        End: e.eventTime,\n                        Id: this.privConnectionId,\n                        Name: \"Connection\",\n                        Start: this.privConnectionStartTime,\n                    };\n                }\n            }\n            if (e instanceof ConnectionEstablishErrorEvent && e.connectionId === this.privConnectionId) {\n                if (!this.privConnectionEstablishMetric) {\n                    this.privConnectionEstablishMetric = {\n                        End: e.eventTime,\n                        Error: this.getConnectionError(e.statusCode),\n                        Id: this.privConnectionId,\n                        Name: \"Connection\",\n                        Start: this.privConnectionStartTime,\n                    };\n                }\n            }\n            if (e instanceof ConnectionMessageReceivedEvent && e.connectionId === this.privConnectionId) {\n                if (e.message && e.message.headers && e.message.headers.path) {\n                    if (!this.privReceivedMessages[e.message.headers.path]) {\n                        this.privReceivedMessages[e.message.headers.path] = new Array();\n                    }\n                    this.privReceivedMessages[e.message.headers.path].push(e.networkReceivedTime);\n                }\n            }\n        };\n        this.getTelemetry = () => {\n            const metrics = new Array();\n            if (this.privListeningTriggerMetric) {\n                metrics.push(this.privListeningTriggerMetric);\n            }\n            if (this.privMicMetric) {\n                metrics.push(this.privMicMetric);\n            }\n            if (this.privConnectionEstablishMetric) {\n                metrics.push(this.privConnectionEstablishMetric);\n            }\n            if (this.privPhraseLatencies.length > 0) {\n                metrics.push({\n                    PhraseLatencyMs: this.privPhraseLatencies,\n                });\n            }\n            if (this.privHypothesisLatencies.length > 0) {\n                metrics.push({\n                    FirstHypothesisLatencyMs: this.privHypothesisLatencies,\n                });\n            }\n            const telemetry = {\n                Metrics: metrics,\n                ReceivedMessages: this.privReceivedMessages,\n            };\n            const json = JSON.stringify(telemetry);\n            // We dont want to send the same telemetry again. So clean those out.\n            this.privReceivedMessages = {};\n            this.privListeningTriggerMetric = null;\n            this.privMicMetric = null;\n            this.privConnectionEstablishMetric = null;\n            this.privPhraseLatencies = [];\n            this.privHypothesisLatencies = [];\n            return json;\n        };\n        this.dispose = () => {\n            this.privIsDisposed = true;\n        };\n        this.getConnectionError = (statusCode) => {\n            /*\n            -- Websocket status codes --\n            NormalClosure = 1000,\n            EndpointUnavailable = 1001,\n            ProtocolError = 1002,\n            InvalidMessageType = 1003,\n            Empty = 1005,\n            InvalidPayloadData = 1007,\n            PolicyViolation = 1008,\n            MessageTooBig = 1009,\n            MandatoryExtension = 1010,\n            InternalServerError = 1011\n            */\n            switch (statusCode) {\n                case 400:\n                case 1002:\n                case 1003:\n                case 1005:\n                case 1007:\n                case 1008:\n                case 1009: return \"BadRequest\";\n                case 401: return \"Unauthorized\";\n                case 403: return \"Forbidden\";\n                case 503:\n                case 1001: return \"ServerUnavailable\";\n                case 500:\n                case 1011: return \"ServerError\";\n                case 408:\n                case 504: return \"Timeout\";\n                default: return \"statuscode:\" + statusCode.toString();\n            }\n        };\n        this.privRequestId = requestId;\n        this.privAudioSourceId = audioSourceId;\n        this.privAudioNodeId = audioNodeId;\n        this.privReceivedMessages = {};\n        this.privPhraseLatencies = [];\n        this.privHypothesisLatencies = [];\n    }\n    phraseReceived(audioReceivedTime) {\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\n            this.privPhraseLatencies.push(Date.now() - audioReceivedTime);\n        }\n    }\n    hypothesisReceived(audioReceivedTime) {\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\n            this.privHypothesisLatencies.push(Date.now() - audioReceivedTime);\n        }\n    }\n    // Determines if there are any telemetry events to send to the service.\n    get hasTelemetry() {\n        return (Object.keys(this.privReceivedMessages).length !== 0 ||\n            this.privListeningTriggerMetric !== null ||\n            this.privMicMetric !== null ||\n            this.privConnectionEstablishMetric !== null ||\n            this.privPhraseLatencies.length !== 0 ||\n            this.privHypothesisLatencies.length !== 0);\n    }\n}\n\n//# sourceMappingURL=ServiceTelemetryListener.Internal.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createNoDashGuid, Deferred, Events } from \"../common/Exports\";\nimport { ConnectingToServiceEvent, ListeningStartedEvent, RecognitionStartedEvent, RecognitionTriggeredEvent, } from \"./RecognitionEvents\";\nimport { ServiceTelemetryListener } from \"./ServiceTelemetryListener.Internal\";\nexport class RequestSession {\n    constructor(audioSourceId) {\n        this.privIsDisposed = false;\n        this.privDetachables = new Array();\n        this.privIsAudioNodeDetached = false;\n        this.privIsRecognizing = false;\n        this.privIsSpeechEnded = false;\n        this.privTurnStartAudioOffset = 0;\n        this.privLastRecoOffset = 0;\n        this.privHypothesisReceived = false;\n        this.privBytesSent = 0;\n        this.privRecogNumber = 0;\n        this.privInTurn = false;\n        this.onPreConnectionStart = (authFetchEventId, connectionId) => {\n            this.privAuthFetchEventId = authFetchEventId;\n            this.privSessionId = connectionId;\n            this.onEvent(new ConnectingToServiceEvent(this.privRequestId, this.privAuthFetchEventId, this.privSessionId));\n        };\n        this.onServiceTurnStartResponse = () => {\n            if (!!this.privTurnDeferral && !!this.privInTurn) {\n                // What? How are we starting a turn with another not done?\n                this.privTurnDeferral.reject(\"Another turn started before current completed.\");\n            }\n            this.privInTurn = true;\n            this.privTurnDeferral = new Deferred();\n        };\n        this.getTelemetry = () => {\n            if (this.privServiceTelemetryListener.hasTelemetry) {\n                return this.privServiceTelemetryListener.getTelemetry();\n            }\n            else {\n                return null;\n            }\n        };\n        this.onEvent = (event) => {\n            if (!!this.privServiceTelemetryListener) {\n                this.privServiceTelemetryListener.onEvent(event);\n            }\n            Events.instance.onEvent(event);\n        };\n        this.privAudioSourceId = audioSourceId;\n        this.privRequestId = createNoDashGuid();\n        this.privAudioNodeId = createNoDashGuid();\n        this.privTurnDeferral = new Deferred();\n        // We're not in a turn, so resolve.\n        this.privTurnDeferral.resolve();\n    }\n    get sessionId() {\n        return this.privSessionId;\n    }\n    get requestId() {\n        return this.privRequestId;\n    }\n    get audioNodeId() {\n        return this.privAudioNodeId;\n    }\n    get turnCompletionPromise() {\n        return this.privTurnDeferral.promise;\n    }\n    get isSpeechEnded() {\n        return this.privIsSpeechEnded;\n    }\n    get isRecognizing() {\n        return this.privIsRecognizing;\n    }\n    get currentTurnAudioOffset() {\n        return this.privTurnStartAudioOffset;\n    }\n    get recogNumber() {\n        return this.privRecogNumber;\n    }\n    // The number of bytes sent for the current connection.\n    // Counter is reset to 0 each time a connection is established.\n    get bytesSent() {\n        return this.privBytesSent;\n    }\n    listenForServiceTelemetry(eventSource) {\n        if (!!this.privServiceTelemetryListener) {\n            this.privDetachables.push(eventSource.attachListener(this.privServiceTelemetryListener));\n        }\n    }\n    startNewRecognition() {\n        this.privIsSpeechEnded = false;\n        this.privIsRecognizing = true;\n        this.privTurnStartAudioOffset = 0;\n        this.privLastRecoOffset = 0;\n        this.privRequestId = createNoDashGuid();\n        this.privRecogNumber++;\n        this.privServiceTelemetryListener = new ServiceTelemetryListener(this.privRequestId, this.privAudioSourceId, this.privAudioNodeId);\n        this.onEvent(new RecognitionTriggeredEvent(this.requestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\n    }\n    onAudioSourceAttachCompleted(audioNode, isError, error) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.privAudioNode = audioNode;\n            this.privIsAudioNodeDetached = false;\n            if (isError) {\n                yield this.onComplete();\n            }\n            else {\n                this.onEvent(new ListeningStartedEvent(this.privRequestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\n            }\n        });\n    }\n    onAuthCompleted(isError, error) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isError) {\n                yield this.onComplete();\n            }\n        });\n    }\n    onConnectionEstablishCompleted(statusCode, reason) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (statusCode === 200) {\n                this.onEvent(new RecognitionStartedEvent(this.requestId, this.privAudioSourceId, this.privAudioNodeId, this.privAuthFetchEventId, this.privSessionId));\n                if (!!this.privAudioNode) {\n                    this.privAudioNode.replay();\n                }\n                this.privTurnStartAudioOffset = this.privLastRecoOffset;\n                this.privBytesSent = 0;\n                return;\n            }\n            else if (statusCode === 403) {\n                yield this.onComplete();\n            }\n        });\n    }\n    onServiceTurnEndResponse(continuousRecognition) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.privTurnDeferral.resolve();\n            if (!continuousRecognition || this.isSpeechEnded) {\n                yield this.onComplete();\n                this.privInTurn = false;\n            }\n            else {\n                // Start a new request set.\n                this.privTurnStartAudioOffset = this.privLastRecoOffset;\n                this.privRequestId = createNoDashGuid();\n                this.privAudioNode.replay();\n            }\n        });\n    }\n    onHypothesis(offset) {\n        if (!this.privHypothesisReceived) {\n            this.privHypothesisReceived = true;\n            this.privServiceTelemetryListener.hypothesisReceived(this.privAudioNode.findTimeAtOffset(offset));\n        }\n    }\n    onPhraseRecognized(offset) {\n        this.privServiceTelemetryListener.phraseReceived(this.privAudioNode.findTimeAtOffset(offset));\n        this.onServiceRecognized(offset);\n    }\n    onServiceRecognized(offset) {\n        this.privLastRecoOffset = offset;\n        this.privHypothesisReceived = false;\n        this.privAudioNode.shrinkBuffers(offset);\n    }\n    onAudioSent(bytesSent) {\n        this.privBytesSent += bytesSent;\n    }\n    dispose(error) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.privIsDisposed) {\n                // we should have completed by now. If we did not its an unknown error.\n                this.privIsDisposed = true;\n                for (const detachable of this.privDetachables) {\n                    yield detachable.detach();\n                }\n                this.privServiceTelemetryListener.dispose();\n                this.privIsRecognizing = false;\n            }\n        });\n    }\n    onStopRecognizing() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.onComplete();\n        });\n    }\n    // Should be called with the audioNode for this session has indicated that it is out of speech.\n    onSpeechEnded() {\n        this.privIsSpeechEnded = true;\n    }\n    onComplete() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!!this.privIsRecognizing) {\n                this.privIsRecognizing = false;\n                yield this.detachAudioNode();\n            }\n        });\n    }\n    detachAudioNode() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.privIsAudioNodeDetached) {\n                this.privIsAudioNodeDetached = true;\n                if (this.privAudioNode) {\n                    yield this.privAudioNode.detach();\n                }\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=RequestSession.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ArgumentNullError, Deferred } from \"../common/Exports\";\n// Node.JS specific xmlhttprequest / browser support.\nimport * as XHR from \"xmlhttprequest-ts\";\nexport var RestRequestType;\n(function (RestRequestType) {\n    RestRequestType[\"Get\"] = \"get\";\n    RestRequestType[\"Post\"] = \"post\";\n    RestRequestType[\"Delete\"] = \"delete\";\n    RestRequestType[\"File\"] = \"file\";\n})(RestRequestType || (RestRequestType = {}));\n// accept rest operations via request method and return abstracted objects from server response\nexport class RestMessageAdapter {\n    constructor(configParams, connectionId) {\n        if (!configParams) {\n            throw new ArgumentNullError(\"configParams\");\n        }\n        this.privHeaders = configParams.headers;\n        this.privTimeout = configParams.timeout;\n        this.privIgnoreCache = configParams.ignoreCache;\n    }\n    setHeaders(key, value) {\n        this.privHeaders[key] = value;\n    }\n    request(method, uri, queryParams = {}, body = null, binaryBody = null) {\n        const responseReceivedDeferral = new Deferred();\n        let xhr;\n        if (typeof (XMLHttpRequest) === \"undefined\") {\n            xhr = new XHR.XMLHttpRequest();\n        }\n        else {\n            xhr = new XMLHttpRequest();\n        }\n        const requestCommand = method === RestRequestType.File ? \"post\" : method;\n        xhr.open(requestCommand, this.withQuery(uri, queryParams), true);\n        if (this.privHeaders) {\n            Object.keys(this.privHeaders).forEach((key) => xhr.setRequestHeader(key, this.privHeaders[key]));\n        }\n        if (this.privIgnoreCache) {\n            xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n        }\n        xhr.timeout = this.privTimeout;\n        xhr.onload = () => {\n            responseReceivedDeferral.resolve(this.parseXHRResult(xhr));\n        };\n        xhr.onerror = () => {\n            responseReceivedDeferral.resolve(this.errorResponse(xhr, \"Failed to make request.\"));\n        };\n        xhr.ontimeout = () => {\n            responseReceivedDeferral.resolve(this.errorResponse(xhr, \"Request took longer than expected.\"));\n        };\n        if (method === RestRequestType.File && binaryBody) {\n            xhr.setRequestHeader(\"Content-Type\", \"multipart/form-data\");\n            xhr.send(binaryBody);\n        }\n        else if (method === RestRequestType.Post && body) {\n            xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n            xhr.send(JSON.stringify(body));\n        }\n        else {\n            xhr.send();\n        }\n        return responseReceivedDeferral.promise;\n    }\n    parseXHRResult(xhr) {\n        return {\n            data: xhr.responseText,\n            headers: xhr.getAllResponseHeaders(),\n            json: () => JSON.parse(xhr.responseText),\n            ok: xhr.status >= 200 && xhr.status < 300,\n            status: xhr.status,\n            statusText: xhr.statusText,\n        };\n    }\n    errorResponse(xhr, message = null) {\n        return {\n            data: message || xhr.statusText,\n            headers: xhr.getAllResponseHeaders(),\n            json: () => JSON.parse(message || (\"\\\"\" + xhr.statusText + \"\\\"\")),\n            ok: false,\n            status: xhr.status,\n            statusText: xhr.statusText,\n        };\n    }\n    withQuery(url, params = {}) {\n        const queryString = this.queryParams(params);\n        return queryString ? url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + queryString : url;\n    }\n    queryParams(params = {}) {\n        return Object.keys(params)\n            .map((k) => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k]))\n            .join(\"&\");\n    }\n}\n\n//# sourceMappingURL=RestMessageAdapter.js.map\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { RestConfigBase, RestMessageAdapter, RestRequestType, } from \"../common.browser/Exports\";\nimport { PropertyId, VoiceProfileType, } from \"../sdk/Exports\";\n/**\n * Implements methods for speaker recognition classes, sending requests to endpoint\n * and parsing response into expected format\n * @class SpeakerIdMessageAdapter\n */\nexport class SpeakerIdMessageAdapter {\n    constructor(config) {\n        let endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\n        if (!endpoint) {\n            const region = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, \"westus\");\n            const hostSuffix = (region && region.toLowerCase().startsWith(\"china\")) ? \".azure.cn\" : \".microsoft.com\";\n            const host = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"https://\" + region + \".api.cognitive\" + hostSuffix + \"/speaker/{mode}/v2.0/{dependency}\");\n            endpoint = host + \"/profiles\";\n        }\n        this.privUri = endpoint;\n        const options = RestConfigBase.requestOptions;\n        options.headers[RestConfigBase.configParams.subscriptionKey] = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\n        this.privRestAdapter = new RestMessageAdapter(options);\n    }\n    /**\n     * Sends create profile request to endpoint.\n     * @function\n     * @param {VoiceProfileType} profileType - type of voice profile to create.\n     * @param {string} lang - language/locale of voice profile\n     * @public\n     * @returns {Promise<IRestResponse>} promised rest response containing id of created profile.\n     */\n    createProfile(profileType, lang) {\n        const uri = this.getOperationUri(profileType);\n        this.privRestAdapter.setHeaders(RestConfigBase.configParams.contentTypeKey, \"application/json\");\n        return this.privRestAdapter.request(RestRequestType.Post, uri, {}, { locale: lang });\n    }\n    /**\n     * Sends create enrollment request to endpoint.\n     * @function\n     * @param {VoiceProfile} profileType - voice profile for which to create new enrollment.\n     * @param {IAudioSource} audioSource - audioSource from which to pull data to send\n     * @public\n     * @returns {Promise<IRestResponse>} rest response to enrollment request.\n     */\n    createEnrollment(profile, audioSource) {\n        this.privRestAdapter.setHeaders(RestConfigBase.configParams.contentTypeKey, \"multipart/form-data\");\n        const uri = this.getOperationUri(profile.profileType) + \"/\" + profile.profileId + \"/enrollments\";\n        return audioSource.blob.then((result) => {\n            return this.privRestAdapter.request(RestRequestType.File, uri, { ignoreMinLength: \"true\" }, null, result);\n        });\n    }\n    /**\n     * Sends verification request to endpoint.\n     * @function\n     * @param {SpeakerVerificationModel} model - voice model to verify against.\n     * @param {IAudioSource} audioSource - audioSource from which to pull data to send\n     * @public\n     * @returns {Promise<IRestResponse>} rest response to enrollment request.\n     */\n    verifySpeaker(model, audioSource) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.privRestAdapter.setHeaders(RestConfigBase.configParams.contentTypeKey, \"multipart/form-data\");\n            const uri = this.getOperationUri(model.voiceProfile.profileType) + \"/\" + model.voiceProfile.profileId + \"/verify\";\n            try {\n                const result = yield audioSource.blob;\n                return this.privRestAdapter.request(RestRequestType.File, uri, { ignoreMinLength: \"true\" }, null, result);\n            }\n            catch (e) {\n                return Promise.resolve({ data: e });\n            }\n        });\n    }\n    /**\n     * Sends identification request to endpoint.\n     * @function\n     * @param {SpeakerIdentificationModel} model - voice profiles against which to identify.\n     * @param {IAudioSource} audioSource - audioSource from which to pull data to send\n     * @public\n     * @returns {Promise<IRestResponse>} rest response to enrollment request.\n     */\n    identifySpeaker(model, audioSource) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.privRestAdapter.setHeaders(RestConfigBase.configParams.contentTypeKey, \"multipart/form-data\");\n            const uri = this.getOperationUri(VoiceProfileType.TextIndependentIdentification) + \"/identifySingleSpeaker\";\n            try {\n                const result = yield audioSource.blob;\n                return this.privRestAdapter.request(RestRequestType.File, uri, { profileIds: model.voiceProfileIds, ignoreMinLength: \"true\" }, null, result);\n            }\n            catch (e) {\n                return Promise.resolve({ data: e });\n            }\n        });\n    }\n    /**\n     * Sends delete profile request to endpoint.\n     * @function\n     * @param {VoiceProfile} profile - voice profile to delete.\n     * @public\n     * @returns {Promise<IRestResponse>} rest response to deletion request\n     */\n    deleteProfile(profile) {\n        const uri = this.getOperationUri(profile.profileType) + \"/\" + profile.profileId;\n        return this.privRestAdapter.request(RestRequestType.Delete, uri, {});\n    }\n    /**\n     * Sends reset profile request to endpoint.\n     * @function\n     * @param {VoiceProfile} profile - voice profile to reset enrollments for.\n     * @public\n     * @returns {Promise<IRestResponse>} rest response to reset request\n     */\n    resetProfile(profile) {\n        const uri = this.getOperationUri(profile.profileType) + \"/\" + profile.profileId + \"/reset\";\n        return this.privRestAdapter.request(RestRequestType.Post, uri, {});\n    }\n    getOperationUri(profileType) {\n        const mode = profileType === VoiceProfileType.TextIndependentIdentification ? \"identification\" : \"verification\";\n        const dependency = profileType === VoiceProfileType.TextDependentVerification ? \"text-dependent\" : \"text-independent\";\n        return this.privUri.replace(\"{mode}\", mode).replace(\"{dependency}\", dependency);\n    }\n}\n\n//# sourceMappingURL=SpeakerIdMessageAdapter.js.map\n","var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n      case \"[object BigInt64Array]\":\n        return \"bigint64\"\n      case \"[object BigUint64Array]\":\n        return \"biguint64\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"bigint64\": [],\n  \"biguint64\": [],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as tls from \"tls\";\nimport * as url from \"url\";\nimport * as ocsp from \"../../external/ocsp/ocsp\";\nimport { Events, OCSPCacheEntryExpiredEvent, OCSPCacheEntryNeedsRefreshEvent, OCSPCacheFetchErrorEvent, OCSPCacheHitEvent, OCSPCacheMissEvent, OCSPCacheUpdatehCompleteEvent, OCSPCacheUpdateNeededEvent, OCSPDiskCacheHitEvent, OCSPDiskCacheStoreEvent, OCSPMemoryCacheHitEvent, OCSPMemoryCacheStoreEvent, OCSPResponseRetrievedEvent, OCSPStapleReceivedEvent, OCSPVerificationFailedEvent } from \"../common/Exports\";\nimport Agent from \"agent-base\";\n// @ts-ignore\nimport Cache from \"async-disk-cache\";\nimport HttpsProxyAgent from \"https-proxy-agent\";\nimport * as net from \"net\";\nimport { OCSPCacheUpdateErrorEvent } from \"../common/OCSPEvents\";\nexport class CertCheckAgent {\n    constructor(proxyInfo) {\n        if (!!proxyInfo) {\n            this.privProxyInfo = proxyInfo;\n        }\n        // Initialize this here to allow tests to set the env variable before the cache is constructed.\n        if (!CertCheckAgent.privDiskCache) {\n            CertCheckAgent.privDiskCache = new Cache(\"microsoft-cognitiveservices-speech-sdk-cache\", { supportBuffer: true, location: (typeof process !== \"undefined\" && !!process.env.SPEECH_OCSP_CACHE_ROOT) ? process.env.SPEECH_OCSP_CACHE_ROOT : undefined });\n        }\n    }\n    // Test hook to force the disk cache to be recreated.\n    static forceReinitDiskCache() {\n        CertCheckAgent.privDiskCache = undefined;\n        CertCheckAgent.privMemCache = {};\n    }\n    GetAgent(disableStapling) {\n        const agent = new Agent.Agent(this.CreateConnection);\n        if (this.privProxyInfo !== undefined &&\n            this.privProxyInfo.HostName !== undefined &&\n            this.privProxyInfo.Port > 0) {\n            const proxyName = \"privProxyInfo\";\n            agent[proxyName] = this.privProxyInfo;\n        }\n        return agent;\n    }\n    static GetProxyAgent(proxyInfo) {\n        const httpProxyOptions = {\n            host: proxyInfo.HostName,\n            port: proxyInfo.Port,\n        };\n        if (!!proxyInfo.UserName) {\n            httpProxyOptions.headers = {\n                \"Proxy-Authentication\": \"Basic \" + new Buffer(proxyInfo.UserName + \":\" + (proxyInfo.Password === undefined) ? \"\" : proxyInfo.Password).toString(\"base64\"),\n            };\n        }\n        else {\n            httpProxyOptions.headers = {};\n        }\n        httpProxyOptions.headers.requestOCSP = \"true\";\n        const httpProxyAgent = new HttpsProxyAgent(httpProxyOptions);\n        return httpProxyAgent;\n    }\n    static OCSPCheck(socketPromise, proxyInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ocspRequest;\n            let stapling;\n            let resolved = false;\n            const socket = yield socketPromise;\n            socket.cork();\n            const tlsSocket = socket;\n            return new Promise((resolve, reject) => {\n                socket.on(\"OCSPResponse\", (data) => {\n                    if (!!data) {\n                        this.onEvent(new OCSPStapleReceivedEvent());\n                        stapling = data;\n                    }\n                });\n                socket.on(\"error\", (error) => {\n                    if (!resolved) {\n                        resolved = true;\n                        socket.destroy();\n                        reject(error);\n                    }\n                });\n                tlsSocket.on(\"secure\", () => __awaiter(this, void 0, void 0, function* () {\n                    const peer = tlsSocket.getPeerCertificate(true);\n                    try {\n                        const issuer = yield this.GetIssuer(peer);\n                        // We always need a request to verify the response.\n                        ocspRequest = ocsp.request.generate(peer.raw, issuer.raw);\n                        // Do we have a result for this certificate in our memory cache?\n                        const sig = ocspRequest.id.toString(\"hex\");\n                        // Stapled response trumps cached response.\n                        if (!stapling) {\n                            const cacheEntry = yield CertCheckAgent.GetResponseFromCache(sig, ocspRequest, proxyInfo);\n                            stapling = cacheEntry;\n                        }\n                        yield this.VerifyOCSPResponse(stapling, ocspRequest, proxyInfo);\n                        socket.uncork();\n                        resolved = true;\n                        resolve(socket);\n                    }\n                    catch (e) {\n                        socket.destroy();\n                        resolved = true;\n                        reject(e);\n                    }\n                }));\n            });\n        });\n    }\n    static GetIssuer(peer) {\n        if (peer.issuerCertificate) {\n            return Promise.resolve(peer.issuerCertificate);\n        }\n        return new Promise((resolve, reject) => {\n            const ocspAgent = new ocsp.Agent({});\n            ocspAgent.fetchIssuer(peer, null, (error, value) => {\n                if (!!error) {\n                    reject(error);\n                    return;\n                }\n                resolve(value);\n            });\n        });\n    }\n    static GetResponseFromCache(signature, ocspRequest, proxyInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let cachedResponse = CertCheckAgent.privMemCache[signature];\n            if (!!cachedResponse) {\n                this.onEvent(new OCSPMemoryCacheHitEvent(signature));\n            }\n            // Do we have a result for this certificate on disk in %TMP%?\n            if (!cachedResponse) {\n                try {\n                    const diskCacheResponse = yield CertCheckAgent.privDiskCache.get(signature);\n                    if (!!diskCacheResponse.isCached) {\n                        CertCheckAgent.onEvent(new OCSPDiskCacheHitEvent(signature));\n                        CertCheckAgent.StoreMemoryCacheEntry(signature, diskCacheResponse.value);\n                        cachedResponse = diskCacheResponse.value;\n                    }\n                }\n                catch (error) {\n                    cachedResponse = null;\n                }\n            }\n            if (!cachedResponse) {\n                return cachedResponse;\n            }\n            try {\n                const cachedOcspResponse = ocsp.utils.parseResponse(cachedResponse);\n                const tbsData = cachedOcspResponse.value.tbsResponseData;\n                if (tbsData.responses.length < 1) {\n                    this.onEvent(new OCSPCacheFetchErrorEvent(signature, \"Not enough data in cached response\"));\n                    return;\n                }\n                const cachedStartTime = tbsData.responses[0].thisUpdate;\n                const cachedNextTime = tbsData.responses[0].nextUpdate;\n                if (cachedNextTime < (Date.now() + this.testTimeOffset - 60000)) {\n                    // Cached entry has expired.\n                    this.onEvent(new OCSPCacheEntryExpiredEvent(signature, cachedNextTime));\n                    cachedResponse = null;\n                }\n                else {\n                    // If we're within one day of the next update, or 50% of the way through the validity period,\n                    // background an update to the cache.\n                    const minUpdate = Math.min(24 * 60 * 60 * 1000, (cachedNextTime - cachedStartTime) / 2);\n                    if ((cachedNextTime - (Date.now() + this.testTimeOffset)) < minUpdate) {\n                        this.onEvent(new OCSPCacheEntryNeedsRefreshEvent(signature, cachedStartTime, cachedNextTime));\n                        this.UpdateCache(ocspRequest, proxyInfo).catch((error) => {\n                            // Well, not much we can do here.\n                            this.onEvent(new OCSPCacheUpdateErrorEvent(signature, error.toString()));\n                        });\n                    }\n                    else {\n                        this.onEvent(new OCSPCacheHitEvent(signature, cachedStartTime, cachedNextTime));\n                    }\n                }\n            }\n            catch (error) {\n                this.onEvent(new OCSPCacheFetchErrorEvent(signature, error));\n                cachedResponse = null;\n            }\n            if (!cachedResponse) {\n                this.onEvent(new OCSPCacheMissEvent(signature));\n            }\n            return cachedResponse;\n        });\n    }\n    static VerifyOCSPResponse(cacheValue, ocspRequest, proxyInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ocspResponse = cacheValue;\n            const sig = ocspRequest.certID.toString(\"hex\");\n            // Do we have a valid response?\n            if (!ocspResponse) {\n                ocspResponse = yield CertCheckAgent.GetOCSPResponse(ocspRequest, proxyInfo);\n            }\n            return new Promise((resolve, reject) => {\n                ocsp.verify({ request: ocspRequest, response: ocspResponse }, (error, result) => {\n                    if (!!error) {\n                        CertCheckAgent.onEvent(new OCSPVerificationFailedEvent(ocspRequest.id.toString(\"hex\"), error));\n                        // Bad Cached Value? One more try without the cache.\n                        if (!!cacheValue) {\n                            this.VerifyOCSPResponse(null, ocspRequest, proxyInfo).then(() => {\n                                resolve();\n                            }, (error) => {\n                                reject(error);\n                            });\n                        }\n                        else {\n                            reject(error);\n                        }\n                    }\n                    else {\n                        if (!cacheValue) {\n                            CertCheckAgent.StoreCacheEntry(ocspRequest.id.toString(\"hex\"), ocspResponse);\n                        }\n                        resolve();\n                    }\n                });\n            });\n        });\n    }\n    static UpdateCache(req, proxyInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const signature = req.id.toString(\"hex\");\n            this.onEvent(new OCSPCacheUpdateNeededEvent(signature));\n            const rawResponse = yield this.GetOCSPResponse(req, proxyInfo);\n            this.StoreCacheEntry(signature, rawResponse);\n            this.onEvent(new OCSPCacheUpdatehCompleteEvent(req.id.toString(\"hex\")));\n        });\n    }\n    static StoreCacheEntry(sig, rawResponse) {\n        this.StoreMemoryCacheEntry(sig, rawResponse);\n        this.StoreDiskCacheEntry(sig, rawResponse);\n    }\n    static StoreMemoryCacheEntry(sig, rawResponse) {\n        this.privMemCache[sig] = rawResponse;\n        this.onEvent(new OCSPMemoryCacheStoreEvent(sig));\n    }\n    static StoreDiskCacheEntry(sig, rawResponse) {\n        this.privDiskCache.set(sig, rawResponse).then(() => {\n            this.onEvent(new OCSPDiskCacheStoreEvent(sig));\n        });\n    }\n    static GetOCSPResponse(req, proxyInfo) {\n        const ocspMethod = \"1.3.6.1.5.5.7.48.1\";\n        let options = {};\n        if (!!proxyInfo) {\n            const agent = CertCheckAgent.GetProxyAgent(proxyInfo);\n            options.agent = agent;\n        }\n        return new Promise((resolve, reject) => {\n            ocsp.utils.getAuthorityInfo(req.cert, ocspMethod, (error, uri) => {\n                if (error) {\n                    reject(error);\n                    return;\n                }\n                const parsedUri = url.parse(uri);\n                options = Object.assign(Object.assign({}, options), parsedUri);\n                ocsp.utils.getResponse(options, req.data, (error, raw) => {\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    this.onEvent(new OCSPResponseRetrievedEvent(req.certID.toString(\"hex\")));\n                    resolve(raw);\n                });\n            });\n        });\n    }\n    CreateConnection(request, options) {\n        const enableOCSP = (typeof process !== \"undefined\" && process.env.NODE_TLS_REJECT_UNAUTHORIZED !== \"0\" && process.env.SPEECH_CONDUCT_OCSP_CHECK !== \"0\") && options.secureEndpoint;\n        let socketPromise;\n        options = Object.assign(Object.assign({}, options), {\n            requestOCSP: !CertCheckAgent.forceDisableOCSPStapling,\n            servername: options.host\n        });\n        if (!!this.privProxyInfo) {\n            const httpProxyAgent = CertCheckAgent.GetProxyAgent(this.privProxyInfo);\n            const baseAgent = httpProxyAgent;\n            socketPromise = new Promise((resolve, reject) => {\n                baseAgent.callback(request, options, (error, socket) => {\n                    if (!!error) {\n                        reject(error);\n                    }\n                    else {\n                        resolve(socket);\n                    }\n                });\n            });\n        }\n        else {\n            if (!!options.secureEndpoint) {\n                socketPromise = Promise.resolve(tls.connect(options));\n            }\n            else {\n                socketPromise = Promise.resolve(net.connect(options));\n            }\n        }\n        if (!!enableOCSP) {\n            return CertCheckAgent.OCSPCheck(socketPromise, this.privProxyInfo);\n        }\n        else {\n            return socketPromise;\n        }\n    }\n}\n// Test hook to enable forcing expiration / refresh to happen.\nCertCheckAgent.testTimeOffset = 0;\n// Test hook to disable stapling for cache testing.\nCertCheckAgent.forceDisableOCSPStapling = false;\n// An in memory cache for recived responses.\nCertCheckAgent.privMemCache = {};\nCertCheckAgent.onEvent = (event) => {\n    Events.instance.onEvent(event);\n};\n\n//# sourceMappingURL=CertChecks.js.map\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { InvalidOperationError } from \"./Error\";\nimport { createNoDashGuid } from \"./Guid\";\nimport { Queue } from \"./Queue\";\nexport class Stream {\n    constructor(streamId) {\n        this.privIsWriteEnded = false;\n        this.privIsReadEnded = false;\n        this.read = () => {\n            if (this.privIsReadEnded) {\n                throw new InvalidOperationError(\"Stream read has already finished\");\n            }\n            return this.privReaderQueue\n                .dequeue()\n                .then((streamChunk) => __awaiter(this, void 0, void 0, function* () {\n                if (streamChunk === undefined || streamChunk.isEnd) {\n                    yield this.privReaderQueue.dispose(\"End of stream reached\");\n                }\n                return streamChunk;\n            }));\n        };\n        this.readEnded = () => {\n            if (!this.privIsReadEnded) {\n                this.privIsReadEnded = true;\n                this.privReaderQueue = new Queue();\n            }\n        };\n        this.throwIfClosed = () => {\n            if (this.privIsWriteEnded) {\n                throw new InvalidOperationError(\"Stream closed\");\n            }\n        };\n        this.privId = streamId ? streamId : createNoDashGuid();\n        this.privReaderQueue = new Queue();\n    }\n    get isClosed() {\n        return this.privIsWriteEnded;\n    }\n    get isReadEnded() {\n        return this.privIsReadEnded;\n    }\n    get id() {\n        return this.privId;\n    }\n    close() {\n        if (!this.privIsWriteEnded) {\n            this.writeStreamChunk({\n                buffer: null,\n                isEnd: true,\n                timeReceived: Date.now(),\n            });\n            this.privIsWriteEnded = true;\n        }\n    }\n    writeStreamChunk(streamChunk) {\n        this.throwIfClosed();\n        if (!this.privReaderQueue.isDisposed()) {\n            try {\n                this.privReaderQueue.enqueue(streamChunk);\n            }\n            catch (e) {\n                // Do nothing\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=Stream.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { MessageType } from \"./ConnectionMessage\";\nimport { ArgumentNullError, InvalidOperationError } from \"./Error\";\nimport { createNoDashGuid } from \"./Guid\";\nexport class RawWebsocketMessage {\n    constructor(messageType, payload, id) {\n        this.privPayload = null;\n        if (!payload) {\n            throw new ArgumentNullError(\"payload\");\n        }\n        if (messageType === MessageType.Binary && payload.__proto__.constructor.name !== \"ArrayBuffer\") {\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\n        }\n        if (messageType === MessageType.Text && !(typeof (payload) === \"string\")) {\n            throw new InvalidOperationError(\"Payload must be a string\");\n        }\n        this.privMessageType = messageType;\n        this.privPayload = payload;\n        this.privId = id ? id : createNoDashGuid();\n    }\n    get messageType() {\n        return this.privMessageType;\n    }\n    get payload() {\n        return this.privPayload;\n    }\n    get textContent() {\n        if (this.privMessageType === MessageType.Binary) {\n            throw new InvalidOperationError(\"Not supported for binary message\");\n        }\n        return this.privPayload;\n    }\n    get binaryContent() {\n        if (this.privMessageType === MessageType.Text) {\n            throw new InvalidOperationError(\"Not supported for text message\");\n        }\n        return this.privPayload;\n    }\n    get id() {\n        return this.privId;\n    }\n}\n\n//# sourceMappingURL=RawWebsocketMessage.js.map\n","\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","/**\r\n * @file CustomElement.ts\r\n * @author Josh Greifer <joshgreifer@gmail.com>\r\n * @copyright © 2020 Josh Greifer\r\n * @licence\r\n * Copyright © 2020 Josh Greifer\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n * @summary Sample custom element tobe used as a template\r\n * This is part of my Typescript express starter application,  which provides\r\n * very minimal skeleton code for custom HTML tags, simple paging, and API access.\r\n *\r\n * The starter application was designed to be as lean as possible - its only dependencies\r\n * are express and eventemitter3.\r\n *\r\n */\r\nexport class CustomElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        const shadow = this.attachShadow({ mode: 'open' }); // sets and returns 'this.shadowRoot'\r\n        const el = document.createElement('div');\r\n        const style = document.createElement('style');\r\n        // noinspection CssInvalidPropertyValue\r\n        const my_height = 100; // example of how to interpolate value in style\r\n        const n_cols = 4;\r\n        const n_rows = 4;\r\n        el.innerText = this.hasAttribute('value') ? this.getAttribute('value') : '(value)';\r\n        el.className = 'private-style1';\r\n        // noinspection CssInvalidFunction,CssInvalidPropertyValue\r\n        style.textContent = `\r\n        .private-style1 {\r\n            height: ${my_height + 20}px;\r\n            background-image: linear-gradient(#529610, #2f5609);\r\n            display: grid;\r\n            margin: 10px;\r\n        }\r\n         \r\n        .grid {\r\n            background-image: linear-gradient(#529610, #2f5609);\r\n            display: grid;\r\n            row-gap: 0;\r\n            column-gap: 0;\r\n            gap: 0;\r\n            grid-template-columns: repeat(${n_cols}, auto);\r\n            grid-template-rows: repeat(${n_rows}, auto);\r\n        }\r\n\r\n`;\r\n        shadow.append(style, el);\r\n    }\r\n}\r\n//# sourceMappingURL=CustomElement.js.map","export var DashStyle;\r\n(function (DashStyle) {\r\n    DashStyle[DashStyle[\"Dash\"] = 0] = \"Dash\";\r\n    DashStyle[DashStyle[\"DashDot\"] = 1] = \"DashDot\";\r\n    DashStyle[DashStyle[\"DashDotDot\"] = 2] = \"DashDotDot\";\r\n    DashStyle[DashStyle[\"Dot\"] = 3] = \"Dot\";\r\n    DashStyle[DashStyle[\"Solid\"] = 4] = \"Solid\";\r\n    DashStyle[DashStyle[\"Custom\"] = 5] = \"Custom\";\r\n})(DashStyle || (DashStyle = {}));\r\nexport class Pen {\r\n    constructor(color) {\r\n        this.Color = color;\r\n        this.Width = .5;\r\n    }\r\n}\r\nexport class Rect {\r\n    constructor(x, y, w, h) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = w;\r\n        this.height = h;\r\n    }\r\n    get right() {\r\n        return this.x + this.width;\r\n    }\r\n    set right(v) {\r\n        this.width = v - this.x;\r\n    }\r\n    get bottom() {\r\n        return this.y + this.height;\r\n    }\r\n    set bottom(v) {\r\n        this.height = v - this.y;\r\n    }\r\n    get Center() { return { x: this.x + this.width / 2, y: this.y + this.height / 2 }; }\r\n    Contains(x, y) {\r\n        return x >= this.x && y >= this.y && x <= this.right && y <= this.bottom;\r\n    }\r\n    Equals(r) {\r\n        return r.x === this.x && r.y === this.y && r.width === this.width && r.height === this.height;\r\n    }\r\n    AssignFrom(r) {\r\n        this.x = r.x;\r\n        this.y = r.y;\r\n        this.width = r.width;\r\n        this.height = r.height;\r\n    }\r\n    Clone() {\r\n        return new Rect(this.x, this.y, this.width, this.height);\r\n    }\r\n}\r\nexport class TransformMatrix {\r\n}\r\nexport class GCH {\r\n    static setClip(ctx, r) {\r\n        ctx.rect(r.x, r.y, r.width, r.height);\r\n        ctx.clip();\r\n    }\r\n    /*\r\n    Convert between source rect and affine transformation matrix\r\n    The destination matrix is\r\n    a b 0\r\n    c d 0\r\n    e f 1\r\n    Where e and f are x and y translation,\r\n\r\n    and | a b |\r\n        | c d |  is the scale/skew sub-matrix.\r\n     */\r\n    static GetWorldToGraphicTransform(graph_rect, world_rect) {\r\n        const xscale = graph_rect.width / world_rect.width;\r\n        const yscale = graph_rect.height / world_rect.height;\r\n        return {\r\n            a: xscale,\r\n            b: 0.0,\r\n            c: 0.0,\r\n            d: yscale,\r\n            e: graph_rect.x - (world_rect.x * xscale),\r\n            f: graph_rect.y - (world_rect.y * yscale)\r\n        };\r\n    }\r\n    static ApplyTransform(ctx, xform) {\r\n        ctx.setTransform(xform.a, xform.b, xform.c, xform.d, xform.e, xform.f);\r\n    }\r\n    static SetTransformRect(ctx, dest_rect, src_rect) {\r\n        const xform = GCH.GetWorldToGraphicTransform(dest_rect, src_rect);\r\n        GCH.ApplyTransform(ctx, xform);\r\n        return xform;\r\n    }\r\n    static SetOrigin(ctx, x, y) {\r\n        ctx.setTransform(1, 0, 0, 1, x, y);\r\n    }\r\n    static SetIdentityTransform(ctx) {\r\n        // Set to identity transform\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    }\r\n    static FillRectangleCoords(ctx, color, x, y, w, h) {\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(x, y, w, h);\r\n    }\r\n    static FillRectangle(ctx, color, r) {\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(r.x, r.y, r.width, r.height);\r\n    }\r\n    static FillEllipse(ctx, color, cx, cy, rx, ry) {\r\n        const context = ctx;\r\n        context.save(); // save state\r\n        context.beginPath();\r\n        context.translate(cx - rx, cy - ry);\r\n        context.scale(rx, ry);\r\n        context.arc(1, 1, 1, 0, 2 * Math.PI, false);\r\n        context.restore(); // restore to original state\r\n        //       context.stroke();\r\n        context.fillStyle = color;\r\n        context.fill();\r\n    }\r\n    static FillCircle(ctx, color, cx, cy, r) {\r\n        const context = ctx;\r\n        context.save(); // save state\r\n        context.beginPath();\r\n        context.translate(cx - r, cy - r);\r\n        context.scale(r, r);\r\n        context.arc(1, 1, 1, 0, 2 * Math.PI, false);\r\n        context.restore(); // restore to original state\r\n        //       context.stroke();\r\n        context.fillStyle = color;\r\n        context.fill();\r\n    }\r\n    static DrawCircle(ctx, color, cx, cy, r) {\r\n        const context = ctx;\r\n        context.save(); // save state\r\n        context.beginPath();\r\n        context.translate(cx - r, cy - r);\r\n        context.scale(r, r);\r\n        context.arc(1, 1, 1, 0, 2 * Math.PI, false);\r\n        context.restore(); // restore to original state\r\n        //       context.stroke();\r\n        context.strokeStyle = color;\r\n        context.stroke();\r\n    }\r\n    static DrawRectangleCoords(ctx, pen, x, y, w, h) {\r\n        const gc = ctx;\r\n        gc.lineWidth = pen.Width;\r\n        gc.strokeStyle = pen.Color;\r\n        gc.setLineDash(pen.DashPattern || []);\r\n        gc.strokeRect(x, y, w, h);\r\n    }\r\n    static DrawRectangle(ctx, pen, r) {\r\n        const gc = ctx;\r\n        gc.lineWidth = pen.Width;\r\n        gc.strokeStyle = pen.Color;\r\n        gc.setLineDash(pen.DashPattern || []);\r\n        gc.strokeRect(r.x, r.y, r.width, r.height);\r\n    }\r\n    static DrawString(ctx, text, color, x, y, alignment) {\r\n        if (alignment === undefined) {\r\n            alignment = { H: TextHorizontalAlign.Left, V: TextVerticalAlign.Bottom };\r\n        }\r\n        else {\r\n            if (alignment.H === undefined) {\r\n                alignment.H = TextHorizontalAlign.Left;\r\n            }\r\n            if (alignment.V === undefined) {\r\n                alignment.V = TextVerticalAlign.Bottom;\r\n            }\r\n        }\r\n        ctx.fillStyle = color;\r\n        ctx.textAlign = alignment.H;\r\n        ctx.textBaseline = alignment.V;\r\n        ctx.fillText(text, x, y);\r\n    }\r\n    static DrawLine(ctx, pen, x1, y1, x2, y2) {\r\n        const gc = ctx;\r\n        gc.strokeStyle = pen.Color;\r\n        gc.lineWidth = pen.Width;\r\n        gc.setLineDash(pen.DashPattern || []);\r\n        gc.beginPath();\r\n        gc.moveTo(x1, y1);\r\n        gc.lineTo(x2, y2);\r\n        gc.stroke();\r\n    }\r\n}\r\nexport class TextAlign {\r\n}\r\nexport var TextHorizontalAlign;\r\n(function (TextHorizontalAlign) {\r\n    TextHorizontalAlign[\"Left\"] = \"left\";\r\n    TextHorizontalAlign[\"Right\"] = \"right\";\r\n    TextHorizontalAlign[\"Center\"] = \"center\";\r\n    TextHorizontalAlign[\"Start\"] = \"start\";\r\n    TextHorizontalAlign[\"End\"] = \"end\";\r\n})(TextHorizontalAlign || (TextHorizontalAlign = {}));\r\nexport var TextVerticalAlign;\r\n(function (TextVerticalAlign) {\r\n    TextVerticalAlign[\"Top\"] = \"top\";\r\n    TextVerticalAlign[\"Hanging\"] = \"hanging\";\r\n    TextVerticalAlign[\"Middle\"] = \"middle\";\r\n    TextVerticalAlign[\"Alphabetic\"] = \"alphabetic\";\r\n    TextVerticalAlign[\"Ideographic\"] = \"ideographic\";\r\n    TextVerticalAlign[\"Bottom\"] = \"bottom\";\r\n})(TextVerticalAlign || (TextVerticalAlign = {}));\r\n//# sourceMappingURL=GDIPlus.js.map","/*\r\n Color lookup table\r\n */\r\nexport class Clut {\r\n    constructor(SZ, type, r, g, b) {\r\n        this.SZ = SZ;\r\n        this.r = new Uint8Array(SZ + 1);\r\n        this.g = new Uint8Array(SZ + 1);\r\n        this.b = new Uint8Array(SZ + 1);\r\n        this.rgba = new Uint32Array(SZ + 1);\r\n        if (type == 'interpolate') {\r\n            const f_inc = 1.0 / SZ;\r\n            let f = 0.0;\r\n            for (let i = 0; i < SZ; ++i) {\r\n                this.r[i] = this.get_interpolated_val(r, f);\r\n                this.g[i] = this.get_interpolated_val(g, f);\r\n                this.b[i] = this.get_interpolated_val(b, f);\r\n                this.rgba[i] = this.r[i] + this.g[i] * 0x100 + this.b[i] * 0x10000 + 0xff000000;\r\n                f += f_inc;\r\n            }\r\n        }\r\n        else if (type == 'repeat') {\r\n            for (let i = 0; i < SZ; ++i) {\r\n                this.r[i] = r[i % r.length];\r\n                this.g[i] = g[i % g.length];\r\n                this.b[i] = b[i % b.length];\r\n                this.rgba[i] = this.r[i] + this.g[i] * 0x100 + this.b[i] * 0x10000 + 0xff000000;\r\n            }\r\n        }\r\n        this.r[SZ] = this.r[SZ - 1];\r\n        this.g[SZ] = this.g[SZ - 1];\r\n        this.b[SZ] = this.b[SZ - 1];\r\n        this.rgba[SZ] = this.rgba[SZ - 1];\r\n    }\r\n    get_interpolated_val(a, idx) {\r\n        const LAST_IDX = a.length - 1;\r\n        if (idx >= 1.0) {\r\n            return a[LAST_IDX];\r\n        }\r\n        else if (idx < 0.0)\r\n            idx = 0.0;\r\n        let fractional_idx = idx * LAST_IDX;\r\n        const internal_idx = Math.floor(fractional_idx);\r\n        fractional_idx -= internal_idx; // leave fractional part\r\n        // linear interpolate\r\n        return a[internal_idx] + (a[internal_idx + 1] - a[internal_idx]) * fractional_idx;\r\n    }\r\n    css_color(v, alpha = 1.0) {\r\n        if (v < 0.0 || v > 1.0)\r\n            throw new Error(\"clut.css_color: Parameter must be between 0 and 1.0\");\r\n        v *= this.SZ;\r\n        v = Math.floor(v);\r\n        return \"rgba(\" + this.r[v] + \",\" + this.g[v] + \",\" + this.b[v] + \", \" + alpha + \")\";\r\n    }\r\n}\r\nexport var Presets;\r\n(function (Presets) {\r\n    Presets.MADNESS = new Clut(1024, 'interpolate', new Uint8Array([0, 0x77, 0xff, 0x11, 0xff, 0, 0xff, 0, 0xff, 0xff, 0x11, 0xff, 0, 0xff, 0x77, 0xff]), new Uint8Array([0, 0x00, 0x66, 0x99, 0xee, 0x66, 0, 0xff, 0xff, 0x66, 0x33, 0xee, 0x66, 0x00, 0xff, 0xff]), new Uint8Array([0, 0x11, 0x00, 0x00, 0x66, 0x99, 0xff, 0xee, 0xff, 0x88, 0x99, 0x66, 0x99, 0xff, 0x77, 0xff]));\r\n    Presets.HEATMAP = new Clut(1024, 'interpolate', new Uint8Array([0, 0, 0, 0, 0, 0x7f, 0xff, 0xff, 0xff, 0x7f]), new Uint8Array([0, 8, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0, 0]), new Uint8Array([0x9f, 0xff, 0xff, 0xff, 0x7f, 0, 0, 0, 0, 0]));\r\n    Presets.GRAYSCALE = new Clut(1024, 'interpolate', new Uint8Array([0, 0xff]), new Uint8Array([0, 0xff]), new Uint8Array([0, 0xff]));\r\n    Presets.GRAYSCALE_INVERSE = new Clut(1024, 'interpolate', new Uint8Array([0xff, 0]), new Uint8Array([0xff, 0]), new Uint8Array([0xff, 0]));\r\n    Presets.TRAFFIC_LIGHTS = new Clut(1024, 'interpolate', new Uint8Array([0xcf, 0xff, 0xff, 0]), new Uint8Array([0, 0x4f, 0xcf, 0x8f]), new Uint8Array([0, 0x0, 0x00, 0]));\r\n})(Presets || (Presets = {}));\r\n//# sourceMappingURL=Clut.js.map","/**\r\n * @file CustomElement.ts\r\n * @author Josh Greifer <joshgreifer@gmail.com>\r\n * @copyright © 2020 Josh Greifer\r\n * @licence\r\n * Copyright © 2020 Josh Greifer\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n * @summary A console, to be used for text logging.\r\n * This is part of my Typescript express starter application,  which provides\r\n * very minimal skeleton code for custom HTML tags, simple paging, and API access.\r\n *\r\n * The starter application was designed to be as lean as possible - its only dependencies\r\n * are express and eventemitter3.\r\n *\r\n *\r\n */\r\nimport EventEmitter from \"eventemitter3\";\r\nexport class ConsoleElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this.old_console_log_func = window.console.log;\r\n        this.old_console_error_func = window.console.error;\r\n        this.old_console_warn_func = window.console.warn;\r\n        this.old_console_info_func = window.console.info;\r\n        this.developer_mode = false;\r\n        const self = this;\r\n        this.Events = new EventEmitter();\r\n        const shadow = this.attachShadow({ mode: 'open' }); // sets and returns 'this.shadowRoot'\r\n        const style = document.createElement('style');\r\n        const container_el = document.createElement('div');\r\n        const el = document.createElement('div');\r\n        container_el.appendChild(el);\r\n        container_el.className = 'console';\r\n        el.className = 'console-output';\r\n        style.textContent = `\r\n        .console {\r\n            /*background-color: black;*/\r\n            font-size: 13px;\r\n            overflow: auto;\r\n            height: 400px;\r\n            overflow-y: scroll;\r\n            overflow-x: scroll;\r\n            overscroll-behavior-y: contain;\r\n            scroll-snap-type: y mandatory;\r\n            grid-area: console;\r\n        }\r\n        .console-input {\r\n            color: #ffffff;\r\n            font-family: 'Lucida Console', Monaco, monospace;\r\n        }\r\n        .console-input input {\r\n            width: 99%;\r\n            border: none;\r\n        }\r\n        .console-output {\r\n\r\n            white-space: pre;\r\n            color: #BCD631;\r\n            font-family: 'Lucida Console', Monaco, monospace;\r\n            scroll-snap-align: end;\r\n        }\r\n\r\n        .console-output .error {\r\n            color: #d60619;\r\n        }\r\n        .console-output .cue {\r\n            color:  rgb(229,205,82);\r\n        }\r\n        .console-output .cue:hover {\r\n            background-color: #3c3c3c;\r\n            cursor: pointer;\r\n        }\r\n                \r\n        .console-output .info {\r\n            color: #76fc57;\r\n        }\r\n        .console-output .warn {\r\n            color: #ff8400;\r\n        }\r\n        .console-output .recognized {\r\n            color: #90c8ff;\r\n        }\r\n        .console-output .recognizing {\r\n            font-style: italic;\r\n            color: #46688d;\r\n        }\r\n`;\r\n        const add = (item) => {\r\n            const is_continuation = !!item.isContinuation;\r\n            const replaceClassName = item.replaceClassName || item.className;\r\n            let line_el;\r\n            const last_child_el = el.lastChild;\r\n            if (!is_continuation || last_child_el === null || last_child_el.className !== replaceClassName) {\r\n                line_el = document.createElement('div');\r\n            }\r\n            else {\r\n                line_el = last_child_el;\r\n                line_el.textContent = '';\r\n                line_el.classList.remove(replaceClassName);\r\n            }\r\n            line_el.classList.add(item.className);\r\n            // Timestamp the event if none provided\r\n            line_el.setAttribute('time-stamp', (item.timeStamp || (Date.now() / 1000)).toString());\r\n            let textNode = document.createTextNode(item.text);\r\n            line_el.appendChild(textNode);\r\n            if (line_el !== last_child_el) {\r\n                el.appendChild(line_el);\r\n                line_el.addEventListener('click', () => { self.Events.emit('console-click', line_el); });\r\n                line_el.addEventListener('dblclick', () => { self.Events.emit('console-dblclick', line_el); });\r\n            }\r\n            return line_el;\r\n        };\r\n        const clear = () => { while (el.firstChild)\r\n            el.removeChild(el.firstChild); };\r\n        const log = (...args) => { if (this.developer_mode)\r\n            add(ConsoleElement.make_msg('info', ...args)); this.old_console_log_func.apply(console, args); };\r\n        const warn = (...args) => { if (this.developer_mode)\r\n            add(ConsoleElement.make_msg('warn', ...args)); this.old_console_warn_func.apply(console, args); };\r\n        const info = (...args) => { if (this.developer_mode)\r\n            add(ConsoleElement.make_msg('info', ...args)); this.old_console_info_func.apply(console, args); };\r\n        const error = (...args) => { if (this.developer_mode)\r\n            add(ConsoleElement.make_msg('error', ...args)); this.old_console_error_func.apply(console, args); };\r\n        window.console.log = log;\r\n        window.console.info = info;\r\n        window.console.warn = warn;\r\n        window.console.error = error;\r\n        window.onerror = (message, file, line, col, err) => {\r\n            if (err)\r\n                error(err.stack);\r\n            return false;\r\n        };\r\n        window.addEventListener('unhandledrejection', (e) => {\r\n            error(\"Promise Rejection: \" + e.reason);\r\n            return false;\r\n        });\r\n        window.addEventListener(\"error\", (e) => {\r\n            error(e.error.stack);\r\n            return false;\r\n        });\r\n        this.add = add;\r\n        this.log = log;\r\n        this.warn = warn;\r\n        this.info = info;\r\n        this.error = error;\r\n        this.clear = clear;\r\n        shadow.append(style, container_el);\r\n    }\r\n    static make_msg(className, ...args) {\r\n        let msg = '';\r\n        if (args && args.length) {\r\n            for (const arg of args) {\r\n                if (typeof (arg) === 'object')\r\n                    msg += JSON.stringify(arg, null, 2) + ' ';\r\n                else\r\n                    msg += arg + ' ';\r\n            }\r\n        }\r\n        return {\r\n            text: msg.trimEnd(),\r\n            className: className\r\n        };\r\n    }\r\n    get DeveloperMode() { return this.developer_mode; }\r\n    set DeveloperMode(mode) { this.developer_mode = mode; }\r\n}\r\n//# sourceMappingURL=ConsoleElement.js.map","/**\r\n * @file Scope.ts\r\n * @author Josh Greifer <joshgreifer@gmail.com>\r\n * @copyright © 2020 Josh Greifer\r\n * @licence\r\n * Copyright © 2020 Josh Greifer\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n * @summary A real-time audio signal and spectrogram display,  optimised for speed.\r\n *\r\n */\r\nimport * as GDIPlus from './GDIPlus';\r\nimport { TextVerticalAlign } from './GDIPlus';\r\nimport * as Clut from './Clut';\r\nimport EventEmitter from \"eventemitter3\";\r\n// class StatsBuf {\r\n//     private data_: number[];\r\n//     private idx_: number  = 0;\r\n//     Min: number = Number.MAX_VALUE;\r\n//     Max: number = -Number.MAX_VALUE;\r\n//\r\n//     get Avg() { return this.sum_ / this.data_.length; }\r\n//\r\n//     private sum_ = 0;\r\n//\r\n//     constructor(sz: number) {\r\n//         if (sz >= 1)\r\n//             this.data_ = new Array<number>(Math.floor(sz));\r\n//     }\r\n//\r\n//     public Put(v: number) {\r\n//         const SZ = this.data_.length;\r\n//         const oldest_data =  this.data_[this.idx_] || 0;\r\n//         this.sum_ += v - oldest_data;\r\n//         // save new data in circular buffer, bump index\r\n//         this.data_[this.idx_++] = v;\r\n//         if (this.idx_ >= SZ) this.idx_ = 0;\r\n//\r\n//         // check if oldest value (which we're about to overwrite) is current min or max.\r\n//         // If it is, rescan the buffer to recalculate min max\r\n//         const do_rescan: boolean =  oldest_data === this.Min || oldest_data === this.Max;\r\n//\r\n//         if (do_rescan) {\r\n//\r\n//             this.Min = Number.MAX_VALUE;\r\n//             this.Max = -Number.MAX_VALUE;\r\n//             this.sum_ = 0;\r\n//             for (let i = 0; i < SZ; ++i) {\r\n//                 const vv = this.data_[i] || 0;\r\n//                 this.sum_ +=  vv;\r\n//                 if (vv < this.Min) this.Min = vv;\r\n//                 else if (vv > this.Max) this.Max = vv;\r\n//             }\r\n//         } else {\r\n//             if (v < this.Min) this.Min = v;\r\n//             else if (v > this.Max) this.Max = v;\r\n//\r\n//         }\r\n//\r\n//\r\n//\r\n//\r\n//     }\r\n//\r\n// }\r\n/*\r\n* Safari and Edge polyfill for createImageBitmap\r\n* https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/createImageBitmap\r\n*\r\n* Support source image types Blob and ImageData.\r\n*\r\n* From: https://dev.to/nektro/createimagebitmap-polyfill-for-safari-and-edge-228\r\n* Updated by Yoan Tournade <yoan@ytotech.com>\r\n// https://gist.github.com/MonsieurV/fb640c29084c171b4444184858a91bc7\r\n* Converted to TypeScript , wrapped in a function, simplified  and optimised by Josh Greifer <joshgreifer@gmail.com>\r\n*  The canvas cache is only useful if the majority of calls to this function use only a small number of bitmap dimensions\r\n*\r\n*/\r\nconst createImageBitmapPolyFill = (canvas = undefined) => {\r\n    // eslint-disable-next-line no-constant-condition\r\n    if (true)\r\n        // if ((!('createImageBitmap' in window)))\r\n        if (canvas === undefined)\r\n            canvas = document.createElement('canvas');\r\n    // @ts-ignore\r\n    window.createImageBitmap = async (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                canvas = canvas;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.imageSmoothingEnabled = false;\r\n                canvas.width = data.width;\r\n                canvas.height = data.height;\r\n                ctx.putImageData(data, 0, 0);\r\n                resolve(canvas);\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n};\r\ncreateImageBitmapPolyFill();\r\nexport var MarkerStyle;\r\n(function (MarkerStyle) {\r\n    MarkerStyle[MarkerStyle[\"Filled\"] = 0] = \"Filled\";\r\n    MarkerStyle[MarkerStyle[\"Hollow\"] = 1] = \"Hollow\";\r\n})(MarkerStyle || (MarkerStyle = {}));\r\nexport class Marker extends EventEmitter {\r\n    constructor(time, value, label) {\r\n        super();\r\n        this.time = time;\r\n        this.value = value;\r\n        this.label = label;\r\n        this.style = MarkerStyle.Filled;\r\n        this.radius = 4;\r\n        this.toJSON = () => { return { time: this.time, value: this.value, label: this.label }; };\r\n    }\r\n    get color() {\r\n        return Marker.ColorMap[this.label.split(':')[0]] || Marker.DefaultColor;\r\n    }\r\n    static clone(src) {\r\n        return new Marker(src.time, src.value, src.label);\r\n    }\r\n    editLabel() {\r\n        let label;\r\n        if (Marker.editDialog) {\r\n            const label_el = Marker.editDialog.querySelector('#label');\r\n            label_el.value = this.label;\r\n            Marker.editDialog.showModal();\r\n            if (Marker.editDialog.returnValue === 'Confirm')\r\n                label = label_el.value;\r\n        }\r\n        else {\r\n            label = window.prompt(\"Enter new cue label:\", this.label);\r\n        }\r\n        if (label) {\r\n            this.label = label;\r\n            this.emit('label-changed', label);\r\n        }\r\n    }\r\n    hitTest(scope, x, y) {\r\n        const marker_g_x = scope.d2gX(this.time) + scope.gBounds.x;\r\n        const marker_g_y = scope.d2gY(this.value) + scope.gBounds.y;\r\n        const offset_x = Math.abs(marker_g_x - x);\r\n        const offset_y = Math.abs(marker_g_y - y);\r\n        return (offset_x <= this.radius && offset_y <= this.radius);\r\n    }\r\n}\r\nMarker.editDialog = undefined;\r\nMarker.ColorMap = {};\r\nMarker.DefaultColor = \"rgb(229,205,82)\";\r\nexport var RenderStyle;\r\n(function (RenderStyle) {\r\n    RenderStyle[RenderStyle[\"None\"] = 0] = \"None\";\r\n    RenderStyle[RenderStyle[\"Line\"] = 1] = \"Line\";\r\n    RenderStyle[RenderStyle[\"Bar\"] = 2] = \"Bar\";\r\n    RenderStyle[RenderStyle[\"Segment\"] = 3] = \"Segment\";\r\n    RenderStyle[RenderStyle[\"Step\"] = 4] = \"Step\";\r\n})(RenderStyle || (RenderStyle = {}));\r\nexport var DownSampleAlgorithm;\r\n(function (DownSampleAlgorithm) {\r\n    DownSampleAlgorithm[DownSampleAlgorithm[\"None\"] = 0] = \"None\";\r\n    DownSampleAlgorithm[DownSampleAlgorithm[\"Decimate\"] = 1] = \"Decimate\";\r\n    DownSampleAlgorithm[DownSampleAlgorithm[\"Avg\"] = 2] = \"Avg\";\r\n    DownSampleAlgorithm[DownSampleAlgorithm[\"MinMax\"] = 3] = \"MinMax\";\r\n})(DownSampleAlgorithm || (DownSampleAlgorithm = {}));\r\nexport var SignalFollowBehaviour;\r\n(function (SignalFollowBehaviour) {\r\n    SignalFollowBehaviour[SignalFollowBehaviour[\"Scroll\"] = 0] = \"Scroll\";\r\n    SignalFollowBehaviour[SignalFollowBehaviour[\"Paginate\"] = 1] = \"Paginate\";\r\n    SignalFollowBehaviour[SignalFollowBehaviour[\"Fit\"] = 2] = \"Fit\";\r\n})(SignalFollowBehaviour || (SignalFollowBehaviour = {}));\r\nexport var AutoYAxisAdjustBehaviour;\r\n(function (AutoYAxisAdjustBehaviour) {\r\n    AutoYAxisAdjustBehaviour[AutoYAxisAdjustBehaviour[\"EnsureAllSamplesVisible\"] = 0] = \"EnsureAllSamplesVisible\";\r\n    AutoYAxisAdjustBehaviour[AutoYAxisAdjustBehaviour[\"EnsureMostRecentSampleVisible\"] = 1] = \"EnsureMostRecentSampleVisible\";\r\n})(AutoYAxisAdjustBehaviour || (AutoYAxisAdjustBehaviour = {}));\r\nexport class Channel {\r\n    constructor() {\r\n        this.Color = '#446666';\r\n        this.Name = '(unnamed signal)';\r\n        this.Visible = false;\r\n        this.RenderStyle = RenderStyle.Line;\r\n        this.DownSampleAlgorithm = DownSampleAlgorithm.Decimate;\r\n    }\r\n}\r\nexport class Scope extends EventEmitter {\r\n    constructor(container) {\r\n        super();\r\n        this.markers_ = [];\r\n        this.offScreenContexts = [];\r\n        this.currentOffScreenContextsIndex = 0; // toggles between 1 and 2 on each Render\r\n        // private gc_OnScreen: GDIPlus.GCH;\r\n        // private gc_OffScreen: GDIPlus.GCH;\r\n        // private gc_graphData1: GDIPlus.GCH;\r\n        // private gc_graphData2: GDIPlus.GCH;\r\n        // private gc_graphDataNew: GDIPlus.GCH;\r\n        // private gc_graphDataOld: GDIPlus.GCH;\r\n        this.canvases = [];\r\n        this.MIN_GRID_X = 10;\r\n        this.MIN_GRID_Y = 10;\r\n        this.gridMinorX = 1;\r\n        this.gridMajorX = 10;\r\n        this.gridMinorY = 100;\r\n        this.gridMajorY = 1000;\r\n        this.AxisFont = '12px Arial';\r\n        this.AxisFontHeight = 12;\r\n        this.ButtonFont = '16px Arial';\r\n        this.BackColor = 'black';\r\n        this.ForeColor = 'white';\r\n        this.AxesBackColor = '#1a2630';\r\n        this.BorderColor = 'red';\r\n        this.IS_SPECTROGRAM = false;\r\n        this.GridMinorTextColor = '#88c5ff';\r\n        this.GridMajorTextColor = '#1c95ff';\r\n        this.ButtonBackColor = 'rgba(41,60, 74, 0.5)';\r\n        this.ButtonForeColor = '#5ff800';\r\n        this.ButtonDisabledColor = '#6d7a65';\r\n        // Y values are multiplied by this\r\n        this.SampleUnitMultiplier = 1.0; //32767.0;\r\n        this.fs_ = 16000.0;\r\n        this.sampleDuration = 1 / 16000.0;\r\n        this.dragPoint = { x: 0, y: 0 };\r\n        this.dragStartPoint = { x: 0, y: 0 };\r\n        this._nchans = 0;\r\n        this.slaves = new Array();\r\n        this._lineWidth = 0.1;\r\n        // The data time when data was last rendered.  dataTime - dataTimeOld  == data needed to draw in RenderData\r\n        this.dataTimeOld = -1;\r\n        this.time_axis_visible_ = true;\r\n        this.y_axis_visible_ = true;\r\n        this.follow_signal_ = true;\r\n        this.adjust_y_axis = true;\r\n        this.signal_follow_behaviour = SignalFollowBehaviour.Paginate;\r\n        this.AutoYAxisAdjustBehaviour = AutoYAxisAdjustBehaviour.EnsureAllSamplesVisible;\r\n        this.AutoYAxisAdjustChannel = -1; // no channel\r\n        this._YAxisFormat = '0.00';\r\n        //private subpixel_stats: StatsBuf;\r\n        this.captureArea = Area.None;\r\n        this.dataTime = 0;\r\n        this.RenderFrame = async () => {\r\n            const dataTime = this.dataTime;\r\n            if (this.dataTimeOld !== dataTime || !this.dBoundsOld.Equals(this.dBounds)) {\r\n                const ctx = this.onScreenContext;\r\n                const ctx_off_prev = this.offScreenContexts[this.currentOffScreenContextsIndex];\r\n                // swap buffers\r\n                if (++this.currentOffScreenContextsIndex >= 1)\r\n                    this.currentOffScreenContextsIndex = 0;\r\n                const ctx_off_curr = this.offScreenContexts[this.currentOffScreenContextsIndex];\r\n                if (this.TimeAxisVisible || this.YAxisVisible) {\r\n                    GDIPlus.GCH.FillRectangleCoords(ctx, this.AxesBackColor, 0, this.yAxisBounds.height, this.timeAxisBounds.x, ctx.canvas.height);\r\n                }\r\n                if (this.TimeAxisVisible)\r\n                    this.RenderTimeAxis(ctx);\r\n                this.RenderYAxis(ctx);\r\n                // Let's assume we need to render everything\r\n                let dirtyRect = this.dBounds.Clone();\r\n                if (dataTime < dirtyRect.right) { //  we haven't received a whole screenful of data yet\r\n                    dirtyRect.right = dataTime; // shrink dirty rect, don't need to draw to right of data\r\n                }\r\n                // render any overlapped region from onscreen to offscreen buffer\r\n                if (dirtyRect.width > 0 || dataTime === 0) {\r\n                    // Background\r\n                    const new_data_overlap_pixels = this.pixels2duration(2);\r\n                    // eslint-disable-next-line no-constant-condition\r\n                    // if (false) {\r\n                    if (this.dBoundsOld.Equals(this.dBounds)) {\r\n                        this.BlitGraph(ctx_off_prev, ctx_off_curr);\r\n                        await this.RenderPlot(ctx_off_curr, this.dataTimeOld - new_data_overlap_pixels, dataTime - this.dataTimeOld + new_data_overlap_pixels);\r\n                    }\r\n                    else {\r\n                        // this.dBoundsOld.AssignFrom(this.dBounds);\r\n                        this.RenderGraphBackground(ctx_off_curr);\r\n                        await this.RenderPlot(ctx_off_curr, dirtyRect.x, dirtyRect.width);\r\n                    }\r\n                    // Ok, we've rendered current data bounds to offscreen, blit to main context and update offscreen data rect\r\n                    this.BlitGraph(ctx_off_curr, ctx);\r\n                    this.dataTimeOld = dataTime;\r\n                    // grid\r\n                    this.RenderGraphGrid(ctx);\r\n                    // buttons\r\n                    this.RenderButtons(ctx);\r\n                    //                this.BlitAll(ctx, ctx_on);\r\n                }\r\n                else {\r\n                    //debugLog(\"scope\", dirtyRect.width, this.dataTime);\r\n                }\r\n            }\r\n            window.requestAnimationFrame(this.RenderFrame);\r\n            //       window.setTimeout(this.RenderFrame, 250);\r\n        };\r\n        this.ColorLookupTable = Clut.Presets.GRAYSCALE;\r\n        for (let i = 0; i < 3; ++i) {\r\n            const canvas = document.createElement('canvas');\r\n            this.canvases.push(canvas);\r\n        }\r\n        // first canvas is onscreen\r\n        this.onScreenCanvas = this.canvases[0];\r\n        // Make sure container is empty\r\n        while (container.firstChild)\r\n            container.removeChild(container.firstChild);\r\n        container.style.lineHeight = \"0px\";\r\n        container.appendChild(this.onScreenCanvas);\r\n        this.onScreenCanvas.style.position = 'relative';\r\n        this.onScreenContext = this.onScreenCanvas.getContext('2d');\r\n        //        this.onScreenContext.imageSmoothingEnabled = false;\r\n        // offscreen buffers for graph data\r\n        this.offScreenContexts.push(this.canvases[1].getContext('2d'));\r\n        this.offScreenContexts.push(this.canvases[2].getContext('2d'));\r\n        //       this.offScreenContexts[0].imageSmoothingEnabled = false;\r\n        //       this.offScreenContexts[1].imageSmoothingEnabled = false;\r\n        this.currentOffScreenContextsIndex = 0;\r\n        this.master = null;\r\n        this.penGridMajor = new GDIPlus.Pen('rgba(25,89,250,0.57)');\r\n        this.penGridMinor = new GDIPlus.Pen('rgba(68,118,251,0.5)');\r\n        this.penBorder = new GDIPlus.Pen('Gray');\r\n        this.penGridMinor.DashPattern = [1.0, 3.0];\r\n        this.colorGridMajor = 'Black';\r\n        this.colorGridMinor = 'LightGray';\r\n        this.penGridMajor.Width = 1.0;\r\n        this.penGridMinor.Width = 1.0;\r\n        this.penBorder.Width = 1.0;\r\n        this.dBounds = new GDIPlus.Rect(0.0, -1.0, 10.0, 2.0);\r\n        this.dBoundsOld = new GDIPlus.Rect(this.dBounds.x, this.dBounds.y, this.dBounds.width, this.dBounds.height);\r\n        this.captureArea = Area.None;\r\n        const getCoords = (e) => {\r\n            const r = this.onScreenCanvas.getBoundingClientRect();\r\n            return (\"touches\" in e) ?\r\n                [e.touches[0].clientX - r.left, e.touches[0].clientY - r.top] :\r\n                [e.clientX - r.left, e.clientY - r.top];\r\n        };\r\n        // Set mouse handlers\r\n        this.onScreenCanvas.ontouchstart = this.onScreenCanvas.onmousedown = (e) => {\r\n            //           debugLog(\"voice-feature-detector\",\"mousedown\" );\r\n            e.preventDefault();\r\n            const [x, y] = getCoords(e);\r\n            this.captureArea = this.GetArea(x, y);\r\n            this.dragPoint.x = this.dragStartPoint.x = x - this.gBounds.x;\r\n            this.dragPoint.y = this.dragStartPoint.y = y;\r\n        };\r\n        // https://stackoverflow.com/questions/17613710/mouse-events-to-touch-event-for-ipad-compatibility\r\n        this.onScreenCanvas.ontouchmove = this.onScreenCanvas.onmousemove = (e) => {\r\n            e.preventDefault();\r\n            //            debugLog(\"voice-feature-detector\",\"mousemove\" );\r\n            const [x, y] = getCoords(e);\r\n            switch (this.captureArea) {\r\n                case Area.Graph:\r\n                    this.graph_Zoom(x - this.gBounds.x, y);\r\n                    break;\r\n                case Area.YAxis:\r\n                    this.yAxis_Scroll(y);\r\n                    break;\r\n                case Area.TimeAxis:\r\n                    this.timeAxis_Scroll(x - this.gBounds.x);\r\n                    break;\r\n                case Area.None:\r\n                default:\r\n                    switch (this.GetArea(x, y)) {\r\n                        case Area.TimeAxis:\r\n                            this.onScreenCanvas.style.cursor = 'ew-resize';\r\n                            break;\r\n                        case Area.YAxis:\r\n                            this.onScreenCanvas.style.cursor = 'ns-resize';\r\n                            break;\r\n                        case Area.Graph:\r\n                            this.markerUnderCursor = this.FindMarker(x, y);\r\n                            this.onScreenCanvas.style.cursor = this.markerUnderCursor ? 'crosshair' : 'zoom-in';\r\n                            break;\r\n                        case Area.FollowSignalButton:\r\n                        case Area.AutoScaleButton:\r\n                            this.onScreenCanvas.style.cursor = 'pointer';\r\n                            break;\r\n                        default:\r\n                            this.onScreenCanvas.style.cursor = 'default';\r\n                            break;\r\n                    }\r\n            }\r\n        };\r\n        this.onScreenCanvas.ontouchend = this.onScreenCanvas.onmouseup = (e) => {\r\n            e.preventDefault();\r\n            if (this.captureArea == Area.AutoScaleButton)\r\n                this.AutoScaleY = !this.AutoScaleY;\r\n            else if (this.captureArea == Area.FollowSignalButton)\r\n                this.FollowSignal = !this.FollowSignal;\r\n            this.captureArea = Area.None;\r\n        };\r\n        this.onScreenCanvas.ondblclick = (ev) => {\r\n            if (this.markerUnderCursor)\r\n                this.markerUnderCursor.editLabel();\r\n            else {\r\n                const [x, y] = getCoords(ev);\r\n                const marker = new Marker(this.g2dX(x - this.gBounds.x), this.dBounds.y + this.g2dY(this.gBounds.height - y), 'Cue');\r\n                this.AddMarker(marker);\r\n                // marker.editLabel();\r\n            }\r\n        };\r\n        const W = this.onScreenCanvas.parentElement.clientWidth;\r\n        const H = this.onScreenCanvas.parentElement.clientHeight;\r\n        this.Resize(W, H);\r\n        // start drawing\r\n        window.requestAnimationFrame(this.RenderFrame);\r\n    }\r\n    AddMarker(marker) {\r\n        this.markers_.push(marker);\r\n        this.emit('marker-added', marker);\r\n    }\r\n    FindMarker(g_x, g_y) {\r\n        for (const m of this.markers_)\r\n            if (m.hitTest(this, g_x, g_y))\r\n                return m;\r\n    }\r\n    get Markers() { return this.markers_; }\r\n    set Markers(markers) {\r\n        for (const marker of markers)\r\n            this.AddMarker(Marker.clone(marker));\r\n    }\r\n    get GridMinorColor() { return this.penGridMinor.Color; }\r\n    set GridMinorColor(color) { this.penGridMinor.Color = color; }\r\n    get GridMajorColor() { return this.penGridMajor.Color; }\r\n    set GridMajorColor(color) { this.penGridMajor.Color = color; }\r\n    get Fs() { return this.fs_; }\r\n    set Fs(fs) { this.fs_ = fs; this.sampleDuration = 1 / fs; }\r\n    get NumChannels() { return this.ChannelInfo ? this.ChannelInfo.length : this._nchans; }\r\n    set NumChannels(n) { if (this.ChannelInfo)\r\n        throw \"Can't set number of channels on a scope when its ChannelInfo array is set.\"; this._nchans = n; }\r\n    AddSlave(slave) {\r\n        this.slaves.push(slave);\r\n        slave.master = this;\r\n        //       slave.conn_ = this.conn_;\r\n        slave.SignalFollowBehaviour = this.SignalFollowBehaviour;\r\n        slave.DataWidth = this.DataWidth;\r\n    }\r\n    get GraphBounds() { return this.gBounds; }\r\n    get TimeAxisVisible() {\r\n        return this.time_axis_visible_;\r\n    }\r\n    set TimeAxisVisible(visible) {\r\n        if (visible != this.time_axis_visible_) {\r\n            this.time_axis_visible_ = visible;\r\n            this.Layout();\r\n        }\r\n    }\r\n    get YAxisVisible() {\r\n        return this.y_axis_visible_;\r\n    }\r\n    set YAxisVisible(visible) {\r\n        if (visible != this.y_axis_visible_) {\r\n            this.y_axis_visible_ = visible;\r\n            this.Layout();\r\n        }\r\n    }\r\n    get FollowSignal() {\r\n        return this.follow_signal_;\r\n    }\r\n    set FollowSignal(follow_signal) {\r\n        if (this.master != null) {\r\n            this.master.FollowSignal = follow_signal;\r\n            return;\r\n        }\r\n        this.follow_signal_ = follow_signal;\r\n        for (let slave of this.slaves)\r\n            slave.follow_signal_ = follow_signal;\r\n    }\r\n    get AutoScaleY() {\r\n        return this.adjust_y_axis;\r\n    }\r\n    set AutoScaleY(adjust_y_axis) {\r\n        if (this.master != null) {\r\n            this.master.AutoScaleY = adjust_y_axis;\r\n            return;\r\n        }\r\n        this.adjust_y_axis = adjust_y_axis;\r\n        for (let slave of this.slaves)\r\n            slave.adjust_y_axis = adjust_y_axis;\r\n    }\r\n    get SignalFollowBehaviour() {\r\n        return this.signal_follow_behaviour;\r\n    }\r\n    set SignalFollowBehaviour(signal_follow_behaviour) {\r\n        if (this.master != null) {\r\n            this.master.SignalFollowBehaviour = signal_follow_behaviour;\r\n            return;\r\n        }\r\n        this.signal_follow_behaviour = signal_follow_behaviour;\r\n        for (let slave of this.slaves)\r\n            slave.signal_follow_behaviour = signal_follow_behaviour;\r\n    }\r\n    //   public get Url(): string { return this.conn_.Url; }\r\n    //   public set Url(url: string) { this.conn_.Url = url; }\r\n    onData() {\r\n        if (this.conn_ && !this.master) // Don't update if this is slaved\r\n            this.dataTime = this.conn_.CurrentTimeSecs;\r\n        for (const slave of this.slaves)\r\n            slave.dataTime = this.dataTime;\r\n        if (this.FollowSignal)\r\n            switch (this.SignalFollowBehaviour) {\r\n                case SignalFollowBehaviour.Scroll:\r\n                    this.DataX = this.dataTime - this.dBounds.width;\r\n                    break;\r\n                case SignalFollowBehaviour.Paginate:\r\n                    if (this.dataTime > this.dBounds.right)\r\n                        this.DataX = this.dBounds.right;\r\n                    break;\r\n                case SignalFollowBehaviour.Fit:\r\n                    this.DataX = 0;\r\n                    this.DataWidth = this.dataTime;\r\n                    break;\r\n                default:\r\n            }\r\n    }\r\n    get Connection() { return this.conn_; }\r\n    set Connection(conn) {\r\n        const self = this;\r\n        if (conn !== undefined) {\r\n            conn.on('data', () => {\r\n                self.onData();\r\n            });\r\n            this.Fs = conn.Fs;\r\n        }\r\n        this.conn_ = conn;\r\n        this.emit('connection', conn);\r\n    }\r\n    static timeToString(t) {\r\n        t *= 1000; // ms\r\n        if ((t % 1000) === 0)\r\n            return new Date(t).toISOString().replace(/^.*T00:/, '').replace(/\\..*$/, '');\r\n        else\r\n            return '.' + new Date(t).toISOString().replace(/^.*\\./, '').replace(/Z$/, '');\r\n    }\r\n    get DataX() {\r\n        return this.dBounds.x;\r\n    }\r\n    set DataX(value) {\r\n        if (this.master != null) {\r\n            this.master.DataX = value;\r\n            return;\r\n        }\r\n        const current_time = this.conn_ ? this.conn_.CurrentTimeSecs : 3600;\r\n        if (value < 0)\r\n            value = 0;\r\n        else if (value > current_time)\r\n            value = current_time;\r\n        this.dBounds.x = value;\r\n        for (let slave of this.slaves)\r\n            slave.dBounds.x = value;\r\n        this.timeAxis_Recalc();\r\n        this.emit('TimeAxisChanged', { x: value, width: this.dBounds.width });\r\n    }\r\n    get DataY() {\r\n        return this.dBounds.y;\r\n    }\r\n    set DataY(value) {\r\n        this.dBounds.y = value;\r\n        this.emit('YAxisChanged', { y: value, height: this.dBounds.height });\r\n    }\r\n    get DataWidth() {\r\n        return this.dBounds.width;\r\n    }\r\n    set DataWidth(value) {\r\n        if (this.master !== null) {\r\n            this.master.DataWidth = value;\r\n            return;\r\n        }\r\n        this.dBounds.width = value;\r\n        //this.subpixel_stats = new StatsBuf(this.samples_per_pixel());\r\n        for (let slave of this.slaves)\r\n            slave.dBounds.width = value;\r\n        this.timeAxis_Recalc();\r\n        this.emit('TimeAxisChanged', { x: this.dBounds.x, width: value });\r\n    }\r\n    get DataHeight() {\r\n        return this.dBounds.height;\r\n    }\r\n    set DataHeight(value) {\r\n        this.dBounds.height = value;\r\n        this.emit('YAxisChanged', { y: this.dBounds.y, height: value });\r\n        this.yAxis_Recalc();\r\n    }\r\n    Reset() {\r\n        this.emit('reset');\r\n        this.markers_ = [];\r\n        this.DataX = 0;\r\n        if (this.conn_)\r\n            this.conn_.Reset();\r\n        for (const slave of this.slaves)\r\n            slave.Reset();\r\n    }\r\n    Layout() {\r\n        const container_el = this.onScreenCanvas.parentElement;\r\n        this.Resize(container_el.clientWidth, container_el.clientHeight);\r\n    }\r\n    Resize(W, H) {\r\n        const Y_AXIS_WIDTH = 48;\r\n        const X_AXIS_HEIGHT = 32;\r\n        // const r = this.onScreenCanvas.parentElement!.getBoundingClientRect();\r\n        // const W = r.width;\r\n        // const H = r.height;\r\n        const y_axis_width = this.YAxisVisible ? Y_AXIS_WIDTH : 0;\r\n        const x_axis_height = this.TimeAxisVisible ? X_AXIS_HEIGHT : 0;\r\n        for (let canvas of this.canvases) {\r\n            canvas.width = W;\r\n            canvas.height = H;\r\n        }\r\n        this.yAxisBounds = new GDIPlus.Rect(0, 0, y_axis_width, H - x_axis_height);\r\n        this.timeAxisBounds = new GDIPlus.Rect(y_axis_width, H - x_axis_height, W - y_axis_width, x_axis_height);\r\n        this.ButtonsBounds = new GDIPlus.Rect(2 + Y_AXIS_WIDTH, H - x_axis_height - X_AXIS_HEIGHT - 2, Y_AXIS_WIDTH, X_AXIS_HEIGHT);\r\n        this.gBounds = new GDIPlus.Rect(y_axis_width, 0, W - y_axis_width, H - x_axis_height);\r\n        this.dataTimeOld = -1; // Force dirty\r\n        this.emit('size', { width: W, height: H });\r\n    }\r\n    // copy one render buffer to another offset by x and y in data coordinates\r\n    BlitGraph(src_ctx, dest_ctx) {\r\n        if (this.gBounds.width > 0)\r\n            try {\r\n                const img = src_ctx.getImageData(this.gBounds.x, this.gBounds.y, this.gBounds.width, this.gBounds.height);\r\n                dest_ctx.putImageData(img, this.gBounds.x, this.gBounds.y);\r\n            }\r\n            catch (ex) {\r\n                console.log(ex);\r\n            }\r\n    }\r\n    BlitAll(src_ctx, dest_ctx) {\r\n        const img = src_ctx.getImageData(0, 0, this.onScreenCanvas.width, this.onScreenCanvas.height);\r\n        //        dest_ctx.putImageData(img, 0, 0);\r\n        dest_ctx.putImageData(img, 0, 0);\r\n    }\r\n    RenderButtons(ctx) {\r\n        ctx.font = this.ButtonFont;\r\n        GDIPlus.GCH.FillRectangle(ctx, this.ButtonBackColor, this.ButtonsBounds);\r\n        const align = { H: GDIPlus.TextHorizontalAlign.Center, V: GDIPlus.TextVerticalAlign.Middle };\r\n        const textColorAutoScale = this.AutoScaleY ? this.ButtonForeColor : this.ButtonDisabledColor;\r\n        const textColorSignalFollow = this.FollowSignal ? this.ButtonForeColor : this.ButtonDisabledColor;\r\n        GDIPlus.GCH.DrawString(ctx, \"↕\", textColorAutoScale, this.ButtonsBounds.x + this.ButtonsBounds.width / 4, this.ButtonsBounds.y + this.ButtonsBounds.height / 2, align);\r\n        GDIPlus.GCH.DrawString(ctx, \"→\", textColorSignalFollow, this.ButtonsBounds.x + 3 * this.ButtonsBounds.width / 4, this.ButtonsBounds.y + this.ButtonsBounds.height / 2, align);\r\n    }\r\n    RenderTimeAxis(ctx) {\r\n        const start_offset_time = this.conn_ ? this.conn_.StartTimeSecs : 0;\r\n        ctx.save();\r\n        ctx.font = this.AxisFont;\r\n        GDIPlus.GCH.setClip(ctx, this.timeAxisBounds);\r\n        GDIPlus.GCH.FillRectangle(ctx, this.AxesBackColor, this.timeAxisBounds);\r\n        GDIPlus.GCH.SetOrigin(ctx, this.timeAxisBounds.x, this.timeAxisBounds.y);\r\n        // find first grid minor point\r\n        const firstGridMinorX = this.gridMinorX * Math.floor(this.dBounds.x / this.gridMinorX);\r\n        const add_numbers_to_grid_minor = (50 < this.duration2pixels(this.gridMinorX));\r\n        for (let x = firstGridMinorX; x < this.dBounds.x + this.dBounds.width; x += this.gridMinorX) {\r\n            let gx = this.time2pixels(x);\r\n            GDIPlus.GCH.DrawLine(ctx, this.penGridMinor, gx, 0, gx, 3);\r\n            if (add_numbers_to_grid_minor) {\r\n                const align = { H: GDIPlus.TextHorizontalAlign.Center, V: GDIPlus.TextVerticalAlign.Top };\r\n                GDIPlus.GCH.DrawString(ctx, Scope.timeToString(start_offset_time + x), this.GridMajorTextColor, gx + 1, 4, align);\r\n            }\r\n        }\r\n        // find first grid major point\r\n        const firstGridMajorX = this.gridMajorX * Math.floor(this.dBounds.x / this.gridMajorX);\r\n        for (let x = firstGridMajorX; x < this.dBounds.x + this.dBounds.width; x += this.gridMajorX) {\r\n            let gx = this.time2pixels(x);\r\n            GDIPlus.GCH.DrawLine(ctx, this.penGridMajor, gx, 0, gx, 4);\r\n            const align = { H: GDIPlus.TextHorizontalAlign.Center, V: GDIPlus.TextVerticalAlign.Top };\r\n            GDIPlus.GCH.DrawString(ctx, Scope.timeToString(start_offset_time + x), this.GridMajorTextColor, gx + 1, 4, align);\r\n        }\r\n        ctx.restore();\r\n        //g.ResetClip();\r\n        // g.DrawRectangle(this.penBorder, this.timeAxisBounds);\r\n    }\r\n    RenderYAxis(ctx) {\r\n        ctx.save();\r\n        ctx.font = this.AxisFont;\r\n        GDIPlus.GCH.setClip(ctx, this.yAxisBounds);\r\n        GDIPlus.GCH.FillRectangle(ctx, this.AxesBackColor, this.yAxisBounds);\r\n        //        this.yAxis_Recalc();\r\n        // find first grid minor point\r\n        const firstGridMinorY = this.gridMinorY * Math.floor(this.dBounds.y / this.gridMinorY);\r\n        const add_numbers_to_grid_minor = (this.AxisFontHeight < this.d2gHeight(this.gridMinorY));\r\n        for (let y = firstGridMinorY; y < this.dBounds.y + this.dBounds.height; y += this.gridMinorY) {\r\n            let gy = this.d2gY(y);\r\n            GDIPlus.GCH.DrawLine(ctx, this.penGridMinor, this.yAxisBounds.width - 3, gy, this.yAxisBounds.width, gy);\r\n            if (add_numbers_to_grid_minor) {\r\n                const align = { H: GDIPlus.TextHorizontalAlign.Right, V: GDIPlus.TextVerticalAlign.Middle };\r\n                GDIPlus.GCH.DrawString(ctx, y.toFixed(0), this.GridMinorTextColor, this.yAxisBounds.width - 5, gy, align);\r\n            }\r\n        }\r\n        // find first grid major point\r\n        const firstGridMajorY = this.gridMajorY * Math.floor(this.dBounds.y / this.gridMajorY);\r\n        for (let y = firstGridMajorY; y < this.dBounds.y + this.dBounds.height; y += this.gridMajorY) {\r\n            let gy = this.d2gY(y);\r\n            GDIPlus.GCH.DrawLine(ctx, this.penGridMajor, this.yAxisBounds.width - 3, gy, this.yAxisBounds.width, gy);\r\n            const align = { H: GDIPlus.TextHorizontalAlign.Right, V: GDIPlus.TextVerticalAlign.Middle };\r\n            GDIPlus.GCH.DrawString(ctx, y.toFixed(0), this.GridMajorTextColor, this.yAxisBounds.width - 5, gy, align);\r\n        }\r\n        ctx.restore();\r\n        //g.ResetClip();\r\n        //g.DrawRectangle(penBorder, yAxisBounds);\r\n    }\r\n    RenderGraphBackground(ctx) {\r\n        GDIPlus.GCH.FillRectangle(ctx, this.BackColor, this.gBounds);\r\n    }\r\n    RenderMarkers(ctx) {\r\n        // data\r\n        // flip data values horizontally, zero at bottom\r\n        const time_and_sample_values_rect = new GDIPlus.Rect(this.dBounds.x, this.SampleUnitMultiplier * (this.dBounds.y + this.dBounds.height), this.dBounds.width, -this.SampleUnitMultiplier * this.dBounds.height);\r\n        for (let marker of this.markers_) {\r\n            if (marker.time >= this.DataX && marker.time < this.DataX + this.DataWidth && marker.value >= this.DataY && marker.value < this.DataY + this.DataHeight)\r\n                GDIPlus.GCH.FillCircle(ctx, marker.color, this.d2gX(marker.time) + this.gBounds.x, this.d2gY(marker.value) + this.gBounds.y, marker.radius);\r\n        }\r\n    }\r\n    async RenderPlot(ctx, start_time, duration) {\r\n        if (this.conn_ && this.conn_.HasData) {\r\n            const YExtentChanged = await this.RenderPlotData(ctx, start_time, duration);\r\n            /* if (YExtentChanged) */ this.AdjustYAxis();\r\n        }\r\n        else { // no data\r\n            GDIPlus.GCH.DrawString(ctx, \"(No data)\", this.ForeColor, this.gBounds.x + this.gBounds.width / 2, this.gBounds.y + this.gBounds.height / 2, { H: GDIPlus.TextHorizontalAlign.Center, V: TextVerticalAlign.Middle });\r\n        }\r\n        this.RenderMarkers(ctx);\r\n    }\r\n    /*\r\n    * Render the data with multiple calls to Graphics.DrawLine().\r\n    * The number of DrawLine calls is ~ 3 X the width of the graph (in pixels).\r\n    * If one pixel represents more than one data point (i.e. if the time axis resolution\r\n    * is coarser than 1 sample), the data points are represented by a\r\n    * vertical line of pixels, from the min to the max value in the range of points being rendered.\r\n    *\r\n    * If the time axis resolution is greater than one sample,  this function renders the data using\r\n    * splines.\r\n    *\r\n    * return true if graph got clipped; it always sets maxY and minY to the y limits of the displayed signal\r\n    */\r\n    async RenderPlotData(ctx, start_time, duration) {\r\n        //\r\n        // data\r\n        // flip data values horizontally, zero at bottom\r\n        const time_and_sample_values_rect = new GDIPlus.Rect(this.dBounds.x, this.SampleUnitMultiplier * (this.dBounds.y + this.dBounds.height), this.dBounds.width, -this.SampleUnitMultiplier * this.dBounds.height);\r\n        // g.SetTransformRect(this.gBounds, time_and_sample_values_rect);\r\n        /*\r\n         *\r\n         * X (Horizontal) units are now seconds.\r\n         * Y (Vertical) units are now in sample values.\r\n         * To convert X coordinates to sample buffer offsets, divide by this.samples_per_pixel.\r\n         * To convert sample buffer offsets to X coordinates, multiply by this.samples_per_pixel.\r\n         */\r\n        const pixel_and_sample_values_rect = new GDIPlus.Rect(0, this.SampleUnitMultiplier * (this.dBounds.y + this.dBounds.height), this.gBounds.width, -this.SampleUnitMultiplier * this.dBounds.height);\r\n        // g.SetTransformRect(this.gBounds, pixel_and_sample_values_rect);\r\n        /*\r\n         *\r\n         * X (Horizontal) units are now pixels.\r\n         * Y (Vertical) units are now in sample values.\r\n         * To convert X coordinates to sample buffer offsets, multiply by sampleRate.\r\n         * To convert sample buffer offsets to X coordinates, divide by sampleRate.\r\n         */\r\n        ctx.save();\r\n        // Set maxY and minY for autoscaling/autotrack\r\n        let nMaxY = -Number.MAX_VALUE;\r\n        let nMinY = Number.MAX_VALUE;\r\n        // find the index into the sample buffer of the leftmost visible sample\r\n        const first_idx = this.conn_ ? this.conn_.TimeToIndex(start_time) : 0;\r\n        let num_frames_to_display = Math.floor(duration * this.fs_);\r\n        let num_frames_available = this.conn_ ? this.conn_.NumFramesRead : 0;\r\n        if (num_frames_to_display > num_frames_available) {\r\n            num_frames_to_display = num_frames_available;\r\n            duration = num_frames_to_display / this.fs_;\r\n        }\r\n        if (num_frames_to_display < 1) {\r\n            ctx.restore();\r\n            return Promise.resolve(false);\r\n        }\r\n        const SUBPIXELS_PER_PIXEL = 5;\r\n        //      const stride_t = this.pixels2duration(1/SUBPIXELS_PER_PIXEL);\r\n        const samples_per_pixel = this.samples_per_pixel();\r\n        // get the windowed data from the connection\r\n        const data = this.conn_ ? this.conn_.Data(start_time, duration) : null;\r\n        //       const dataraw = this.conn_.DataRaw(start_time, duration);\r\n        if (data === null) {\r\n            ctx.restore();\r\n            return false;\r\n        }\r\n        let last_y = 0;\r\n        /*\r\n        Spectrogram:   Basically treat the data as a pixel array and blit it with scaling.\r\n            We use a clut to map the data values to pixel color\r\n            1.   The data value range should be between 0.0 and 1.0\r\n            2.   Multiply each value by this.SampleUnitMultiplier\r\n         */\r\n        if (this.IS_SPECTROGRAM) {\r\n            const sample_rate_and_sample_values_rect = new GDIPlus.Rect(\r\n            /* this.dBounds.x */ 0 * this.fs_, this.SampleUnitMultiplier * (this.dBounds.y + this.dBounds.height), this.dBounds.width * this.fs_, -this.SampleUnitMultiplier * this.dBounds.height);\r\n            // work with horizontal pixel coords, vertical data coords\r\n            // GDIPlus.GCH.SetTransformRect(ctx, this.gBounds, pixel_and_sample_values_rect);\r\n            const data_as_image = new ImageData(this.NumChannels, num_frames_to_display);\r\n            const data_pixels = new Uint32Array(data_as_image.data.buffer);\r\n            const nvals = num_frames_to_display * this.NumChannels;\r\n            const start_val = first_idx;\r\n            // TODO: If this is too slow,  move the following clut lookup to the engine,\r\n            // TODO: which will require implementing CLUT there (see AFDetector for source)\r\n            for (let i = 0; i < nvals; ++i) {\r\n                const data_val = data.data[i + start_val];\r\n                // clamp\r\n                // if (data_val < 0) data_val = 0; else if (data_val > 1.0) data_val = 1.0;\r\n                data_pixels[i] = this.ColorLookupTable.rgba[Math.floor(data_val * this.ColorLookupTable.SZ)];\r\n            }\r\n            const img = await createImageBitmap(data_as_image /* , { imageOrientation: \"flipY\" } FlipY is done by xform matrix */).catch(reason => {\r\n                // debugLog(\"scope\", reason);\r\n            });\r\n            if (!img)\r\n                return false;\r\n            let xform = GDIPlus.GCH.GetWorldToGraphicTransform(this.gBounds, sample_rate_and_sample_values_rect);\r\n            GDIPlus.GCH.ApplyTransform(ctx, xform);\r\n            ctx.scale(1, -1);\r\n            ctx.rotate(-Math.PI / 2);\r\n            // note, after above transform, x and y are swapped, so the below line offsets the image horizontally!\r\n            ctx.translate(0, (start_time - this.dBounds.x) * this.Fs);\r\n            ctx.drawImage(img, 0, 0 /* img.width */);\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.restore();\r\n            return false;\r\n        }\r\n        else { // Not spectrogram\r\n            if (this.ChannelInfo)\r\n                for (let chan = 0; chan < this.NumChannels; ++chan) {\r\n                    // if color is set to invisible, don't display channel\r\n                    if (!this.ChannelInfo[chan].Visible)\r\n                        continue;\r\n                    const scale_y_axis_to_this_channel = (chan === this.AutoYAxisAdjustChannel);\r\n                    const render_style = this.ChannelInfo[chan].RenderStyle;\r\n                    const downsample_algorithm = this.ChannelInfo[chan].DownSampleAlgorithm;\r\n                    const downSample = downsample_algorithm !== DownSampleAlgorithm.None && samples_per_pixel > SUBPIXELS_PER_PIXEL;\r\n                    ctx.globalCompositeOperation = (render_style === RenderStyle.Segment) ? 'source-xor' : 'source-over';\r\n                    const chan_data = data.pick(null, chan);\r\n                    let pixel_x = this.d2gX(start_time);\r\n                    let last_rendered_idx = 0;\r\n                    let last_rendered_t = start_time;\r\n                    let t = last_rendered_t;\r\n                    let y;\r\n                    let pen = { Color: this.ChannelInfo[chan].Color || 'black', Width: 0.1 };\r\n                    // for downsampling\r\n                    let subpixel_min_y;\r\n                    let subpixel_max_y;\r\n                    let subpixel_sum_y;\r\n                    //           ctx.lineWidth = stride_t * 1.1;\r\n                    ctx.strokeStyle = pen.Color;\r\n                    ctx.fillStyle = pen.Color;\r\n                    ctx.lineWidth = pen.Width;\r\n                    let segment_start_t = chan_data.get(0) !== 0 ? t : -1;\r\n                    switch (render_style) {\r\n                        case RenderStyle.Line:\r\n                        case RenderStyle.Step:\r\n                            if (downSample) {\r\n                                // work with horizontal pixel coords, vertical data coords for downsampling\r\n                                GDIPlus.GCH.SetTransformRect(ctx, this.gBounds, pixel_and_sample_values_rect);\r\n                                subpixel_max_y = -Number.MAX_VALUE;\r\n                                subpixel_min_y = Number.MAX_VALUE;\r\n                                subpixel_sum_y = 0.0;\r\n                                // collect sub-pixel points\r\n                                ctx.beginPath();\r\n                                ctx.moveTo(pixel_x, chan_data.get(0));\r\n                                for (let idx = 0; idx < num_frames_to_display; ++idx) {\r\n                                    y = chan_data.get(idx);\r\n                                    // update maxY, minY (for auto-scale)\r\n                                    if (scale_y_axis_to_this_channel) {\r\n                                        if (this.AutoYAxisAdjustBehaviour === AutoYAxisAdjustBehaviour.EnsureAllSamplesVisible) {\r\n                                            if (y > nMaxY)\r\n                                                nMaxY = y;\r\n                                            else if (y < nMinY)\r\n                                                nMinY = y;\r\n                                        }\r\n                                        else //\r\n                                            nMinY = nMaxY = y;\r\n                                        if (idx == num_frames_to_display - 1)\r\n                                            last_y = y;\r\n                                    }\r\n                                    if (y > subpixel_max_y)\r\n                                        subpixel_max_y = y;\r\n                                    else if (y < subpixel_min_y)\r\n                                        subpixel_min_y = y;\r\n                                    subpixel_sum_y += y;\r\n                                    // this.subpixel_stats.Put(y);\r\n                                    if (idx - last_rendered_idx >= samples_per_pixel) {\r\n                                        switch (downsample_algorithm) {\r\n                                            case DownSampleAlgorithm.MinMax:\r\n                                                ctx.lineTo(pixel_x, subpixel_min_y);\r\n                                                ctx.lineTo(pixel_x, subpixel_max_y);\r\n                                                ctx.lineTo(pixel_x + 1, subpixel_max_y);\r\n                                                break;\r\n                                            case DownSampleAlgorithm.Avg:\r\n                                                ctx.lineTo(pixel_x, subpixel_sum_y / samples_per_pixel);\r\n                                                break;\r\n                                            case DownSampleAlgorithm.Decimate:\r\n                                            default:\r\n                                                ctx.lineTo(pixel_x, y);\r\n                                        }\r\n                                        ++pixel_x;\r\n                                        // reset subpixel min, max and sum\r\n                                        subpixel_max_y = -Number.MAX_VALUE;\r\n                                        subpixel_min_y = Number.MAX_VALUE;\r\n                                        subpixel_sum_y = 0.0;\r\n                                        last_rendered_idx = idx;\r\n                                    }\r\n                                }\r\n                                ctx.setTransform(1, 0, 0, 1, this.gBounds.x, this.gBounds.y);\r\n                                ctx.lineWidth = 1.0;\r\n                                ctx.lineJoin = 'miter';\r\n                                ctx.stroke();\r\n                            }\r\n                            else {\r\n                                GDIPlus.GCH.SetTransformRect(ctx, this.gBounds, time_and_sample_values_rect);\r\n                                ctx.beginPath();\r\n                                let y_old = chan_data.get(0);\r\n                                if (render_style === RenderStyle.Step)\r\n                                    ctx.lineTo(t, y_old);\r\n                                else\r\n                                    ctx.moveTo(t, y_old);\r\n                                const dt = this.sampleDuration;\r\n                                for (let idx = 0; idx < num_frames_to_display; ++idx) {\r\n                                    const y = chan_data.get(idx);\r\n                                    if (render_style === RenderStyle.Step)\r\n                                        ctx.lineTo(t, y);\r\n                                    t += dt;\r\n                                    // update maxY, minY\r\n                                    if (scale_y_axis_to_this_channel) {\r\n                                        if (this.AutoYAxisAdjustBehaviour === AutoYAxisAdjustBehaviour.EnsureAllSamplesVisible) {\r\n                                            if (y > nMaxY)\r\n                                                nMaxY = y;\r\n                                            else if (y < nMinY)\r\n                                                nMinY = y;\r\n                                        }\r\n                                        else //\r\n                                            nMinY = nMaxY = y;\r\n                                        if (idx == num_frames_to_display - 1)\r\n                                            last_y = y;\r\n                                    }\r\n                                    // https://stackoverflow.com/questions/7054272/how-to-draw-smooth-curve-through-n-points-using-javascript-html5-canvas\r\n                                    if (render_style === RenderStyle.Step)\r\n                                        ctx.lineTo(t, y);\r\n                                    else {\r\n                                        ctx.quadraticCurveTo(t + dt / 4, y_old, t + dt / 2, (y_old + y) / 2);\r\n                                        ctx.quadraticCurveTo(t + 3 * dt / 4, y, t + dt, y);\r\n                                    }\r\n                                    y_old = y;\r\n                                    //\r\n                                }\r\n                                ctx.setTransform(1, 0, 0, 1, this.gBounds.x, this.gBounds.y);\r\n                                ctx.lineWidth = 1;\r\n                                ctx.stroke();\r\n                            }\r\n                            break;\r\n                        case RenderStyle.Segment:\r\n                            GDIPlus.GCH.SetTransformRect(ctx, this.gBounds, time_and_sample_values_rect);\r\n                            for (let idx = 1; idx < num_frames_to_display; ++idx) {\r\n                                t += this.sampleDuration;\r\n                                const next_sample_is_in_segment = chan_data.get(idx) !== 0;\r\n                                if (segment_start_t >= 0) { // in segment\r\n                                    if (!next_sample_is_in_segment) {\r\n                                        // segment end, fill it\r\n                                        ctx.fillRect(segment_start_t, time_and_sample_values_rect.y, t - segment_start_t, time_and_sample_values_rect.height);\r\n                                        segment_start_t = -1;\r\n                                    }\r\n                                }\r\n                                else { // not in segment\r\n                                    if (next_sample_is_in_segment) { // new segment start\r\n                                        segment_start_t = t;\r\n                                    }\r\n                                }\r\n                            }\r\n                            // close final segment if we're in one\r\n                            if (segment_start_t >= 0) {\r\n                                ctx.fillRect(segment_start_t, time_and_sample_values_rect.y, t - segment_start_t, time_and_sample_values_rect.height);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n        }\r\n        ctx.restore();\r\n        if (this.AutoYAxisAdjustBehaviour === AutoYAxisAdjustBehaviour.EnsureMostRecentSampleVisible) {\r\n            last_y /= this.SampleUnitMultiplier;\r\n            if (last_y > this.maxY) {\r\n                nMaxY = last_y;\r\n                nMinY = last_y - (this.maxY - this.minY);\r\n            }\r\n            else if (last_y < this.minY) {\r\n                nMinY = last_y;\r\n                nMaxY = last_y + (this.maxY - this.minY);\r\n            }\r\n        }\r\n        else {\r\n            nMaxY /= this.SampleUnitMultiplier;\r\n            nMinY /= this.SampleUnitMultiplier;\r\n        }\r\n        const YExtentChanged = this.maxY != nMaxY || this.minY != nMinY;\r\n        this.maxY = nMaxY;\r\n        this.minY = nMinY;\r\n        return YExtentChanged; // true means Y extent has changed\r\n    }\r\n    pixels2duration(gx) {\r\n        return this.dBounds.width * gx / this.gBounds.width;\r\n    }\r\n    g2dX(gx) {\r\n        return this.pixels2duration(gx) + this.dBounds.x;\r\n    }\r\n    samples_per_pixel() {\r\n        return this.dBounds.width / this.gBounds.width * this.Fs;\r\n    }\r\n    time2pixels(dx) {\r\n        return this.d2gX(dx);\r\n    }\r\n    d2gX(dx) {\r\n        return Math.round((this.gBounds.width * dx / this.dBounds.width) - (this.dBounds.x * this.gBounds.width / this.dBounds.width));\r\n    }\r\n    g2dY(gy) {\r\n        return this.dBounds.height * gy / this.gBounds.height;\r\n    }\r\n    d2gY(dy) {\r\n        return this.gBounds.height - (this.gBounds.height * (dy - this.dBounds.y) / this.dBounds.height);\r\n    }\r\n    d2gHeight(dHeight) {\r\n        return Math.round(dHeight / this.dBounds.height * this.gBounds.height);\r\n    }\r\n    d2gWidth(dWidth) {\r\n        return Math.round(dWidth / this.dBounds.width * this.gBounds.width);\r\n    }\r\n    duration2pixels(dWidth) {\r\n        return this.d2gWidth(dWidth);\r\n    }\r\n    yAxis_Recalc() {\r\n        // noinspection JSSuspiciousNameCombination\r\n        const pow10 = Math.floor(Math.log(Math.LN10));\r\n        this.gridMajorY = Math.pow(10, pow10 - 1);\r\n        while (this.d2gHeight(this.gridMajorY) > (this.gBounds.height)) {\r\n            this.gridMajorY /= 10;\r\n        }\r\n        while (this.d2gHeight(this.gridMajorY) < (this.MIN_GRID_Y * 10)) {\r\n            this.gridMajorY *= 10;\r\n        }\r\n        this.gridMinorY = this.gridMajorY / 10;\r\n        if (this.d2gHeight(this.gridMinorY) < this.MIN_GRID_Y)\r\n            this.gridMinorY *= 2;\r\n    }\r\n    timeAxis_Recalc() {\r\n        const pow10 = Math.floor(Math.log(this.dBounds.width) / Math.LN10);\r\n        this.gridMajorX = Math.pow(10, pow10 - 1);\r\n        if (this.gBounds.width > 0) {\r\n            while (this.duration2pixels(this.gridMajorX) < this.MIN_GRID_X * 10) {\r\n                this.gridMajorX *= 10;\r\n            }\r\n        }\r\n        this.gridMinorX = this.gridMajorX / 10;\r\n        if (this.gBounds.width > 0) {\r\n            if (this.duration2pixels(this.gridMinorX) < this.MIN_GRID_X) {\r\n                this.gridMinorX *= 2;\r\n            }\r\n        }\r\n    }\r\n    RenderGraphGrid(ctx) {\r\n        const gRect = this.gBounds;\r\n        const dRect = this.dBounds;\r\n        ctx.save();\r\n        GDIPlus.GCH.setClip(ctx, gRect);\r\n        GDIPlus.GCH.SetOrigin(ctx, gRect.x, gRect.y);\r\n        let firstGridX, firstGridY;\r\n        let x, y;\r\n        firstGridY = this.gridMinorY * Math.floor(dRect.y / this.gridMinorY);\r\n        for (y = firstGridY; y < dRect.y + dRect.height; y += this.gridMinorY) {\r\n            const gy = this.d2gY(y);\r\n            GDIPlus.GCH.DrawLine(ctx, this.penGridMinor, 0, gy, gRect.width, gy);\r\n        }\r\n        // find first grid major point\r\n        firstGridY = this.gridMajorY * Math.floor(dRect.y / this.gridMajorY);\r\n        for (y = firstGridY; y < dRect.y + dRect.height; y += this.gridMajorY) {\r\n            const gy = this.d2gY(y);\r\n            GDIPlus.GCH.DrawLine(ctx, this.penGridMajor, 0, gy, gRect.width, gy);\r\n        }\r\n        firstGridX = this.gridMinorX * Math.floor(dRect.x / this.gridMinorX);\r\n        for (x = firstGridX; x < dRect.x + dRect.width; x += this.gridMinorX) {\r\n            const gx = this.d2gX(x);\r\n            GDIPlus.GCH.DrawLine(ctx, this.penGridMinor, gx, 0, gx, gRect.height);\r\n        }\r\n        // find first grid major point\r\n        firstGridX = this.gridMajorX * Math.floor(dRect.x / this.gridMajorX);\r\n        for (x = firstGridX; x < dRect.x + dRect.width; x += this.gridMajorX) {\r\n            const gx = this.d2gX(x);\r\n            GDIPlus.GCH.DrawLine(ctx, this.penGridMajor, gx, 0, gx, gRect.height);\r\n        }\r\n        ctx.restore();\r\n    }\r\n    // Moved to App.ts\r\n    // RenderConnectionLed(ctx: CanvasRenderingContext2D): void {\r\n    //     let led_color = '#444444' // not connected\r\n    //     const conn = this.conn_;\r\n    //     if (conn.Sock) {\r\n    //         led_color = conn.Sock.readyState === 3 ? '#444444' : // closed\r\n    //             conn.Sock.readyState === 2 ? '#104700' : // closing\r\n    //                 conn.Sock.readyState === 1 ? '#03ac00' : // open\r\n    //                     conn.Sock.readyState === 0 ? '#c3c300' : // connecting\r\n    //                         '#be0000'; // error/unknown\r\n    //     }\r\n    //         const led_radius =  8;\r\n    //     Scope.drawLed(ctx, this.gBounds.right - led_radius - 2, this.gBounds.bottom - led_radius -2, led_radius, led_color);\r\n    // }\r\n    // return true if y scale needed to be adjusted\r\n    // Adjust the YAxis to honour the scope_audio's AutoYAxisAdjustBehaviour\r\n    AdjustYAxis() {\r\n        if (!this.AutoScaleY)\r\n            return false;\r\n        const max = this.maxY;\r\n        const min = this.minY;\r\n        const rescale_factor = .95;\r\n        if ((max != -Number.MAX_VALUE) && (min <= max)) {\r\n            const oh = this.dBounds.height;\r\n            const oy = this.dBounds.y;\r\n            // update Yscale to fit maxY, minY\r\n            const range = max - min;\r\n            // Fit all data if data range is < 1/4 or > data window height\r\n            if (this.AutoYAxisAdjustBehaviour === AutoYAxisAdjustBehaviour.EnsureAllSamplesVisible) {\r\n                if (range > 0) {\r\n                    // fit data window height to data range\r\n                    // range less than 1/4 of window, too small\r\n                    if (range < oh / 4) {\r\n                        this.DataHeight *= rescale_factor; // range / 4;\r\n                        this.dBounds.y -= this.DataHeight / rescale_factor / 2;\r\n                    }\r\n                    // range more than window, too big\r\n                    else if (range > oh) {\r\n                        this.DataHeight = range + range * rescale_factor;\r\n                        this.dBounds.y = min - range * rescale_factor / 2;\r\n                    }\r\n                }\r\n            }\r\n            // range is ok, but data offset might be too low or high\r\n            if ((min < this.dBounds.y) || (max > this.dBounds.y + this.dBounds.height))\r\n                this.dBounds.y = min - (this.dBounds.height - range) / 2;\r\n            return ((oh != this.dBounds.height) || (oy != this.dBounds.y));\r\n        }\r\n        return false;\r\n    }\r\n    GetArea(X, Y) {\r\n        // Note, this test must be done first, because buttons bounds now floats on top of plot area\r\n        if (this.ButtonsBounds.Contains(X, Y))\r\n            return (X < this.ButtonsBounds.x + this.ButtonsBounds.width / 2) ? Area.AutoScaleButton : Area.FollowSignalButton;\r\n        if (this.gBounds.Contains(X, Y))\r\n            return Area.Graph;\r\n        if (this.timeAxisBounds.Contains(X, Y))\r\n            return Area.TimeAxis;\r\n        if (this.yAxisBounds.Contains(X, Y))\r\n            return Area.YAxis;\r\n        return Area.None;\r\n    }\r\n    graph_Zoom(x, y) {\r\n        const SLOP = 1; // cursor can move 1 pixel between button down and button up before considered to be dragging\r\n        const GRAPH_ZOOM_RATIO = 20.0;\r\n        const delta_x = this.dragPoint.x - x;\r\n        const delta_y = this.dragPoint.y - y;\r\n        if (!(delta_x <= SLOP && delta_x >= -SLOP && delta_y <= SLOP && delta_y >= -SLOP)) {\r\n            this.dragPoint.x = x;\r\n            this.dragPoint.y = y;\r\n            const mag_dx = delta_x < 0 ? -delta_x : delta_x;\r\n            const mag_dy = delta_y < 0 ? -delta_y : delta_y;\r\n            const sgn_dx = delta_x < 0 ? 1 : -1;\r\n            const sgn_dy = delta_y < 0 ? -1 : 1;\r\n            if (mag_dx > mag_dy) {\r\n                this.FollowSignal = false; // Stop automatically adjusting time axis\r\n                const fact = (GRAPH_ZOOM_RATIO - sgn_dx) / GRAPH_ZOOM_RATIO;\r\n                this.onScreenCanvas.style.cursor = 'col-resize';\r\n                this.DataWidth *= fact;\r\n                this.DataX += this.DataWidth * (1 / fact - 1) * this.dragStartPoint.x / this.gBounds.width;\r\n            }\r\n            else {\r\n                this.AutoScaleY = false; // Stop automatically adjusting Y axis\r\n                const fact = (GRAPH_ZOOM_RATIO - sgn_dy) / GRAPH_ZOOM_RATIO;\r\n                this.onScreenCanvas.style.cursor = 'row-resize';\r\n                this.DataHeight *= fact;\r\n                this.DataY += this.DataHeight * (1 / fact - 1) * 0.5 /* (1 - dragStartPoint.Y / gBounds.Height) */;\r\n            }\r\n        }\r\n    }\r\n    yAxis_Scroll(y) {\r\n        const delta_y = this.dragPoint.y - y;\r\n        this.DataY -= this.g2dY(delta_y);\r\n        this.dragPoint.y = y;\r\n        if (delta_y > 0)\r\n            this.onScreenCanvas.style.cursor = 'n-resize';\r\n        else if (delta_y < 0)\r\n            this.onScreenCanvas.style.cursor = 's-resize';\r\n    }\r\n    timeAxis_Scroll(x) {\r\n        const delta_x = x - this.dragPoint.x;\r\n        this.DataX -= this.pixels2duration(delta_x);\r\n        this.dragPoint.x = x;\r\n        if (this.DataX === 0)\r\n            this.onScreenCanvas.style.cursor = 'not-allowed';\r\n        else if (delta_x > 0)\r\n            this.onScreenCanvas.style.cursor = 'e-resize';\r\n        else if (delta_x < 0)\r\n            this.onScreenCanvas.style.cursor = 'w-resize';\r\n    }\r\n}\r\nvar Area;\r\n(function (Area) {\r\n    Area[Area[\"None\"] = 0] = \"None\";\r\n    Area[Area[\"Graph\"] = 1] = \"Graph\";\r\n    Area[Area[\"TimeAxis\"] = 2] = \"TimeAxis\";\r\n    Area[Area[\"YAxis\"] = 3] = \"YAxis\";\r\n    Area[Area[\"AutoScaleButton\"] = 4] = \"AutoScaleButton\";\r\n    Area[Area[\"FollowSignalButton\"] = 5] = \"FollowSignalButton\";\r\n})(Area || (Area = {}));\r\n//# sourceMappingURL=Scope.js.map","var cvUtils;\r\n(function (cvUtils) {\r\n    function cvError(err) {\r\n        if (typeof err === 'undefined') {\r\n            err = '';\r\n        }\r\n        else if (typeof err === 'number') {\r\n            if (!isNaN(err)) {\r\n                if (typeof cv !== 'undefined') {\r\n                    err = 'Exception: ' + cv.exceptionFromPtr(err).msg;\r\n                }\r\n            }\r\n        }\r\n        else if (typeof err === 'string') {\r\n            let ptr = Number(err.split(' ')[0]);\r\n            if (!isNaN(ptr)) {\r\n                if (typeof cv !== 'undefined') {\r\n                    err = 'Exception: ' + cv.exceptionFromPtr(ptr).msg;\r\n                }\r\n            }\r\n        }\r\n        else if (err instanceof Error) {\r\n            err = err.stack.replace(/\\n/g, '<br>');\r\n        }\r\n        console.error(err);\r\n    }\r\n    cvUtils.cvError = cvError;\r\n    ;\r\n    async function cvCreateFileFromUrl(filename, url) {\r\n        const resp = await fetch(url);\r\n        let data = new Uint8Array(await resp.arrayBuffer());\r\n        cv.FS_createDataFile('/', filename, data, true, false, false);\r\n    }\r\n    ;\r\n    async function cvCreateCascadeClassifier(xml_file_name) {\r\n        const classifier = new cv.CascadeClassifier();\r\n        const url = `${__webpack_public_path__}assets/haarcascades/${xml_file_name}`;\r\n        await cvCreateFileFromUrl(xml_file_name, url);\r\n        classifier.load(xml_file_name);\r\n        return classifier;\r\n    }\r\n    cvUtils.cvCreateCascadeClassifier = cvCreateCascadeClassifier;\r\n})(cvUtils || (cvUtils = {}));\r\nexport class FaceDetectElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this.face_count_ = 0;\r\n        this.eyes_count_ = 0;\r\n        const self = this;\r\n        const shadow = this.attachShadow({ mode: 'open' }); // sets and returns 'this.shadowRoot'\r\n        const video = document.createElement('video');\r\n        const canvas = document.createElement('canvas');\r\n        video.width = canvas.width = 320;\r\n        video.height = canvas.height = 240;\r\n        canvas.id = 'canvasOutput';\r\n        const style = document.createElement('style');\r\n        // noinspection CssInvalidPropertyValue\r\n        // el.innerText = this.hasAttribute('value') ? this.getAttribute('value') as string: '(value)';\r\n        // el.className = 'private-style1';\r\n        // noinspection CssInvalidFunction,CssInvalidPropertyValue\r\n        style.textContent = `\r\n            canvas {\r\n                width: 320px;\r\n                height: 240px;\r\n            }\r\n            video {\r\n                 width: 320px;\r\n                height: 240px;           \r\n            }\r\n        `;\r\n        shadow.append(style, video, canvas);\r\n        (async () => {\r\n            await self.OpenCVReady;\r\n            await self.init(video, canvas);\r\n        })();\r\n    }\r\n    get FaceCount() { return this.face_count_; }\r\n    get EyesCount() { return this.eyes_count_; }\r\n    get OpenCVReady() {\r\n        if (this.cv_ready === undefined) {\r\n            this.cv_ready = new Promise((resolve) => {\r\n                cv['onRuntimeInitialized'] = resolve;\r\n            });\r\n        }\r\n        return this.cv_ready;\r\n    }\r\n    get Enabled() {\r\n        return this.hasAttribute('enabled') ? this.getAttribute('enabled').toLocaleLowerCase() === 'true' : false;\r\n    }\r\n    async init(video, canvas) {\r\n        const self = this;\r\n        let src = new cv.Mat(video.height, video.width, cv.CV_8UC4);\r\n        let dst = new cv.Mat(video.height, video.width, cv.CV_8UC4);\r\n        let gray = new cv.Mat();\r\n        let cap = new cv.VideoCapture(video);\r\n        let faces = new cv.RectVector();\r\n        let eyes = new cv.RectVector();\r\n        let face_classifier = new cv.CascadeClassifier();\r\n        let eye_classifier = new cv.CascadeClassifier();\r\n        const FPS = 5;\r\n        const constraints = {\r\n            audio: false,\r\n            video: {\r\n                width: { min: 320, ideal: 320, max: 320 },\r\n                height: { min: 240, ideal: 240, max: 240 }\r\n            }\r\n        };\r\n        navigator.mediaDevices.getUserMedia(constraints)\r\n            .then(async (stream) => {\r\n            video.srcObject = stream;\r\n            const processVideo = async () => {\r\n                if (!self.Enabled)\r\n                    setTimeout(processVideo, 500);\r\n                else {\r\n                    try {\r\n                        // if (!stream) {\r\n                        //     // clean and stop.\r\n                        //     src.delete();\r\n                        //     dst.delete();\r\n                        //     gray.delete();\r\n                        //     faces.delete();\r\n                        //     face_classifier.delete();\r\n                        //     return;\r\n                        // }\r\n                        const begin = Date.now();\r\n                        // start processing.\r\n                        cap.read(src);\r\n                        src.copyTo(dst);\r\n                        cv.cvtColor(dst, gray, cv.COLOR_RGBA2GRAY, 0);\r\n                        // detect faces.\r\n                        face_classifier.detectMultiScale(gray, faces, 1.1, 3, 0);\r\n                        self.face_count_ = faces.size();\r\n                        // draw faces.\r\n                        for (let i = 0; i < self.face_count_; ++i) {\r\n                            let face = faces.get(i);\r\n                            let point1 = new cv.Point(face.x, face.y);\r\n                            let point2 = new cv.Point(face.x + face.width, face.y + face.height);\r\n                            cv.rectangle(dst, point1, point2, [255, 0, 0, 255]);\r\n                        }\r\n                        eye_classifier.detectMultiScale(gray, eyes, 1.1, 3, 0);\r\n                        self.eyes_count_ = eyes.size();\r\n                        for (let i = 0; i < self.eyes_count_; ++i) {\r\n                            let eye = eyes.get(i);\r\n                            let point1 = new cv.Point(eye.x, eye.y);\r\n                            let point2 = new cv.Point(eye.x + eye.width, eye.y + eye.height);\r\n                            cv.rectangle(dst, point1, point2, [255, 255, 0, 255]);\r\n                        }\r\n                        cv.imshow(canvas, dst);\r\n                        // schedule the next one.\r\n                        const delay = 1000 / FPS - (Date.now() - begin);\r\n                        setTimeout(processVideo, delay);\r\n                    }\r\n                    catch (err) {\r\n                        cvUtils.cvError(err);\r\n                    }\r\n                }\r\n            };\r\n            // Create haar cascade classifiers\r\n            face_classifier = await cvUtils.cvCreateCascadeClassifier('haarcascade_frontalface_default.xml');\r\n            eye_classifier = await cvUtils.cvCreateCascadeClassifier('haarcascade_eye_tree_eyeglasses.xml');\r\n            // schedule the first one.\r\n            video.play().then(() => { setTimeout(processVideo, 0); });\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=FaceDetectElement.js.map","/**\r\n * @file CustomElement.ts\r\n * @author Josh Greifer <joshgreifer@gmail.com>\r\n * @copyright © 2020 Josh Greifer\r\n * @licence\r\n * Copyright © 2020 Josh Greifer\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n * @summary HTML Custom element wrapping a Scope.  It hooks window Resize() events\r\n * and delegates them to the Scope, so it can resize its internal canvases and data buffers.\r\n *\r\n */\r\nimport { Scope } from \"../Scope\";\r\nexport class ScopeElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        const shadow = this.attachShadow({ mode: 'open' }); // sets and returns 'this.shadowRoot'\r\n        const el = document.createElement('div');\r\n        const scope_el = document.createElement('div');\r\n        const has_labels = this.hasAttribute('labels');\r\n        const labels_el = has_labels ? document.createElement('div') : undefined;\r\n        const marker_editor_dialog_el = document.createElement('dialog');\r\n        const height = this.hasAttribute('height') ? this.getAttribute('height') : '80vh';\r\n        const width = this.hasAttribute('width') ? this.getAttribute('width') : '70vh';\r\n        marker_editor_dialog_el.innerHTML = `\r\n            <form method=\"dialog\">\r\n                <section>\r\n                <p>\r\n                    <label for=\"label\">Label:</label>\r\n                    <input id=\"label\" name=\"label\" type=\"text\">\r\n                </p>\r\n                </section>\r\n                <menu>\r\n                    <button id=\"cancel\" type=\"reset\">Cancel</button>\r\n                    <button type=\"submit\">Confirm</button>\r\n                </menu>\r\n            </form>\r\n        `;\r\n        // TODO: Get dialog working\r\n        // Marker.editDialog = marker_editor_dialog_el;\r\n        el.appendChild(marker_editor_dialog_el);\r\n        el.appendChild(scope_el);\r\n        if (labels_el) {\r\n            el.appendChild(labels_el);\r\n            labels_el.className = 'labels';\r\n        }\r\n        const style = document.createElement('style');\r\n        // noinspection CssInvalidPropertyValue\r\n        el.className = 'container';\r\n        scope_el.className = 'plot';\r\n        const scope = new Scope(scope_el);\r\n        // noinspection CssInvalidFunction,CssInvalidPropertyValue\r\n        style.textContent = `\r\n\r\n        .container {\r\n            gap: 0;\r\n            width: ${width};\r\n            height: ${height};\r\n            border: 1px solid rgba(170,170,170, 0.3);\r\n            border-radius: 10px;\r\n            margin: 0;\r\n            overflow: hidden;\r\n            display: grid;\r\n\r\n            background-clip: content-box;\r\n            grid-template-rows: 1fr ${labels_el ? 24 : 0}px;\r\n            grid-template-columns: 1fr;\r\n            grid-template-areas:\r\n                \"plot\"\r\n                \"labels\"\r\n        }\r\n\r\n        .labels {\r\n            border-top: 1px solid rgb(71,71,71);\r\n            background-color: ${scope.AxesBackColor};\r\n            grid-area: labels;\r\n            position: relative;\r\n        }\r\n\r\n\r\n        .cue {\r\n            font-family: monospace;\r\n            font-size: 12px;\r\n            border-radius: 0 3px 3px 0;\r\n            border-left: solid rgb(229,205,82);\r\n            position: absolute;\r\n            display: inline;\r\n            top: 0px;\r\n            padding: 5px;\r\n            /*width: 100px;*/\r\n            color: white;\r\n            background-color: rgb(84,84,84);\r\n        }\r\n\r\n        .plot {\r\n            grid-area: plot;\r\n         }\r\n            \r\n`;\r\n        this.scope_ = scope;\r\n        const t2x = (t) => {\r\n            return scope.d2gX(t) + scope.GraphBounds.x;\r\n        };\r\n        const d2w = (d) => {\r\n            return scope.duration2pixels(d);\r\n        };\r\n        scope.on('reset', () => { if (labels_el)\r\n            while (labels_el.firstChild)\r\n                labels_el.removeChild(labels_el.firstChild); });\r\n        scope.on('marker-added', (marker) => {\r\n            if (labels_el) {\r\n                const cue_el = document.createElement('div');\r\n                marker.on('label-changed', (new_label) => {\r\n                    cue_el.innerHTML = new_label;\r\n                    cue_el.style.borderLeftColor = marker.color;\r\n                });\r\n                cue_el.dataset.time = '' + marker.time;\r\n                cue_el.classList.add('cue');\r\n                cue_el.innerHTML = marker.label;\r\n                cue_el.style.left = t2x(marker.time) + 'px';\r\n                cue_el.style.borderLeftColor = marker.color;\r\n                labels_el.appendChild(cue_el);\r\n            }\r\n        });\r\n        // Update the position of the cues when time axis changes\r\n        scope.on('TimeAxisChanged', () => {\r\n            const cue_els = el.querySelectorAll('.cue');\r\n            for (const el of cue_els) {\r\n                const cue_el = el;\r\n                cue_el.style.left = t2x(Number.parseFloat(cue_el.dataset.time)) + 'px';\r\n            }\r\n        });\r\n        // Update the position of the cues when y axis changes\r\n        // scope.on('YAxisChanged', () => {\r\n        //     const cue_els = el.querySelectorAll('.cue');\r\n        //     for (const el of cue_els) {\r\n        //         const cue_el = el as HTMLDivElement;\r\n        //         cue_el.style.top = t2y(Number.parseFloat(cue_el.dataset.time as string)) + 'px';\r\n        //     }\r\n        //\r\n        // });\r\n        shadow.append(style, el);\r\n        window.addEventListener('resize', (ev => { this.scope_.Resize(el.clientWidth, el.clientHeight - (labels_el ? 24 : 0)); }));\r\n        this.scope_.Resize(el.clientWidth, el.clientHeight - (labels_el ? 24 : 0));\r\n    }\r\n    get Scope() { return this.scope_; }\r\n}\r\n//# sourceMappingURL=ScopeElement.js.map","/**\r\n * @file DataConnection.ts\r\n * @author Josh Greifer <joshgreifer@gmail.com>\r\n * @copyright © 2020 Josh Greifer\r\n * @licence\r\n * Copyright © 2020 Josh Greifer\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n * @summary A multi-channel real-time data buffer, optimised for speed.\r\n * Internally uses ndarray views and implements a circular buffer.\r\n * When data is added (using .addData(),  the DataConnection emits a\r\n * 'data' event.   Subscribers to this event should then access the data in the buffer\r\n * using its Data() method, using start and end time offsets.\r\n *\r\n */\r\nimport NDArray from 'ndarray';\r\nimport EventEmitter from \"eventemitter3\";\r\nclass DataBuffer {\r\n    constructor(sz, num_channels, /* bits_per_sample: number, */ array_constructor) {\r\n        this.idx_ = 0; // The offset into buffer of where to put new data\r\n        this.nBuffersRead_ = 0; // The number of times we've filled the buffer\r\n        this.sampleCount_ = 0; // total number of data items read (grows past SZ)\r\n        this.NUM_CHANNELS = num_channels;\r\n        this.SZ = sz;\r\n        this.buf_ = new array_constructor(2 * sz * num_channels);\r\n        this.reset();\r\n    }\r\n    get RowCount() {\r\n        return this.sampleCount_ / this.NUM_CHANNELS;\r\n    }\r\n    get BuffersRead() {\r\n        return this.nBuffersRead_;\r\n    }\r\n    get Data() { return this.buf_.subarray(0, this.sampleCount_ % this.SZ); }\r\n    put(new_data) {\r\n        // assert new_data.length % num_channels === 0\r\n        const N = this.buf_.length / 2;\r\n        const n = new_data.length;\r\n        // assert (n <= N);\r\n        let idx = this.idx_;\r\n        this.buf_.set(new_data, idx);\r\n        // if data has gone past end of 1st half of underlying buffer,\r\n        // copy the overflowed data to start of the buffer (i.e. make it a circular buffer)\r\n        const extra = (idx + n) - N;\r\n        if (extra > 0) {\r\n            this.buf_.set(new_data.subarray(n - extra), 0);\r\n        }\r\n        if ((idx += n) >= N) {\r\n            ++this.nBuffersRead_;\r\n            idx -= N;\r\n        }\r\n        this.idx_ = idx;\r\n        this.sampleCount_ += n;\r\n    }\r\n    // t is sample_number, not time - return actual index into buffer at sample number t\r\n    index(t) { return (t % this.SZ) * this.NUM_CHANNELS; }\r\n    raw_view(t, n) {\r\n        t %= this.SZ;\r\n        t *= this.NUM_CHANNELS;\r\n        n *= this.NUM_CHANNELS;\r\n        return this.buf_.subarray(t, t + n);\r\n    }\r\n    // returns view of sample buffer starting at time t\r\n    view(t, n) {\r\n        const N = this.SZ;\r\n        const nd_array = NDArray(this.buf_, [2 * N, this.NUM_CHANNELS]);\r\n        //       const idx = this.idx_ / this.NUM_CHANNELS;\r\n        t %= N;\r\n        //       t += idx;\r\n        //        t -= this.StartCount;\r\n        //        if (t+n < 0 || t >= this.SZ)\r\n        //            return null;\r\n        return nd_array.lo(t, 0);\r\n    }\r\n    reset() { this.nBuffersRead_ = this.idx_ = this.sampleCount_ = 0; }\r\n}\r\nexport class DataConnection extends EventEmitter {\r\n    constructor(Fs, NumChannels, array_constructor) {\r\n        super();\r\n        this.Fs = Fs;\r\n        this.NumChannels = NumChannels;\r\n        this.MeasuredFs = 0;\r\n        this.perf_start_frames_read = 0;\r\n        this.perf_start_time = 0;\r\n        this.buf_ = new DataBuffer(DataConnection.BUFFER_SIZE_SECONDS * this.Fs, this.NumChannels, array_constructor);\r\n    }\r\n    AddData(data) {\r\n        this.buf_.put(data);\r\n        this.emit('data', data);\r\n    }\r\n    get HasData() { return this.buf_.RowCount > 0; }\r\n    get CurrentTimeSecs() { return this.buf_.RowCount / this.Fs; }\r\n    get StartTimeSecs() { return this.buf_.BuffersRead * DataConnection.BUFFER_SIZE_SECONDS; }\r\n    get NumFramesRead() { return this.buf_.RowCount; }\r\n    Reset() {\r\n        this.buf_.reset();\r\n        this.emit('reset');\r\n        this.startPerformanceMeasurement();\r\n    }\r\n    Data(start_time_seconds, duration_seconds) {\r\n        return this.buf_.view(start_time_seconds * this.Fs, duration_seconds * this.Fs);\r\n    }\r\n    DataRaw() {\r\n        return this.buf_.Data;\r\n    }\r\n    FrameOffsetToIndex(frame_offset) { return this.buf_.index(frame_offset); }\r\n    TimeToIndex(t) { return this.buf_.index(Math.round(t * this.Fs)); }\r\n    ValueAtTime(t, channel = 0) {\r\n        return this.Data(t, 1 / this.Fs).pick(channel).get(-1);\r\n    }\r\n    startPerformanceMeasurement() {\r\n        this.perf_start_time = window.performance.now();\r\n        this.perf_start_frames_read = this.NumFramesRead;\r\n    }\r\n    measurePerformance() {\r\n        const now = window.performance.now();\r\n        const frames_we_should_have_read = (now - this.perf_start_time) / 1000 * this.Fs;\r\n        const frames_read = this.NumFramesRead - this.perf_start_frames_read;\r\n        const speed = (frames_read / frames_we_should_have_read) || 1;\r\n        // const  fs = speed * this.Fs;\r\n        this.MeasuredFs = frames_read / ((now - this.perf_start_time) / 1000);\r\n    }\r\n}\r\nDataConnection.BUFFER_SIZE_SECONDS = 3600;\r\n//# sourceMappingURL=DataConnection.js.map","/**\r\n * @file WebSocketDataConnection.ts\r\n * @author Josh Greifer <joshgreifer@gmail.com>\r\n * @copyright © 2020 Josh Greifer\r\n * @licence\r\n * Copyright © 2020 Josh Greifer\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n * @summary Subclass of DataConnection.  Data is added to its internal\r\n * buffer from a websocket.\r\n *\r\n */\r\nimport { DataConnection } from \"./DataConnection\";\r\nfunction parseEDA(eda_report) {\r\n    return new Int16Array(eda_report).subarray(1, 2);\r\n}\r\nexport class WebSocketDataConnection extends DataConnection {\r\n    constructor(sample_rate, num_channels, array_constructor, parser) {\r\n        super(sample_rate, num_channels, array_constructor);\r\n        this.array_constructor = array_constructor;\r\n        this.parser = parser;\r\n        this.statusListeners = [];\r\n        this.informListeners = (conn) => {\r\n            this.statusListeners.forEach((el) => { el.onConnectionStatus(this); });\r\n            setTimeout(() => { this.informListeners(this); }, 250);\r\n        };\r\n        // begin the periodic status updates\r\n        this.informListeners(this);\r\n    }\r\n    AddStatusListener(el) { this.statusListeners.push(el); }\r\n    RemoveStatusListener(el) {\r\n        const idx = this.statusListeners.indexOf(el);\r\n        if (idx >= 0)\r\n            this.statusListeners.splice(idx, 1);\r\n    }\r\n    set Url(url) { this.url_ = url; this.init(); }\r\n    get Url() { return this.url_; }\r\n    get Sock() { return this.sock_; }\r\n    init() {\r\n        if (this.sock_)\r\n            delete this.sock_;\r\n        const ws = new WebSocket(this.url_);\r\n        ws.binaryType = 'arraybuffer';\r\n        ws.onopen = (ev) => {\r\n            // console.log(ev);\r\n            this.startPerformanceMeasurement();\r\n        };\r\n        ws.onclose = (ev) => {\r\n            // console.log(ev);\r\n            // try again later\r\n            setTimeout(() => { this.init(); }, 2000);\r\n        };\r\n        // Test test\r\n        this.parser = parseEDA;\r\n        if (this.parser !== undefined) {\r\n            const parser = this.parser;\r\n            ws.onmessage = (ev) => {\r\n                //      console.log(ev);\r\n                this.AddData(parser(ev.data)); // TEST TEST - parse\r\n                this.measurePerformance();\r\n            };\r\n        }\r\n        else {\r\n            ws.onmessage = (ev) => {\r\n                //      console.log(ev);\r\n                this.AddData(new this.array_constructor(ev.data));\r\n                this.measurePerformance();\r\n            };\r\n        }\r\n        ws.onerror = (ev) => {\r\n            console.error(ev);\r\n        };\r\n        this.sock_ = ws;\r\n    }\r\n}\r\n//# sourceMappingURL=WebSocketDataConnection.js.map","/**\r\n * @file WebSocketDataConnectionElement.ts\r\n * @author Josh Greifer <joshgreifer@gmail.com>\r\n * @copyright © 2020 Josh Greifer\r\n * @licence\r\n * Copyright © 2020 Josh Greifer\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n * @summary A custom element which wraps a websocket connection and listener.\r\n *\r\n *\r\n */\r\nimport * as GDIPlus from \"../GDIPlus\";\r\nimport { WebSocketDataConnection } from \"../WebSocketDataConnection\";\r\nexport class WebSocketDataConnectionElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        const shadow = this.attachShadow({ mode: 'open' }); // sets and returns 'this.shadowRoot'\r\n        const el = document.createElement('canvas');\r\n        const num_channels = this.hasAttribute('channels') ? Number.parseInt(this.getAttribute('channels')) : 1;\r\n        const bits_per_sample = this.hasAttribute('bits') ? Number.parseInt(this.getAttribute('bits')) : 16;\r\n        const sample_rate = this.hasAttribute('sample-rate') ? Number.parseInt(this.getAttribute('sample-rate')) : 1;\r\n        let array_constructor = Int16Array;\r\n        switch (bits_per_sample) {\r\n            case 16:\r\n                array_constructor = Int16Array;\r\n                break;\r\n            case 32:\r\n                array_constructor = Float32Array;\r\n                break;\r\n            case 8:\r\n                array_constructor = Uint8Array;\r\n                break;\r\n            case 64:\r\n                array_constructor = Float64Array;\r\n                break;\r\n            default:\r\n                throw \"Unknown bits per sample\";\r\n        }\r\n        this.conn_ = new WebSocketDataConnection(sample_rate, num_channels, array_constructor);\r\n        if (this.hasAttribute('url')) {\r\n            this.conn_.Url = this.getAttribute('url');\r\n        }\r\n        this.conn_.AddStatusListener(this);\r\n        this.onConnectionStatus = (conn) => {\r\n            el.setAttribute('width', window.getComputedStyle(el, null).getPropertyValue(\"width\"));\r\n            el.setAttribute('height', window.getComputedStyle(el, null).getPropertyValue(\"height\"));\r\n            el.height = 18;\r\n            let msg = '';\r\n            let led_color = '#444444'; // not connected\r\n            let socket_state = '';\r\n            if (conn.Sock) {\r\n                switch (conn.Sock.readyState) {\r\n                    case 3:\r\n                        socket_state = 'closed    ';\r\n                        led_color = '#444444';\r\n                        break;\r\n                    case 2:\r\n                        socket_state = 'closing   ';\r\n                        led_color = '#104700';\r\n                        break;\r\n                    case 1:\r\n                        socket_state = 'open      ';\r\n                        led_color = '#03ac00';\r\n                        break;\r\n                    case 0:\r\n                        socket_state = 'connecting';\r\n                        led_color = '#d4d400';\r\n                        break;\r\n                    default:\r\n                        socket_state = 'unknown   ';\r\n                        led_color = '#be0000';\r\n                        break;\r\n                }\r\n                msg = msg + 'Websocket Connection: ' + socket_state + ' ';\r\n                if (conn.Sock.readyState === 1) {\r\n                    const rate = conn.MeasuredFs.toFixed(0);\r\n                    msg = msg + 'Fs=' + rate + ' ';\r\n                }\r\n            }\r\n            else {\r\n                msg = msg + 'Not connected, press [Connect] button.';\r\n            }\r\n            const ctx = el.getContext('2d');\r\n            //       ctx.fillStyle = 'red';\r\n            ctx.clearRect(0, 0, el.width, el.height);\r\n            ctx.font = '14px Arial';\r\n            //       msg = 'TEST';\r\n            ctx.fillStyle = '#000000';\r\n            ctx.textBaseline = 'middle';\r\n            ctx.textAlign = 'right';\r\n            const led_radius = 6;\r\n            ctx.fillText(msg, el.width - 2 * led_radius - 4, el.height / 2);\r\n            WebSocketDataConnectionElement.drawLed(ctx, el.width - led_radius - 1, el.height / 2, led_radius, led_color);\r\n        };\r\n        shadow.append(el);\r\n    }\r\n    static drawLed(ctx, center_x, center_y, radius, color) {\r\n        const top_y = center_y - radius;\r\n        const gradient_shine = ctx.createLinearGradient(0, top_y + radius / 5, 0, top_y + 4 * radius / 5);\r\n        gradient_shine.addColorStop(0, \"#ffffff\");\r\n        gradient_shine.addColorStop(1, color);\r\n        const gradient_bezel = ctx.createLinearGradient(0, top_y, 0, top_y + 2 * radius);\r\n        gradient_bezel.addColorStop(1, \"#ffffff\");\r\n        gradient_bezel.addColorStop(0, \"#222222\");\r\n        // bezel\r\n        ctx.lineWidth = radius / 4;\r\n        GDIPlus.GCH.DrawCircle(ctx, gradient_bezel, center_x, center_y, radius);\r\n        // bulb\r\n        GDIPlus.GCH.FillCircle(ctx, color, center_x, center_y, radius);\r\n        // shine\r\n        GDIPlus.GCH.FillEllipse(ctx, gradient_shine, center_x, center_y - radius / 2, radius * 3 / 5, radius * 2 / 5);\r\n    }\r\n    set Url(url) {\r\n        this.conn_.Url = url;\r\n        this.setAttribute('url', url);\r\n    }\r\n    get Url() {\r\n        return this.conn_.Url;\r\n    }\r\n    get Connection() { return this.conn_; }\r\n}\r\n//# sourceMappingURL=WebSocketDataConnectionElement.js.map","import { AudioConfig, PropertyId, ResultReason, SpeakerAudioDestination, SpeechConfig, SpeechRecognizer, SpeechSynthesizer } from 'microsoft-cognitiveservices-speech-sdk';\r\nimport { EventEmitter } from \"eventemitter3\";\r\nconst SpeechSDK = require('microsoft-cognitiveservices-speech-sdk');\r\nexport class SpeechService extends EventEmitter {\r\n    constructor(subscription_decrypt_key, create_recognizer = true, create_synthesizer = true) {\r\n        super();\r\n        this.subscription_decrypt_key = subscription_decrypt_key;\r\n        this.create_recognizer = create_recognizer;\r\n        this.create_synthesizer = create_synthesizer;\r\n        this.Initialize(create_recognizer, create_synthesizer);\r\n    }\r\n    get subscriptionKey() {\r\n        let subs_key_encrypted = [13, 90, 82, 1, 12, 12, 95, 1, 12, 90, 0, 11, 4, 13, 12, 13, 82, 9, 1, 12, 88, 15, 4, 6, 9, 14, 89, 2, 7, 93, 14, 83];\r\n        // @ts-ignore\r\n        return String.fromCharCode(...subs_key_encrypted.crypt(new TextEncoder().encode(this.subscription_decrypt_key)));\r\n    }\r\n    Initialize(recognizer, synthesizer) {\r\n        //        const subscriptionKey = '70499f6c9f0a4998ae6db6822b79c2fd';  // SEL\r\n        //        const subscriptionKey = '40b4d551929a48d4894dae43a7322579'; // Harmonica cs-speech\r\n        const serviceRegion = 'eastus';\r\n        const speechConfig = SpeechConfig.fromSubscription(this.subscriptionKey, serviceRegion);\r\n        console.log(this.subscriptionKey);\r\n        //speechConfig.speechSynthesisOutputFormat = SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm;\r\n        if (synthesizer) {\r\n            let audioOutputConfig;\r\n            this.player = new SpeakerAudioDestination();\r\n            this.player.onAudioEnd = (player) => {\r\n                console.log(typeof this.player.internalAudio.srcObject);\r\n                console.log(this.player.internalAudio.src);\r\n                console.log(this.player.internalAudio.currentSrc);\r\n            };\r\n            audioOutputConfig = AudioConfig.fromSpeakerOutput(this.player);\r\n            this.synthesizer = new SpeechSynthesizer(speechConfig, audioOutputConfig);\r\n            this.synthesizer.wordBoundary = (s, e) => {\r\n                console.log(\"(wordBoundary), Text: \" + e.text + \", Audio offset: \" + e.audioOffset / 10000 + \"ms.\");\r\n            };\r\n            this.synthesizer.synthesisCompleted = (s, e) => {\r\n                console.log(\"(synthesisCompleted) Audio length: \" + e.result.audioData.byteLength / 16.0 + \"ms\");\r\n            };\r\n        }\r\n        if (recognizer) {\r\n            const audioInputConfig = AudioConfig.fromDefaultMicrophoneInput();\r\n            this.recognizer = new SpeechRecognizer(speechConfig, audioInputConfig);\r\n            this.recognizer.properties.setProperty(PropertyId.SpeechServiceResponse_ProfanityOption, 'raw');\r\n        }\r\n    }\r\n    async StartContinuousRecognition() {\r\n        const this_ = this;\r\n        this.recognizer.canceled = (sender, event) => {\r\n            console.log('canceled', event);\r\n            this_.emit('error', 'Speech Recognition Error: ' + event.errorDetails);\r\n        };\r\n        this.recognizer.recognized = (sender, event) => {\r\n            console.log('recognized', event);\r\n            if (event.result.reason !== ResultReason.NoMatch)\r\n                this_.emit('recognized', event.result.text);\r\n        };\r\n        this.recognizer.recognizing = (sender, event) => {\r\n            console.log('recognizing', event);\r\n            this_.emit('recognizing', event.result.text);\r\n        };\r\n        this.recognizer.speechStartDetected = (sender, event) => {\r\n            console.log('speechStartDetected', event);\r\n        };\r\n        this.recognizer.speechEndDetected = (sender, event) => {\r\n            console.log('speechEndDetected', event);\r\n        };\r\n        this.recognizer.startContinuousRecognitionAsync();\r\n    }\r\n    async StopContinuousRecognition() {\r\n        this.recognizer.stopContinuousRecognitionAsync();\r\n    }\r\n    Recognize() {\r\n        const this_ = this;\r\n        return new Promise((resolve, reject) => {\r\n            this.recognizer.recognizeOnceAsync(result => {\r\n                const reason = result.reason;\r\n                if (reason == ResultReason.RecognizedSpeech) {\r\n                    this_.emit('SubjectSpoke', result);\r\n                    resolve(result.text);\r\n                }\r\n                else if (reason == ResultReason.NoMatch) {\r\n                    this.emit('SubjectSilent', reason);\r\n                    resolve('$SILENCE # (probably). recognizeOnceAsync returned ResultReason.NoMatch');\r\n                }\r\n                else\r\n                    resolve('$ERROR # (probably). recognizeOnceAsync returned code ' + reason);\r\n            }, e => {\r\n                resolve('$ERROR # recognizeOnceAsync raised error  ' + e);\r\n            });\r\n        });\r\n    }\r\n    async waitForAudioOutputToFinish() {\r\n        const sleep = (ms) => {\r\n            return new Promise(resolve => setTimeout(resolve, ms));\r\n        };\r\n        let last_audio_time = this.player.currentTime;\r\n        do {\r\n            this.emit('WaitingForAudioOutputToFinish');\r\n            await sleep(50);\r\n            const new_audio_time = this.player.currentTime;\r\n            if (new_audio_time != last_audio_time)\r\n                last_audio_time = new_audio_time;\r\n            else\r\n                break;\r\n        } while (true);\r\n        this.emit('AudioOutputFinished');\r\n        this.Initialize(false, true);\r\n    }\r\n    sendSSMLToTTSEngine(ssml) {\r\n        return new Promise((resolve, reject) => {\r\n            this.synthesizer.speakSsmlAsync(ssml, () => {\r\n                resolve();\r\n            }, () => {\r\n                reject();\r\n            });\r\n        });\r\n    }\r\n    sendTextToTTSEngine(text) {\r\n        return new Promise((resolve, reject) => {\r\n            this.synthesizer.speakTextAsync(text, () => {\r\n                resolve();\r\n            }, () => {\r\n                reject();\r\n            });\r\n        });\r\n    }\r\n}\r\nSpeechService.LatencySeconds = 3.500;\r\n//# sourceMappingURL=SpeechService.js.map","import { DataConnection } from \"./DataConnection\";\r\nexport var SigProc;\r\n(function (SigProc) {\r\n    // https://books.google.co.uk/books?id=Zle0_-zk1nsC&pg=PA797&lpg=PA797\r\n    // https://pandas.pydata.org/pandas-docs/version/0.17.0/generated/pandas.ewma.html\r\n    class Ewma {\r\n        constructor(half_life_samples) {\r\n            const alpha = 1.0 - Math.exp(Math.log(0.5) / (half_life_samples));\r\n            let s = NaN;\r\n            this.process = (v) => {\r\n                if (isNaN(s)) // first time\r\n                    s = v;\r\n                else\r\n                    s = v * alpha + s * (1.0 - alpha);\r\n                return s;\r\n            };\r\n            this.Val = () => {\r\n                return s;\r\n            };\r\n        }\r\n    }\r\n    SigProc.Ewma = Ewma;\r\n    // Analyse an EDA signal (see file: doc/Guide to electrodermal activity.pdf)\r\n    class EDAAnalyzer {\r\n        constructor(conn) {\r\n            let ewma = new SigProc.Ewma(5 * conn.Fs);\r\n            const SCRConnection = new DataConnection(conn.Fs, 1, Float64Array);\r\n            const SCLConnection = new DataConnection(conn.Fs, 2, Float64Array);\r\n            conn.on('reset', () => {\r\n                ewma = new SigProc.Ewma(5 * conn.Fs);\r\n            });\r\n            conn.on('data', (data) => {\r\n                let data_SCR = new Float64Array(data.length);\r\n                let data_EDA_and_SCL = new Float64Array(2 * data.length);\r\n                for (let i = 0; i < data.length; ++i) {\r\n                    const v = data[i];\r\n                    const v_ewma = ewma.process(v);\r\n                    data_SCR[i] = v - v_ewma;\r\n                    data_EDA_and_SCL[2 * i] = v;\r\n                    data_EDA_and_SCL[2 * i + 1] = v_ewma;\r\n                }\r\n                SCRConnection.AddData(data_SCR);\r\n                SCLConnection.AddData(data_EDA_and_SCL);\r\n            });\r\n            this.EDA = conn;\r\n            this.SCL = SCLConnection;\r\n            this.SCR = SCRConnection;\r\n        }\r\n    }\r\n    SigProc.EDAAnalyzer = EDAAnalyzer;\r\n})(SigProc || (SigProc = {}));\r\n//# sourceMappingURL=SigProc.js.map","// Core of this code comes from https://github.com/niklasvh/base64-arraybuffer/blob/master/lib/base64-arraybuffer.js\r\nclass _BufferUtils {\r\n    constructor() {\r\n        const factories = {\r\n            'Buffer': Uint8Array,\r\n            'Int8Array': Int8Array,\r\n            'Uint8Array': Uint8Array,\r\n            'Int16Array': Int16Array,\r\n            'Uint16Array': Uint16Array,\r\n            'Int32Array': Int32Array,\r\n            'Uint32Array': Uint32Array,\r\n            'Float32Array': Float32Array,\r\n            'Float64Array': Float64Array,\r\n            'Uint8ClampedArray': Uint8ClampedArray,\r\n        };\r\n        const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n        const lookup = new Uint8Array(256);\r\n        for (let i = 0; i < chars.length; i++) {\r\n            lookup[chars.charCodeAt(i)] = i;\r\n        }\r\n        this.encode = (bufferData) => {\r\n            const arrayBuffer = bufferData.buffer;\r\n            const dtype = Object.getPrototypeOf(bufferData).constructor.name;\r\n            const len = bufferData.byteLength;\r\n            let bytes = new Uint8Array(arrayBuffer), i, base64 = \"\";\r\n            for (i = 0; i < len; i += 3) {\r\n                base64 += chars[bytes[i] >> 2];\r\n                base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n                base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n                base64 += chars[bytes[i + 2] & 63];\r\n            }\r\n            if ((len % 3) === 2) {\r\n                base64 = base64.substring(0, base64.length - 1) + \"=\";\r\n            }\r\n            else if (len % 3 === 1) {\r\n                base64 = base64.substring(0, base64.length - 2) + \"==\";\r\n            }\r\n            return { dtype: dtype, base64: base64 };\r\n        };\r\n        this.decode = (stringified) => {\r\n            const base64 = stringified.base64;\r\n            let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\r\n            if (base64[base64.length - 1] === \"=\") {\r\n                bufferLength--;\r\n                if (base64[base64.length - 2] === \"=\") {\r\n                    bufferLength--;\r\n                }\r\n            }\r\n            let arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\r\n            for (i = 0; i < len; i += 4) {\r\n                encoded1 = lookup[base64.charCodeAt(i)];\r\n                encoded2 = lookup[base64.charCodeAt(i + 1)];\r\n                encoded3 = lookup[base64.charCodeAt(i + 2)];\r\n                encoded4 = lookup[base64.charCodeAt(i + 3)];\r\n                bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n                bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n                bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n            }\r\n            const factory = factories[stringified.dtype];\r\n            return new factory(arraybuffer);\r\n        };\r\n    }\r\n}\r\nexport let BufferUtils = new _BufferUtils();\r\n//# sourceMappingURL=BufferUtils.js.map","import { save_numpy, save_json, load_json } from \"../Api\";\r\nimport { BufferUtils } from \"../BufferUtils\";\r\nclass Session {\r\n    constructor(name, source) {\r\n        this.source_ = source;\r\n        this.name_ = name;\r\n    }\r\n    get Name() { return this.name_; }\r\n    set Name(name) { this.name_ = name; }\r\n    // let base64String = btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\r\n    async Save() {\r\n        if (this.source_.Connection) {\r\n            await save_numpy(this.source_.Connection, this.name_);\r\n            await save_json({\r\n                name: this.name_,\r\n                markers: this.source_.Markers,\r\n                data: BufferUtils.encode(this.source_.Connection.DataRaw())\r\n            }, this.name_);\r\n        }\r\n    }\r\n    async Load(name) {\r\n        if (this.source_.Connection) {\r\n            const session_data = await load_json(name);\r\n            this.source_.Markers = session_data.markers;\r\n            const data = BufferUtils.decode(session_data.data);\r\n            this.source_.Connection.Reset();\r\n            this.source_.Connection.AddData(data);\r\n        }\r\n    }\r\n    Start() { }\r\n    Stop() { }\r\n    Reset() {\r\n        this.source_.Reset();\r\n    }\r\n    Restart() { }\r\n}\r\nexport class SessionManagerElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this.session_ = null;\r\n        this.scope_element_ = null;\r\n        const shadow = this.attachShadow({ mode: 'open' }); // sets and returns 'this.shadowRoot'\r\n        const el = document.createElement('div');\r\n        const style = document.createElement('style');\r\n        // noinspection CssInvalidPropertyValue\r\n        const my_height = 100; // example of how to interpolate value in style\r\n        const n_cols = 4;\r\n        const n_rows = 4;\r\n        el.innerHTML = `\r\n            <p>Session:</p>\r\n            <div class=\"section\"><label for=\"session-name\">Name</label><input id=\"session-name\" type=\"text\"></div>\r\n            <div class=\"section\"><label for=\"session-load\">Load</label><input id=\"session-load\" type=\"file\"></div>       \r\n            <div class=\"section\"><label for=\"btn-session-save\">Save</label><button id=\"btn-session-save\">Save</button></div>       \r\n            <div class=\"section\"><label for=\"btn-session-reset\">Restart</label><button id=\"btn-session-reset\">Restart</button></div>       \r\n        `;\r\n        el.className = 'private-style1';\r\n        // noinspection CssInvalidFunction,CssInvalidPropertyValue\r\n        style.textContent = `\r\n        .private-style1 {\r\n            /*background-image: linear-gradient(#ffffff, #585858);*/\r\n        }\r\n         \r\n        \r\n        label {\r\n            display: inline-block;\r\n            width: 100px;\r\n        }\r\n        .section {\r\n            /*background-color: #151515;*/\r\n            margin: 5px;\r\n            border-bottom: 1px solid rgba(0,0,0,0.2);\r\n        }\r\n\r\n`;\r\n        shadow.append(style, el);\r\n        // Hook up element listeners\r\n        const btn_load_el = el.querySelector('#session-load');\r\n        btn_load_el.addEventListener('change', async (ev) => {\r\n            if (this.session_ && btn_load_el.files)\r\n                await this.session_.Load(btn_load_el.files[0].name);\r\n        });\r\n        const btn_save_el = el.querySelector('#btn-session-save');\r\n        btn_save_el.addEventListener('click', async () => {\r\n            if (this.session_)\r\n                await this.session_.Save();\r\n        });\r\n        const session_name_el = el.querySelector('#session-name');\r\n        session_name_el.value = SessionManagerElement.generate_name();\r\n        session_name_el.oninput = () => {\r\n            if (this.session_)\r\n                this.session_.Name = session_name_el.value;\r\n        };\r\n        const session_reset_el = el.querySelector('#btn-session-reset');\r\n        session_reset_el.onclick = async () => {\r\n            if (this.session_)\r\n                await this.session_.Reset();\r\n        };\r\n        this.NewSession(session_name_el.value);\r\n    }\r\n    static generate_name() {\r\n        return \"New Session\";\r\n    }\r\n    // Create a new session\r\n    NewSession(session_name) {\r\n        const source_element_id = this.hasAttribute('data-source') ? this.getAttribute('data-source') : undefined;\r\n        if (this.session_) {\r\n            this.session_.Save();\r\n            this.session_ = null;\r\n        }\r\n        if (source_element_id) {\r\n            this.scope_element_ = document.querySelector(`#${source_element_id}`);\r\n            if (this.scope_element_) {\r\n                const scope = this.scope_element_.Scope;\r\n                if (!scope.Connection)\r\n                    scope.on('connection', (conn) => {\r\n                        this.session_ = new Session(session_name, scope);\r\n                    });\r\n                else {\r\n                    this.session_ = new Session(session_name, scope);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=SessionManagerElement.js.map","export async function open_hid_device(vid, pid) {\r\n    const api_response = await fetch(`/open/${vid}/${pid}`, {\r\n        method: 'get',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n    });\r\n    return await api_response.json();\r\n}\r\nexport async function get_server_status() {\r\n    const api_response = await fetch(`/status`, {\r\n        method: 'get',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n    });\r\n    return await api_response.json();\r\n}\r\nexport async function save_numpy(conn, file_name) {\r\n    const data = conn.DataRaw();\r\n    const dtype = Object.getPrototypeOf(data).constructor.name;\r\n    const api_response = await fetch(`/data/${conn.NumChannels}/${dtype}/${file_name}`, {\r\n        method: 'post',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/octet-stream'\r\n        },\r\n        body: data\r\n    });\r\n    return await api_response.json();\r\n}\r\nexport async function load_json(file_name) {\r\n    const api_response = await fetch(`/load/${file_name}`, {\r\n        method: 'get',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n    const response = await api_response.json();\r\n    return response.data;\r\n}\r\nexport async function save_json(obj, file_name) {\r\n    const api_response = await fetch(`/save/${file_name}`, {\r\n        method: 'post',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(obj)\r\n    });\r\n    return await api_response.json();\r\n}\r\n//# sourceMappingURL=Api.js.map",";\r\nexport var HidDeviceConnectionStatusCode;\r\n(function (HidDeviceConnectionStatusCode) {\r\n    HidDeviceConnectionStatusCode[HidDeviceConnectionStatusCode[\"DISCONNECTED\"] = 0] = \"DISCONNECTED\";\r\n    HidDeviceConnectionStatusCode[HidDeviceConnectionStatusCode[\"CONNECTED\"] = 1] = \"CONNECTED\";\r\n})(HidDeviceConnectionStatusCode || (HidDeviceConnectionStatusCode = {}));\r\n//# sourceMappingURL=HidDeviceStatus.js.map","/**\r\n * @file CustomElement.ts\r\n * @author Josh Greifer <joshgreifer@gmail.com>\r\n * @copyright © 2020 Josh Greifer\r\n * @licence\r\n * Copyright © 2020 Josh Greifer\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n * @summary Sample custom element tobe used as a template\r\n * This is part of my Typescript express starter application,  which provides\r\n * very minimal skeleton code for custom HTML tags, simple paging, and API access.\r\n *\r\n * The starter application was designed to be as lean as possible - its only dependencies\r\n * are express and eventemitter3.\r\n *\r\n */\r\nexport class ScopeMarkerEditorElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        const shadow = this.attachShadow({ mode: 'open' }); // sets and returns 'this.shadowRoot'\r\n        const el = document.createElement('div');\r\n        const style = document.createElement('style');\r\n        const label = this.hasAttribute('label') ? this.getAttribute('label') : '(label)';\r\n        const color = this.hasAttribute('color') ? this.getAttribute('color') : '#ffff00';\r\n        style.textContent = `\r\n            label {\r\n                display: inline-block;\r\n                width: 200px;           \r\n            }\r\n`;\r\n        el.innerHTML = `\r\n            <label for=\"label1\"><input type=\"text\" id=\"label1\" value=\"${label}\"></label><input type=\"color\" value=\"${color}\">\r\n        `;\r\n        const label_el = el.querySelector('input[type=\"text\"]');\r\n        const color_el = el.querySelector('input[type=\"color\"]');\r\n        label_el.addEventListener('change', (e) => { this.setAttribute('label', label_el.value); this.dispatchEvent(new Event('change')); });\r\n        color_el.addEventListener('change', (e) => { this.setAttribute('color', color_el.value); this.dispatchEvent(new Event('change')); });\r\n        el.className = 'private-style1';\r\n        shadow.append(style, el);\r\n    }\r\n}\r\n//# sourceMappingURL=ScopeMarkerEditor.js.map","/**\r\n * @file index.ts\r\n * @author Josh Greifer <joshgreifer@gmail.com>\r\n * @copyright © 2020 Josh Greifer\r\n * @licence\r\n * Copyright © 2020 Josh Greifer\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n * @summary index file for the main application.\r\n * I created this from my own Typescript express starter application,  which provides\r\n * very minimal skeleton code for custom HTML tags, simple paging, and API access.\r\n *\r\n * The starter application was designed to be as lean as possible - its only dependencies\r\n * are express and eventemitter3.\r\n *\r\n */\r\n\r\nimport {AddAlgorithms} from \"./ArrayPlus\";\r\nimport {CustomElement} from \"./custom-elements/CustomElement\";\r\nimport {ConsoleElement} from \"./custom-elements/ConsoleElement\";\r\nimport {ScopeElement} from \"./custom-elements/ScopeElement\";\r\nimport {FaceDetectElement} from \"./custom-elements/FaceDetectElement\";\r\nimport {WebSocketDataConnectionElement} from \"./custom-elements/WebSocketDataConnectionElement\";\r\nimport {\r\n    AutoYAxisAdjustBehaviour,\r\n    DownSampleAlgorithm,\r\n    Marker,\r\n    RenderStyle,\r\n    Scope,\r\n    SignalFollowBehaviour\r\n} from \"./Scope\";\r\nimport {get_server_status, open_hid_device} from \"./Api\";\r\nimport {SpeechService} from \"./SpeechService\";\r\nimport {SigProc} from \"./SigProc\";\r\nimport {SessionManagerElement} from \"./custom-elements/SessionManagerElement\";\r\nimport {HidDeviceConnectionStatusCode} from \"./HidDeviceStatus\";\r\nimport EDAAnalyzer = SigProc.EDAAnalyzer;\r\nimport {ScopeMarkerEditorElement} from \"./custom-elements/ScopeMarkerEditor\";\r\n\r\n\r\nAddAlgorithms(Array.prototype);\r\n\r\n\r\ncustomElements.define('custom-element', CustomElement);\r\ncustomElements.define('console-element', ConsoleElement);\r\ncustomElements.define('scope-element', ScopeElement);\r\ncustomElements.define('websocket-element', WebSocketDataConnectionElement);\r\ncustomElements.define('facedetect-element', FaceDetectElement);\r\ncustomElements.define('session-manager-element', SessionManagerElement);\r\ncustomElements.define('scope-marker-editor-element', ScopeMarkerEditorElement);\r\n\r\n\r\n// Disable MS Edge (and probably Chrome) context menus in OSX\r\ndocument.addEventListener('contextmenu', event => { event.preventDefault() })\r\n\r\ndocument.querySelectorAll('.page-switcher').forEach((button) => {\r\n    (<HTMLButtonElement>button).addEventListener('click', () => {switchToPage(button.getAttribute('page') || '') })\r\n})\r\n\r\nfunction switchToPage(page_id: string) {\r\n    const pages = document.querySelectorAll('.page');\r\n    for (const page of pages) {\r\n        if (page.id === page_id)\r\n            page.classList.remove('hidden');\r\n        else\r\n            page.classList.add('hidden');\r\n    }\r\n    const page_buttons = document.querySelectorAll('.page-switcher');\r\n    for (const page_button of page_buttons)\r\n        (<HTMLButtonElement>page_button).disabled = (page_button.getAttribute('page') === page_id);\r\n\r\n}\r\nswitchToPage('page-2');\r\n\r\nconst c = document.querySelector('console-element') as ConsoleElement;\r\nc.info('App Loaded.');\r\n\r\nconst scopeEl_SCR = document.querySelector('.scr') as ScopeElement;\r\nconst scopeEl_SCL = document.querySelector('.scl') as ScopeElement;\r\n\r\nconst websocketEl = document.querySelector('websocket-element') as WebSocketDataConnectionElement;\r\n\r\nconst scopeSCR: Scope = scopeEl_SCR.Scope;\r\nconst scopeSCL: Scope = scopeEl_SCL.Scope;\r\n\r\nconst edaAnalyzer: EDAAnalyzer = new EDAAnalyzer(websocketEl.Connection);\r\n\r\n// TEST TEST\r\nMarker.ColorMap['Cue'] = \"#ffffff\";\r\nMarker.ColorMap['Test'] = \"#ff0000\";\r\n\r\nscopeSCR.ChannelInfo = [\r\n    {\r\n        Name: 'SCR',\r\n        Color: '#ffffff',\r\n        Visible: true,\r\n        RenderStyle: RenderStyle.Step,\r\n        DownSampleAlgorithm:  DownSampleAlgorithm.MinMax\r\n    }\r\n];\r\n\r\nscopeSCL.ChannelInfo = [\r\n    {\r\n        Name: 'EDA',\r\n        Color: '#00ff00',\r\n        Visible: true,\r\n        RenderStyle: RenderStyle.Step,\r\n        DownSampleAlgorithm:  DownSampleAlgorithm.MinMax\r\n    },\r\n    {\r\n        Name: 'SCL',\r\n        Color: '#ffc200',\r\n        Visible: true,\r\n        RenderStyle: RenderStyle.Line,\r\n        DownSampleAlgorithm:  DownSampleAlgorithm.MinMax\r\n    }\r\n];\r\n\r\n// set common properties for all scopes\r\nfor (const scope of [scopeSCR, scopeSCL]) {\r\n    scope.SampleUnitMultiplier = 1;\r\n    scope.AutoYAxisAdjustBehaviour = AutoYAxisAdjustBehaviour.EnsureAllSamplesVisible;\r\n    scope.SignalFollowBehaviour = SignalFollowBehaviour.Scroll;\r\n    scope.AutoYAxisAdjustChannel = 0;\r\n    scope.DataHeight = 1000;\r\n    scope.DataWidth = 30;\r\n}\r\n\r\nscopeSCR.Connection = edaAnalyzer.SCR;\r\nscopeSCR.AddSlave(scopeSCL);\r\n\r\nscopeSCL.TimeAxisVisible = false;\r\nscopeSCL.Connection = edaAnalyzer.SCL;\r\nscopeSCL.BackColor = '#001414'\r\n\r\n\r\nconsole.info('Connected scope to websocket.');\r\n\r\n// const connectButton = document.querySelector('#connect-button') as HTMLButtonElement;\r\nconst enableGazeDetectionEl = document.querySelector('#enable-gaze-detection') as HTMLInputElement;\r\nconst FaceRecognitionEl = document.querySelector('facedetect-element') as FaceDetectElement;\r\n\r\nconst startSpeechRecognitionButton = document.querySelector('#start-speech-recognition-button') as HTMLButtonElement;\r\nconst statusIndicator = document.querySelector('#status-indicator') as HTMLSpanElement;\r\nconst passwordElement = document.querySelector('#speech-sdk-password-input') as HTMLInputElement;\r\nconst scopeSignalFollowBehaviourRadioButtons = document.querySelectorAll('input[name=\"scope-signal-follow-behaviour\"]');\r\n\r\npasswordElement.addEventListener('input', ()=> {\r\n    startSpeechRecognitionButton.disabled = !passwordElement.value;\r\n\r\n});\r\n\r\nenableGazeDetectionEl.onchange = () => {\r\n    FaceRecognitionEl.setAttribute('enabled', enableGazeDetectionEl.checked ? 'true' : 'false');\r\n};\r\n\r\nfor (const el of scopeSignalFollowBehaviourRadioButtons) {\r\n    el.addEventListener('change', () => { scopeSCR.SignalFollowBehaviour = Number.parseInt((<HTMLInputElement>el).value)});\r\n}\r\nstartSpeechRecognitionButton.addEventListener('click', async () => {\r\n    const password = passwordElement.value;\r\n    if (password !== \"\") {\r\n        const speechService = new SpeechService(password, true, false);\r\n        await speechService.StartContinuousRecognition();\r\n        speechService.on('recognized', (text: string) => {\r\n            if (scopeSCR.Connection) {\r\n                let t: number = 0;\r\n                let v: number = 0;\r\n                t = scopeSCR.Connection.CurrentTimeSecs - SpeechService.LatencySeconds;\r\n                if (t < 0)\r\n                    t = 0;\r\n                v = scopeSCR.Connection.ValueAtTime(t);\r\n                const marker = new Marker(t, v, text);\r\n                scopeEl_SCR.Scope.AddMarker(marker);\r\n            }\r\n\r\n        });\r\n        speechService.on('recognizing', (text: string) => {\r\n            c.add({text: text, className: 'recognizing', isContinuation: true})\r\n        });\r\n        speechService.on('error', async (text: string) => {\r\n            c.error(text);\r\n            await speechService.StopContinuousRecognition();\r\n        });\r\n    }\r\n});\r\n\r\n\r\nc.Events.on('console-click', (el: HTMLDivElement) => {\r\n    if (['cue', 'recognized'].includes(el.className)) {\r\n        scopeSCR.FollowSignal = false;\r\n        scopeSCR.DataX = Number.parseFloat(el.getAttribute('time-stamp') as string);\r\n    }\r\n});\r\n\r\n\r\nscopeEl_SCR.Scope.on('marker-added', (marker: Marker) => {\r\n    const timeToString = (t: number) => new Date(t * 1000).toISOString().substring(14,22);\r\n\r\n    const line_el = c.add({text: `${timeToString(marker.time)} ${marker.label}`, className: 'cue', timeStamp: marker.time, isContinuation: true, replaceClassName: 'recognizing' });\r\n    line_el.style.color = marker.color;\r\n    marker.on('label-changed', (new_label: string) => {\r\n        line_el.innerText = `${timeToString(marker.time)} ${new_label}`;\r\n        line_el.style.color = marker.color;\r\n    })\r\n    line_el.addEventListener('dblclick', () => { marker.editLabel()});\r\n});\r\n\r\nscopeEl_SCR.Scope.on('reset', () => { c.clear(); });\r\n\r\nscopeEl_SCR.Scope.on('size', (size: { width: number, height: number}) => {\r\n    c.style.height = size.height + 'px';\r\n});\r\n\r\n\r\nconst scopeMarkerEditorEls =  document.querySelectorAll('scope-marker-editor-element');\r\n\r\nfor (const el of scopeMarkerEditorEls) {\r\n    el.addEventListener('change', () => {\r\n        Marker.ColorMap = {};\r\n\r\n        for (const el of scopeMarkerEditorEls) {\r\n            const label = el.getAttribute('label') as string;\r\n            const color = el.getAttribute('color') as string;\r\n            Marker.ColorMap[label] = color;\r\n        }\r\n        // Update all markers in case color has changed\r\n        for (const marker of scopeSCR.Markers)\r\n            marker.emit('label-changed', marker.label);\r\n    });\r\n}\r\n\r\nwindow.addEventListener('keyup', (evt: KeyboardEvent) => {\r\n    const code = evt.code;\r\n    if (evt.altKey && scopeSCR.Connection) {\r\n        let label = '';\r\n        if (code.startsWith('Key'))\r\n            label = evt.code[3];\r\n        else if (code.startsWith('Digit'))\r\n            label = code[5];\r\n        else if (code.startsWith('Numpad'))\r\n            label = code[6];\r\n\r\n        if (label !== '') {\r\n            const t = scopeSCR.Connection.CurrentTimeSecs;\r\n            const v = scopeSCR.Connection.ValueAtTime(t);\r\n            const marker = new Marker(t, v, label);\r\n            scopeEl_SCR.Scope.AddMarker(marker);\r\n        }\r\n    }\r\n});\r\n\r\nwindow.setInterval(() => {\r\n    (async () => {\r\n        const status = await get_server_status();\r\n        statusIndicator.innerText = status.message;\r\n        if (status.code === HidDeviceConnectionStatusCode.DISCONNECTED) {\r\n            await open_hid_device(1240, 61281);\r\n        }\r\n    } )();\r\n\r\n}, 2000);","export function AddAlgorithms(obj = Array.prototype) {\r\n    if (!('length' in obj))\r\n        throw `Can't add algorithms to an object without 'length' property`;\r\n    if (typeof obj[Symbol.iterator] === 'undefined')\r\n        throw `Can't add algorithms to a non-iterable object `;\r\n    Object.defineProperty(obj, 'randomElement', {\r\n        value: function () {\r\n            return this.length ? this[Math.floor(Math.random() * this.length)] : undefined;\r\n        }\r\n    });\r\n    Object.defineProperty(obj, 'crypt', {\r\n        value: function (k) {\r\n            const nk = k.length;\r\n            for (let i = 0; i < this.length; ++i)\r\n                this[i] ^= k[i % nk];\r\n            return this;\r\n        }\r\n    });\r\n    Array.from(new TextEncoder().encode('fred'));\r\n    Object.defineProperty(obj, 'shuffle', {\r\n        value: function () {\r\n            // Knuth shuffle https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\r\n            for (let i = this.length; i > 0;) {\r\n                const j = Math.floor(Math.random() * i);\r\n                --i;\r\n                const tmp = this[i];\r\n                this[i] = this[j];\r\n                this[j] = tmp;\r\n            }\r\n            return this;\r\n        }\r\n    });\r\n    Object.defineProperty(obj, 'partition', {\r\n        value: function (filter) {\r\n            const partitions = {};\r\n            let index = 0;\r\n            for (const item of this) {\r\n                const k = filter(item, index++, this);\r\n                if (partitions[k] === undefined)\r\n                    partitions[k] = [];\r\n                partitions[k].push(item);\r\n            }\r\n            return partitions;\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=ArrayPlus.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Stream } from \"./Exports\";\nexport class ChunkedArrayBufferStream extends Stream {\n    constructor(targetChunkSize, streamId) {\n        super(streamId);\n        this.privTargetChunkSize = targetChunkSize;\n        this.privNextBufferReadyBytes = 0;\n    }\n    writeStreamChunk(chunk) {\n        // No pending write, and the buffer is the right size so write it.\n        if (chunk.isEnd ||\n            (0 === this.privNextBufferReadyBytes && chunk.buffer.byteLength === this.privTargetChunkSize)) {\n            super.writeStreamChunk(chunk);\n            return;\n        }\n        let bytesCopiedFromBuffer = 0;\n        while (bytesCopiedFromBuffer < chunk.buffer.byteLength) {\n            // Fill the next buffer.\n            if (undefined === this.privNextBufferToWrite) {\n                this.privNextBufferToWrite = new ArrayBuffer(this.privTargetChunkSize);\n                this.privNextBufferStartTime = chunk.timeReceived;\n            }\n            // Find out how many bytes we can copy into the read buffer.\n            const bytesToCopy = Math.min(chunk.buffer.byteLength - bytesCopiedFromBuffer, this.privTargetChunkSize - this.privNextBufferReadyBytes);\n            const targetView = new Uint8Array(this.privNextBufferToWrite);\n            const sourceView = new Uint8Array(chunk.buffer.slice(bytesCopiedFromBuffer, bytesToCopy + bytesCopiedFromBuffer));\n            targetView.set(sourceView, this.privNextBufferReadyBytes);\n            this.privNextBufferReadyBytes += bytesToCopy;\n            bytesCopiedFromBuffer += bytesToCopy;\n            // Are we ready to write?\n            if (this.privNextBufferReadyBytes === this.privTargetChunkSize) {\n                super.writeStreamChunk({\n                    buffer: this.privNextBufferToWrite,\n                    isEnd: false,\n                    timeReceived: this.privNextBufferStartTime,\n                });\n                this.privNextBufferReadyBytes = 0;\n                this.privNextBufferToWrite = undefined;\n            }\n        }\n    }\n    close() {\n        // Send whatever is pending, then close the base class.\n        if (0 !== this.privNextBufferReadyBytes && !this.isClosed) {\n            super.writeStreamChunk({\n                buffer: this.privNextBufferToWrite.slice(0, this.privNextBufferReadyBytes),\n                isEnd: false,\n                timeReceived: this.privNextBufferStartTime,\n            });\n        }\n        super.close();\n    }\n}\n\n//# sourceMappingURL=ChunkedArrayBufferStream.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\nexport class ServiceEvent extends PlatformEvent {\n    constructor(eventName, jsonstring, eventType = EventType.Info) {\n        super(eventName, eventType);\n        this.privJsonResult = jsonstring;\n    }\n    get jsonString() {\n        return this.privJsonResult;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class ConnectionEvent extends PlatformEvent {\n    constructor(eventName, connectionId, eventType = EventType.Info) {\n        super(eventName, eventType);\n        this.privConnectionId = connectionId;\n    }\n    get connectionId() {\n        return this.privConnectionId;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class ConnectionStartEvent extends ConnectionEvent {\n    constructor(connectionId, uri, headers) {\n        super(\"ConnectionStartEvent\", connectionId);\n        this.privUri = uri;\n        this.privHeaders = headers;\n    }\n    get uri() {\n        return this.privUri;\n    }\n    get headers() {\n        return this.privHeaders;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class ConnectionEstablishedEvent extends ConnectionEvent {\n    constructor(connectionId, metadata) {\n        super(\"ConnectionEstablishedEvent\", connectionId);\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class ConnectionClosedEvent extends ConnectionEvent {\n    constructor(connectionId, statusCode, reason) {\n        super(\"ConnectionClosedEvent\", connectionId, EventType.Debug);\n        this.privRreason = reason;\n        this.privStatusCode = statusCode;\n    }\n    get reason() {\n        return this.privRreason;\n    }\n    get statusCode() {\n        return this.privStatusCode;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class ConnectionErrorEvent extends ConnectionEvent {\n    constructor(connectionId, message, type) {\n        super(\"ConnectionErrorEvent\", connectionId, EventType.Debug);\n        this.privMessage = message;\n        this.privType = type;\n    }\n    get message() {\n        return this.privMessage;\n    }\n    get type() {\n        return this.privType;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class ConnectionEstablishErrorEvent extends ConnectionEvent {\n    constructor(connectionId, statuscode, reason) {\n        super(\"ConnectionEstablishErrorEvent\", connectionId, EventType.Error);\n        this.privStatusCode = statuscode;\n        this.privReason = reason;\n    }\n    get reason() {\n        return this.privReason;\n    }\n    get statusCode() {\n        return this.privStatusCode;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class ConnectionMessageReceivedEvent extends ConnectionEvent {\n    constructor(connectionId, networkReceivedTimeISO, message) {\n        super(\"ConnectionMessageReceivedEvent\", connectionId);\n        this.privNetworkReceivedTime = networkReceivedTimeISO;\n        this.privMessage = message;\n    }\n    get networkReceivedTime() {\n        return this.privNetworkReceivedTime;\n    }\n    get message() {\n        return this.privMessage;\n    }\n}\n// tslint:disable-next-line:max-classes-per-file\nexport class ConnectionMessageSentEvent extends ConnectionEvent {\n    constructor(connectionId, networkSentTimeISO, message) {\n        super(\"ConnectionMessageSentEvent\", connectionId);\n        this.privNetworkSentTime = networkSentTimeISO;\n        this.privMessage = message;\n    }\n    get networkSentTime() {\n        return this.privNetworkSentTime;\n    }\n    get message() {\n        return this.privMessage;\n    }\n}\n\n//# sourceMappingURL=ConnectionEvents.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport var ConnectionState;\n(function (ConnectionState) {\n    ConnectionState[ConnectionState[\"None\"] = 0] = \"None\";\n    ConnectionState[ConnectionState[\"Connected\"] = 1] = \"Connected\";\n    ConnectionState[ConnectionState[\"Connecting\"] = 2] = \"Connecting\";\n    ConnectionState[ConnectionState[\"Disconnected\"] = 3] = \"Disconnected\";\n})(ConnectionState || (ConnectionState = {}));\n\n//# sourceMappingURL=IConnection.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class ReplayableAudioNode {\n    constructor(audioSource, bytesPerSecond) {\n        this.privBuffers = [];\n        this.privReplayOffset = 0;\n        this.privLastShrinkOffset = 0;\n        this.privBufferStartOffset = 0;\n        this.privBufferSerial = 0;\n        this.privBufferedBytes = 0;\n        this.privReplay = false;\n        this.privLastChunkAcquiredTime = 0;\n        this.id = () => {\n            return this.privAudioNode.id();\n        };\n        this.privAudioNode = audioSource;\n        this.privBytesPerSecond = bytesPerSecond;\n    }\n    // Reads and returns the next chunk of audio buffer.\n    // If replay of existing buffers are needed, read() will first seek and replay\n    // existing content, and upoin completion it will read new content from the underlying\n    // audio node, saving that content into the replayable buffers.\n    read() {\n        // if there is a replay request to honor.\n        if (!!this.privReplay && this.privBuffers.length !== 0) {\n            // Find the start point in the buffers.\n            // Offsets are in 100ns increments.\n            // So how many bytes do we need to seek to get the right offset?\n            const offsetToSeek = this.privReplayOffset - this.privBufferStartOffset;\n            let bytesToSeek = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\n            if (0 !== (bytesToSeek % 2)) {\n                bytesToSeek++;\n            }\n            let i = 0;\n            while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\n                bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\n            }\n            const retVal = this.privBuffers[i].chunk.buffer.slice(bytesToSeek);\n            this.privReplayOffset += (retVal.byteLength / this.privBytesPerSecond) * 1e+7;\n            // If we've reached the end of the buffers, stop replaying.\n            if (i === this.privBuffers.length - 1) {\n                this.privReplay = false;\n            }\n            return Promise.resolve({\n                buffer: retVal,\n                isEnd: false,\n                timeReceived: this.privBuffers[i].chunk.timeReceived,\n            });\n        }\n        return this.privAudioNode.read()\n            .then((result) => {\n            if (result && result.buffer) {\n                this.privBuffers.push(new BufferEntry(result, this.privBufferSerial++, this.privBufferedBytes));\n                this.privBufferedBytes += result.buffer.byteLength;\n            }\n            return result;\n        });\n    }\n    detach() {\n        this.privBuffers = undefined;\n        return this.privAudioNode.detach();\n    }\n    replay() {\n        if (this.privBuffers && 0 !== this.privBuffers.length) {\n            this.privReplay = true;\n            this.privReplayOffset = this.privLastShrinkOffset;\n        }\n    }\n    // Shrinks the existing audio buffers to start at the new offset, or at the\n    // beginning of the buffer closest to the requested offset.\n    // A replay request will start from the last shrink point.\n    shrinkBuffers(offset) {\n        if (this.privBuffers === undefined || this.privBuffers.length === 0) {\n            return;\n        }\n        this.privLastShrinkOffset = offset;\n        // Find the start point in the buffers.\n        // Offsets are in 100ns increments.\n        // So how many bytes do we need to seek to get the right offset?\n        const offsetToSeek = offset - this.privBufferStartOffset;\n        let bytesToSeek = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\n        let i = 0;\n        while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\n            bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\n        }\n        this.privBufferStartOffset = Math.round(offset - ((bytesToSeek / this.privBytesPerSecond) * 1e+7));\n        this.privBuffers = this.privBuffers.slice(i);\n    }\n    // Finds the time a buffer of audio was first seen by offset.\n    findTimeAtOffset(offset) {\n        if (offset < this.privBufferStartOffset || this.privBuffers === undefined) {\n            return 0;\n        }\n        for (const value of this.privBuffers) {\n            const startOffset = (value.byteOffset / this.privBytesPerSecond) * 1e7;\n            const endOffset = startOffset + ((value.chunk.buffer.byteLength / this.privBytesPerSecond) * 1e7);\n            if (offset >= startOffset && offset <= endOffset) {\n                return value.chunk.timeReceived;\n            }\n        }\n        return 0;\n    }\n}\n// Primary use of this class is to help debugging problems with the replay\n// code. If the memory cost of alloc / dealloc gets too much, drop it and just use\n// the ArrayBuffer directly.\n// tslint:disable-next-line:max-classes-per-file\nclass BufferEntry {\n    constructor(chunk, serial, byteOffset) {\n        this.chunk = chunk;\n        this.serial = serial;\n        this.byteOffset = byteOffset;\n    }\n}\n\n//# sourceMappingURL=ReplayableAudioNode.js.map\n"],"sourceRoot":""}