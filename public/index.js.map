{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/eventemitter3/index.js","webpack:///./node_modules/ndarray/ndarray.js","webpack:///./node_modules/iota-array/iota.js","webpack:///./node_modules/is-buffer/index.js","webpack:///./src/custom-elements/CustomElement.js","webpack:///./src/custom-elements/ConsoleElement.js","webpack:///./src/GDIPlus.js","webpack:///./src/Clut.js","webpack:///./src/Scope.js","webpack:///./src/custom-elements/ScopeElement.js","webpack:///./src/DataConnection.js","webpack:///./src/WebSocketDataConnection.js","webpack:///./src/custom-elements/WebSocketDataConnectionElement.js","webpack:///./src/index.ts","webpack:///./src/ArrayPlus.js","webpack:///./src/Api.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","has","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","events","names","slice","getOwnPropertySymbols","concat","listeners","handlers","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","iota","isBuffer","hasTypedArrays","Float64Array","compare1st","a","b","order","stride","terms","Math","abs","sort","result","compileConstructor","dtype","dimension","className","join","useGetters","code","Function","procedure","CACHED_CONSTRUCTORS","indices","map","index_str","shapeArg","strideArg","a_vars","c_vars","tShape","tStride","idx","data","shape","offset","ctor","array","sz","toString","isArray","arrayDType","ctor_list","obj","constructor","readFloatLE","isSlowBuffer","_isBuffer","CustomElement","HTMLElement","super","shadow","attachShadow","el","document","createElement","style","innerText","hasAttribute","getAttribute","textContent","append","ConsoleElement","container_el","appendChild","log","text","is_continuation","replaceClassName","line_el","last_child_el","lastChild","classList","remove","add","textNode","createTextNode","warn","info","error","DashStyle","TextHorizontalAlign","TextVerticalAlign","Presets","Pen","brush","Color","Width","Rect","x","y","w","h","width","height","v","right","bottom","GCH","ctx","rect","clip","graph_rect","world_rect","xscale","yscale","e","f","xform","setTransform","dest_rect","src_rect","GetWorldToGraphicTransform","ApplyTransform","fillStyle","fillRect","color","cx","cy","rx","ry","save","beginPath","translate","scale","arc","PI","restore","fill","strokeStyle","stroke","pen","gc","lineWidth","setLineDash","DashPattern","strokeRect","alignment","H","Left","V","Bottom","textAlign","textBaseline","fillText","x1","y1","x2","y2","moveTo","lineTo","Clut","SZ","type","g","Uint8Array","rgba","Uint32Array","f_inc","get_interpolated_val","LAST_IDX","fractional_idx","internal_idx","floor","alpha","Error","MADNESS","HEATMAP","GRAYSCALE","GRAYSCALE_INVERSE","TRAFFIC_LIGHTS","canvas","RenderStyle","DownSampleAlgorithm","SignalFollowBehaviour","AutoYAxisAdjustBehaviour","Area","window","createImageBitmap","async","Promise","resolve","reject","getContext","imageSmoothingEnabled","putImageData","container","gch","offScreenContexts","currentOffScreenContextsIndex","canvases","MIN_GRID_X","MIN_GRID_Y","gridMinorX","gridMajorX","gridMinorY","gridMajorY","AxisFont","AxisFontHeight","ButtonFont","BackColor","ForeColor","AxesBackColor","BorderColor","IS_SPECTROGRAM","GridMinorTextColor","GridMajorTextColor","ButtonBackColor","ButtonForeColor","ButtonDisabledColor","SampleUnitMultiplier","fs_","sampleDuration","dragPoint","dragStartPoint","_nchans","slaves","_lineWidth","dataTimeOld","TimeAxisVisible","YAxisVisible","Paginate","EnsureAllSamplesVisible","AutoYAxisAdjustChannel","_autoYTrack","_YAxisFormat","captureArea","None","dataTime","RenderFrame","dBoundsOld","Equals","dBounds","onScreenContext","ctx_off_prev","ctx_off_curr","FillRectangleCoords","yAxisBounds","timeAxisBounds","RenderTimeAxis","RenderYAxis","RenderButtons","dirtyRect","Clone","new_data_overlap_pixels","pixels2duration","BlitGraph","RenderGraph","RenderGraphBackground","RenderGraphGrid","requestAnimationFrame","clut","onScreenCanvas","firstChild","removeChild","master","penGridMajor","penGridMinor","penBorder","brushGridMajor","brushGridMinor","getCoords","getBoundingClientRect","touches","clientX","left","clientY","top","ontouchstart","onmousedown","preventDefault","GetArea","gBounds","ontouchmove","onmousemove","Graph","graph_Zoom","YAxis","yAxis_Scroll","TimeAxis","timeAxis_Scroll","cursor","BottomLeft","ontouchend","onmouseup","Resize","fs","ChannelInfo","slave","DataWidth","conn_","CurrentTimeSecs","Scroll","DataX","conn","this_","onData","current_time","timeAxis_Recalc","yAxis_Recalc","Reset","W","parentElement","clientWidth","clientHeight","y_axis_width","x_axis_height","ButtonsBounds","src_ctx","dest_ctx","img","getImageData","ex","console","font","FillRectangle","align","Center","Middle","textColor","DrawString","start_offset_time","StartTimeSecs","setClip","SetOrigin","firstGridMinorX","add_numbers_to_grid_minor","duration2pixels","gx","time2pixels","DrawLine","Top","toFixed","firstGridMinorY","d2gHeight","gy","d2gY","Right","start_time","duration","HasData","RenderData","AdjustYAxis","time_and_sample_values_rect","pixel_and_sample_values_rect","nMaxY","Number","MAX_VALUE","nMinY","first_idx","TimeToIndex","num_frames_to_display","num_frames_available","NumFramesRead","samples_per_pixel","Data","last_y","sample_rate_and_sample_values_rect","data_as_image","ImageData","NumChannels","data_pixels","buffer","nvals","start_val","data_val","catch","reason","rotate","Fs","drawImage","chan","Visible","scale_y_axis_to_this_channel","render_style","downsample_algorithm","downSample","globalCompositeOperation","Segment","chan_data","pick","subpixel_min_y","subpixel_max_y","subpixel_sum_y","pixel_x","d2gX","last_rendered_idx","segment_start_t","Line","Step","SetTransformRect","MinMax","Avg","Decimate","lineJoin","y_old","dt","quadraticCurveTo","next_sample_is_in_segment","EnsureMostRecentSampleVisible","maxY","minY","YExtentChanged","dx","round","dy","dHeight","dWidth","d2gWidth","pow10","LN10","pow","gRect","dRect","firstGridX","firstGridY","max","min","oh","oy","range","DataHeight","X","Y","Contains","delta_x","delta_y","sgn_dx","sgn_dy","fact","DataY","g2dY","scope_","addEventListener","ev","num_channels","bits_per_sample","array_constructor","idx_","nBuffersRead_","sampleCount_","NUM_CHANNELS","buf_","Int16Array","Float32Array","reset","new_data","N","set","extra","subarray","lo","MeasuredFs","perf_start_frames_read","perf_start_time","BUFFER_SIZE_SECONDS","put","RowCount","BuffersRead","startPerformanceMeasurement","start_time_seconds","duration_seconds","view","raw_view","frame_offset","index","performance","now","frames_read","sample_rate","statusListeners","informListeners","forEach","onConnectionStatus","setTimeout","indexOf","splice","url","url_","init","sock_","ws","WebSocket","binaryType","onopen","onclose","onmessage","AddData","measurePerformance","onerror","parseInt","Url","AddStatusListener","setAttribute","getComputedStyle","getPropertyValue","msg","led_color","socket_state","Sock","readyState","clearRect","drawLed","center_x","center_y","radius","top_y","gradient_shine","createLinearGradient","addColorStop","gradient_bezel","DrawCircle","FillCircle","FillEllipse","switchToPage","page_id","pages","querySelectorAll","page","id","iterator","random","tmp","filter","partitions","item","k","AddAlgorithms","customElements","define","button","querySelector","scopeEl","websocketEl","scope","Scope","Name","Connection","connectButton","statusIndicator","response","vid","pid","api_response","fetch","method","headers","json","open_hid_device","JSON","stringify","setInterval","status","get_server_status"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n      case \"[object BigInt64Array]\":\n        return \"bigint64\"\n      case \"[object BigUint64Array]\":\n        return \"biguint64\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"bigint64\": [],\n  \"biguint64\": [],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n","\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","export class CustomElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        const shadow = this.attachShadow({ mode: 'open' }); // sets and returns 'this.shadowRoot'\r\n        const el = document.createElement('div');\r\n        const style = document.createElement('style');\r\n        // noinspection CssInvalidPropertyValue\r\n        const my_height = 100; // example of how to interpolate value in style\r\n        const n_cols = 4;\r\n        const n_rows = 4;\r\n        el.innerText = this.hasAttribute('value') ? this.getAttribute('value') : '(value)';\r\n        el.className = 'private-style1';\r\n        // noinspection CssInvalidFunction,CssInvalidPropertyValue\r\n        style.textContent = `\r\n        .private-style1 {\r\n            height: ${my_height + 20}px;\r\n            background-image: linear-gradient(#529610, #2f5609);\r\n            display: grid;\r\n            margin: 10px;\r\n        }\r\n         \r\n        .grid {\r\n            background-image: linear-gradient(#529610, #2f5609);\r\n            display: grid;\r\n            row-gap: 0;\r\n            column-gap: 0;\r\n            gap: 0;\r\n            grid-template-columns: repeat(${n_cols}, auto);\r\n            grid-template-rows: repeat(${n_rows}, auto);\r\n        }\r\n\r\n`;\r\n        shadow.append(style, el);\r\n    }\r\n}\r\n//# sourceMappingURL=CustomElement.js.map","export class ConsoleElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        const shadow = this.attachShadow({ mode: 'open' }); // sets and returns 'this.shadowRoot'\r\n        const style = document.createElement('style');\r\n        const container_el = document.createElement('div');\r\n        const el = document.createElement('div');\r\n        container_el.appendChild(el);\r\n        container_el.className = 'console';\r\n        el.className = 'console-output';\r\n        style.textContent = `\r\n        .console {\r\n            font-size: 13px;\r\n            overflow: auto;\r\n            /* height: 50vh; */\r\n            overflow-y: scroll;\r\n            overflow-x: scroll;\r\n            overscroll-behavior-y: contain;\r\n            scroll-snap-type: y mandatory;\r\n            grid-area: console;\r\n        }\r\n        .console-input {\r\n            background-color: black;\r\n            color: #ffffff;\r\n            font-family: 'Lucida Console', Monaco, monospace;\r\n        }\r\n        .console-input input {\r\n            width: 99%;\r\n            border: none;\r\n        }\r\n        .console-output {\r\n\r\n            white-space: pre;\r\n\r\n            background-color: black;\r\n            color: #BCD631;\r\n            font-family: 'Lucida Console', Monaco, monospace;\r\n            scroll-snap-align: end;\r\n\r\n        }\r\n        .console-output .error {\r\n            color: #d60619;\r\n        }\r\n        .console-output .info {\r\n            color: #76fc57;\r\n        }\r\n        .console-output .warn {\r\n            color: #ff8400;\r\n        }\r\n`;\r\n        const log = (text, className, is_continuation = false, replaceClassName = className) => {\r\n            let line_el;\r\n            const last_child_el = el.lastChild;\r\n            if (!is_continuation || last_child_el === null || last_child_el.className !== replaceClassName) {\r\n                line_el = document.createElement('div');\r\n            }\r\n            else {\r\n                line_el = last_child_el;\r\n                line_el.textContent = '';\r\n                line_el.classList.remove(replaceClassName);\r\n            }\r\n            line_el.classList.add(className);\r\n            let textNode = document.createTextNode(text);\r\n            line_el.appendChild(textNode);\r\n            if (line_el !== last_child_el)\r\n                el.appendChild(line_el);\r\n        };\r\n        const warn = (text) => { log(text, 'warn', false); };\r\n        const info = (text) => { log(text, 'info', false); };\r\n        const error = (text) => { log(text, 'error', false); };\r\n        this.log = log;\r\n        this.warn = warn;\r\n        this.info = info;\r\n        this.error = error;\r\n        shadow.append(style, container_el);\r\n    }\r\n}\r\n//# sourceMappingURL=ConsoleElement.js.map","/*****************************************************************************\r\n GDI+\r\n */\r\nexport class SolidBrush {\r\n}\r\nexport var DashStyle;\r\n(function (DashStyle) {\r\n    DashStyle[DashStyle[\"Dash\"] = 0] = \"Dash\";\r\n    DashStyle[DashStyle[\"DashDot\"] = 1] = \"DashDot\";\r\n    DashStyle[DashStyle[\"DashDotDot\"] = 2] = \"DashDotDot\";\r\n    DashStyle[DashStyle[\"Dot\"] = 3] = \"Dot\";\r\n    DashStyle[DashStyle[\"Solid\"] = 4] = \"Solid\";\r\n    DashStyle[DashStyle[\"Custom\"] = 5] = \"Custom\";\r\n})(DashStyle || (DashStyle = {}));\r\nexport class Pen {\r\n    constructor(brush) {\r\n        this.Color = brush.Color;\r\n        this.Width = .5;\r\n    }\r\n}\r\nexport class Rect {\r\n    constructor(x, y, w, h) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = w;\r\n        this.height = h;\r\n    }\r\n    get right() {\r\n        return this.x + this.width;\r\n    }\r\n    set right(v) {\r\n        this.width = v - this.x;\r\n    }\r\n    get bottom() {\r\n        return this.y + this.height;\r\n    }\r\n    set bottom(v) {\r\n        this.height = v - this.y;\r\n    }\r\n    get Center() { return { x: this.x + this.width / 2, y: this.y + this.height / 2 }; }\r\n    Contains(x, y) {\r\n        return x >= this.x && y >= this.y && x <= this.right && y <= this.bottom;\r\n    }\r\n    Equals(r) {\r\n        return r.x === this.x && r.y === this.y && r.width === this.width && r.height === this.height;\r\n    }\r\n    AssignFrom(r) {\r\n        this.x = r.x;\r\n        this.y = r.y;\r\n        this.width = r.width;\r\n        this.height = r.height;\r\n    }\r\n    Clone() {\r\n        return new Rect(this.x, this.y, this.width, this.height);\r\n    }\r\n}\r\nexport class TransformMatrix {\r\n}\r\nexport class GCH {\r\n    static setClip(ctx, r) {\r\n        ctx.rect(r.x, r.y, r.width, r.height);\r\n        ctx.clip();\r\n    }\r\n    /*\r\n    Convert between source rect and affine transformation matrix\r\n    The destination matrix is\r\n    a b 0\r\n    c d 0\r\n    e f 1\r\n    Where e and f are x and y translation,\r\n\r\n    and | a b |\r\n        | c d |  is the scale/skew sub-matrix.\r\n     */\r\n    static GetWorldToGraphicTransform(graph_rect, world_rect) {\r\n        const xscale = graph_rect.width / world_rect.width;\r\n        const yscale = graph_rect.height / world_rect.height;\r\n        return {\r\n            a: xscale,\r\n            b: 0.0,\r\n            c: 0.0,\r\n            d: yscale,\r\n            e: graph_rect.x - (world_rect.x * xscale),\r\n            f: graph_rect.y - (world_rect.y * yscale)\r\n        };\r\n    }\r\n    static ApplyTransform(ctx, xform) {\r\n        ctx.setTransform(xform.a, xform.b, xform.c, xform.d, xform.e, xform.f);\r\n    }\r\n    static SetTransformRect(ctx, dest_rect, src_rect) {\r\n        const xform = GCH.GetWorldToGraphicTransform(dest_rect, src_rect);\r\n        GCH.ApplyTransform(ctx, xform);\r\n        return xform;\r\n    }\r\n    static SetOrigin(ctx, x, y) {\r\n        ctx.setTransform(1, 0, 0, 1, x, y);\r\n    }\r\n    static SetIdentityTransform(ctx) {\r\n        // Set to identity transform\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    }\r\n    static FillRectangleCoords(ctx, brush, x, y, w, h) {\r\n        ctx.fillStyle = brush.Color;\r\n        ctx.fillRect(x, y, w, h);\r\n    }\r\n    static FillRectangle(ctx, b, r) {\r\n        ctx.fillStyle = b.Color;\r\n        ctx.fillRect(r.x, r.y, r.width, r.height);\r\n    }\r\n    static FillEllipse(ctx, color, cx, cy, rx, ry) {\r\n        const context = ctx;\r\n        context.save(); // save state\r\n        context.beginPath();\r\n        context.translate(cx - rx, cy - ry);\r\n        context.scale(rx, ry);\r\n        context.arc(1, 1, 1, 0, 2 * Math.PI, false);\r\n        context.restore(); // restore to original state\r\n        //       context.stroke();\r\n        context.fillStyle = color;\r\n        context.fill();\r\n    }\r\n    static FillCircle(ctx, color, cx, cy, r) {\r\n        const context = ctx;\r\n        context.save(); // save state\r\n        context.beginPath();\r\n        context.translate(cx - r, cy - r);\r\n        context.scale(r, r);\r\n        context.arc(1, 1, 1, 0, 2 * Math.PI, false);\r\n        context.restore(); // restore to original state\r\n        //       context.stroke();\r\n        context.fillStyle = color;\r\n        context.fill();\r\n    }\r\n    static DrawCircle(ctx, color, cx, cy, r) {\r\n        const context = ctx;\r\n        context.save(); // save state\r\n        context.beginPath();\r\n        context.translate(cx - r, cy - r);\r\n        context.scale(r, r);\r\n        context.arc(1, 1, 1, 0, 2 * Math.PI, false);\r\n        context.restore(); // restore to original state\r\n        //       context.stroke();\r\n        context.strokeStyle = color;\r\n        context.stroke();\r\n    }\r\n    static DrawRectangleCoords(ctx, pen, x, y, w, h) {\r\n        const gc = ctx;\r\n        gc.lineWidth = pen.Width;\r\n        gc.strokeStyle = pen.Color;\r\n        gc.setLineDash(pen.DashPattern || []);\r\n        gc.strokeRect(x, y, w, h);\r\n    }\r\n    static DrawRectangle(ctx, pen, r) {\r\n        const gc = ctx;\r\n        gc.lineWidth = pen.Width;\r\n        gc.strokeStyle = pen.Color;\r\n        gc.setLineDash(pen.DashPattern || []);\r\n        gc.strokeRect(r.x, r.y, r.width, r.height);\r\n    }\r\n    static DrawString(ctx, text, color, x, y, alignment) {\r\n        if (alignment === undefined) {\r\n            alignment = { H: TextHorizontalAlign.Left, V: TextVerticalAlign.Bottom };\r\n        }\r\n        else {\r\n            if (alignment.H === undefined) {\r\n                alignment.H = TextHorizontalAlign.Left;\r\n            }\r\n            if (alignment.V === undefined) {\r\n                alignment.V = TextVerticalAlign.Bottom;\r\n            }\r\n        }\r\n        ctx.fillStyle = color;\r\n        ctx.textAlign = alignment.H;\r\n        ctx.textBaseline = alignment.V;\r\n        ctx.fillText(text, x, y);\r\n    }\r\n    static DrawLine(ctx, pen, x1, y1, x2, y2) {\r\n        const gc = ctx;\r\n        gc.strokeStyle = pen.Color;\r\n        gc.lineWidth = pen.Width;\r\n        gc.setLineDash(pen.DashPattern || []);\r\n        gc.beginPath();\r\n        gc.moveTo(x1, y1);\r\n        gc.lineTo(x2, y2);\r\n        gc.stroke();\r\n    }\r\n}\r\nexport class TextAlign {\r\n}\r\nexport var TextHorizontalAlign;\r\n(function (TextHorizontalAlign) {\r\n    TextHorizontalAlign[\"Left\"] = \"left\";\r\n    TextHorizontalAlign[\"Right\"] = \"right\";\r\n    TextHorizontalAlign[\"Center\"] = \"center\";\r\n    TextHorizontalAlign[\"Start\"] = \"start\";\r\n    TextHorizontalAlign[\"End\"] = \"end\";\r\n})(TextHorizontalAlign || (TextHorizontalAlign = {}));\r\nexport var TextVerticalAlign;\r\n(function (TextVerticalAlign) {\r\n    TextVerticalAlign[\"Top\"] = \"top\";\r\n    TextVerticalAlign[\"Hanging\"] = \"hanging\";\r\n    TextVerticalAlign[\"Middle\"] = \"middle\";\r\n    TextVerticalAlign[\"Alphabetic\"] = \"alphabetic\";\r\n    TextVerticalAlign[\"Ideographic\"] = \"ideographic\";\r\n    TextVerticalAlign[\"Bottom\"] = \"bottom\";\r\n})(TextVerticalAlign || (TextVerticalAlign = {}));\r\n//# sourceMappingURL=GDIPlus.js.map","/*\r\n Color lookup table\r\n */\r\nexport class Clut {\r\n    constructor(SZ, type, r, g, b) {\r\n        this.SZ = SZ;\r\n        this.r = new Uint8Array(SZ + 1);\r\n        this.g = new Uint8Array(SZ + 1);\r\n        this.b = new Uint8Array(SZ + 1);\r\n        this.rgba = new Uint32Array(SZ + 1);\r\n        if (type == 'interpolate') {\r\n            const f_inc = 1.0 / SZ;\r\n            let f = 0.0;\r\n            for (let i = 0; i < SZ; ++i) {\r\n                this.r[i] = this.get_interpolated_val(r, f);\r\n                this.g[i] = this.get_interpolated_val(g, f);\r\n                this.b[i] = this.get_interpolated_val(b, f);\r\n                this.rgba[i] = this.r[i] + this.g[i] * 0x100 + this.b[i] * 0x10000 + 0xff000000;\r\n                f += f_inc;\r\n            }\r\n        }\r\n        else if (type == 'repeat') {\r\n            for (let i = 0; i < SZ; ++i) {\r\n                this.r[i] = r[i % r.length];\r\n                this.g[i] = g[i % g.length];\r\n                this.b[i] = b[i % b.length];\r\n                this.rgba[i] = this.r[i] + this.g[i] * 0x100 + this.b[i] * 0x10000 + 0xff000000;\r\n            }\r\n        }\r\n        this.r[SZ] = this.r[SZ - 1];\r\n        this.g[SZ] = this.g[SZ - 1];\r\n        this.b[SZ] = this.b[SZ - 1];\r\n        this.rgba[SZ] = this.rgba[SZ - 1];\r\n    }\r\n    get_interpolated_val(a, idx) {\r\n        const LAST_IDX = a.length - 1;\r\n        if (idx >= 1.0) {\r\n            return a[LAST_IDX];\r\n        }\r\n        else if (idx < 0.0)\r\n            idx = 0.0;\r\n        let fractional_idx = idx * LAST_IDX;\r\n        const internal_idx = Math.floor(fractional_idx);\r\n        fractional_idx -= internal_idx; // leave fractional part\r\n        // linear interpolate\r\n        return a[internal_idx] + (a[internal_idx + 1] - a[internal_idx]) * fractional_idx;\r\n    }\r\n    css_color(v, alpha = 1.0) {\r\n        if (v < 0.0 || v > 1.0)\r\n            throw new Error(\"clut.css_color: Parameter must be between 0 and 1.0\");\r\n        v *= this.SZ;\r\n        v = Math.floor(v);\r\n        return \"rgba(\" + this.r[v] + \",\" + this.g[v] + \",\" + this.b[v] + \", \" + alpha + \")\";\r\n    }\r\n}\r\nexport var Presets;\r\n(function (Presets) {\r\n    Presets.MADNESS = new Clut(1024, 'interpolate', new Uint8Array([0, 0x77, 0xff, 0x11, 0xff, 0, 0xff, 0, 0xff, 0xff, 0x11, 0xff, 0, 0xff, 0x77, 0xff]), new Uint8Array([0, 0x00, 0x66, 0x99, 0xee, 0x66, 0, 0xff, 0xff, 0x66, 0x33, 0xee, 0x66, 0x00, 0xff, 0xff]), new Uint8Array([0, 0x11, 0x00, 0x00, 0x66, 0x99, 0xff, 0xee, 0xff, 0x88, 0x99, 0x66, 0x99, 0xff, 0x77, 0xff]));\r\n    Presets.HEATMAP = new Clut(1024, 'interpolate', new Uint8Array([0, 0, 0, 0, 0, 0x7f, 0xff, 0xff, 0xff, 0x7f]), new Uint8Array([0, 8, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0, 0]), new Uint8Array([0x9f, 0xff, 0xff, 0xff, 0x7f, 0, 0, 0, 0, 0]));\r\n    Presets.GRAYSCALE = new Clut(1024, 'interpolate', new Uint8Array([0, 0xff]), new Uint8Array([0, 0xff]), new Uint8Array([0, 0xff]));\r\n    Presets.GRAYSCALE_INVERSE = new Clut(1024, 'interpolate', new Uint8Array([0xff, 0]), new Uint8Array([0xff, 0]), new Uint8Array([0xff, 0]));\r\n    Presets.TRAFFIC_LIGHTS = new Clut(1024, 'interpolate', new Uint8Array([0xcf, 0xff, 0xff, 0]), new Uint8Array([0, 0x4f, 0xcf, 0x8f]), new Uint8Array([0, 0x0, 0x00, 0]));\r\n})(Presets || (Presets = {}));\r\n//# sourceMappingURL=Clut.js.map","import * as GDIPlus from './GDIPlus';\r\nimport { TextVerticalAlign } from './GDIPlus';\r\nimport * as Clut from './Clut';\r\nimport EventEmitter from \"eventemitter3\";\r\n// class StatsBuf {\r\n//     private data_: number[];\r\n//     private idx_: number  = 0;\r\n//     Min: number = Number.MAX_VALUE;\r\n//     Max: number = -Number.MAX_VALUE;\r\n//\r\n//     get Avg() { return this.sum_ / this.data_.length; }\r\n//\r\n//     private sum_ = 0;\r\n//\r\n//     constructor(sz: number) {\r\n//         if (sz >= 1)\r\n//             this.data_ = new Array<number>(Math.floor(sz));\r\n//     }\r\n//\r\n//     public Put(v: number) {\r\n//         const SZ = this.data_.length;\r\n//         const oldest_data =  this.data_[this.idx_] || 0;\r\n//         this.sum_ += v - oldest_data;\r\n//         // save new data in circular buffer, bump index\r\n//         this.data_[this.idx_++] = v;\r\n//         if (this.idx_ >= SZ) this.idx_ = 0;\r\n//\r\n//         // check if oldest value (which we're about to overwrite) is current min or max.\r\n//         // If it is, rescan the buffer to recalculate min max\r\n//         const do_rescan: boolean =  oldest_data === this.Min || oldest_data === this.Max;\r\n//\r\n//         if (do_rescan) {\r\n//\r\n//             this.Min = Number.MAX_VALUE;\r\n//             this.Max = -Number.MAX_VALUE;\r\n//             this.sum_ = 0;\r\n//             for (let i = 0; i < SZ; ++i) {\r\n//                 const vv = this.data_[i] || 0;\r\n//                 this.sum_ +=  vv;\r\n//                 if (vv < this.Min) this.Min = vv;\r\n//                 else if (vv > this.Max) this.Max = vv;\r\n//             }\r\n//         } else {\r\n//             if (v < this.Min) this.Min = v;\r\n//             else if (v > this.Max) this.Max = v;\r\n//\r\n//         }\r\n//\r\n//\r\n//\r\n//\r\n//     }\r\n//\r\n// }\r\n/*\r\n* Safari and Edge polyfill for createImageBitmap\r\n* https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/createImageBitmap\r\n*\r\n* Support source image types Blob and ImageData.\r\n*\r\n* From: https://dev.to/nektro/createimagebitmap-polyfill-for-safari-and-edge-228\r\n* Updated by Yoan Tournade <yoan@ytotech.com>\r\n// https://gist.github.com/MonsieurV/fb640c29084c171b4444184858a91bc7\r\n* Converted to TypeScript , wrapped in a function, simplified  and optimised by Josh Greifer <joshgreifer@gmail.com>\r\n*  The canvas cache is only useful if the majority of calls to this function use only a small number of bitmap dimensions\r\n*\r\n*/\r\nconst createImageBitmapPolyFill = (canvas = undefined) => {\r\n    // eslint-disable-next-line no-constant-condition\r\n    if (true)\r\n        // if ((!('createImageBitmap' in window)))\r\n        if (canvas === undefined)\r\n            canvas = document.createElement('canvas');\r\n    // @ts-ignore\r\n    window.createImageBitmap = async (data) => {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                canvas = canvas;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.imageSmoothingEnabled = false;\r\n                canvas.width = data.width;\r\n                canvas.height = data.height;\r\n                ctx.putImageData(data, 0, 0);\r\n                resolve(canvas);\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n};\r\ncreateImageBitmapPolyFill();\r\nexport var RenderStyle;\r\n(function (RenderStyle) {\r\n    RenderStyle[RenderStyle[\"None\"] = 0] = \"None\";\r\n    RenderStyle[RenderStyle[\"Line\"] = 1] = \"Line\";\r\n    RenderStyle[RenderStyle[\"Bar\"] = 2] = \"Bar\";\r\n    RenderStyle[RenderStyle[\"Segment\"] = 3] = \"Segment\";\r\n    RenderStyle[RenderStyle[\"Step\"] = 4] = \"Step\";\r\n})(RenderStyle || (RenderStyle = {}));\r\nexport var DownSampleAlgorithm;\r\n(function (DownSampleAlgorithm) {\r\n    DownSampleAlgorithm[DownSampleAlgorithm[\"None\"] = 0] = \"None\";\r\n    DownSampleAlgorithm[DownSampleAlgorithm[\"Decimate\"] = 1] = \"Decimate\";\r\n    DownSampleAlgorithm[DownSampleAlgorithm[\"Avg\"] = 2] = \"Avg\";\r\n    DownSampleAlgorithm[DownSampleAlgorithm[\"MinMax\"] = 3] = \"MinMax\";\r\n})(DownSampleAlgorithm || (DownSampleAlgorithm = {}));\r\nexport var SignalFollowBehaviour;\r\n(function (SignalFollowBehaviour) {\r\n    SignalFollowBehaviour[SignalFollowBehaviour[\"None\"] = 0] = \"None\";\r\n    SignalFollowBehaviour[SignalFollowBehaviour[\"Scroll\"] = 1] = \"Scroll\";\r\n    SignalFollowBehaviour[SignalFollowBehaviour[\"Paginate\"] = 2] = \"Paginate\";\r\n    SignalFollowBehaviour[SignalFollowBehaviour[\"Fit\"] = 3] = \"Fit\";\r\n})(SignalFollowBehaviour || (SignalFollowBehaviour = {}));\r\nexport var AutoYAxisAdjustBehaviour;\r\n(function (AutoYAxisAdjustBehaviour) {\r\n    AutoYAxisAdjustBehaviour[AutoYAxisAdjustBehaviour[\"None\"] = 0] = \"None\";\r\n    AutoYAxisAdjustBehaviour[AutoYAxisAdjustBehaviour[\"EnsureAllSamplesVisible\"] = 1] = \"EnsureAllSamplesVisible\";\r\n    AutoYAxisAdjustBehaviour[AutoYAxisAdjustBehaviour[\"EnsureMostRecentSampleVisible\"] = 2] = \"EnsureMostRecentSampleVisible\";\r\n})(AutoYAxisAdjustBehaviour || (AutoYAxisAdjustBehaviour = {}));\r\nexport class Channel {\r\n    constructor() {\r\n        this.Color = '#446666';\r\n        this.Name = '(unnamed signal)';\r\n        this.Visible = false;\r\n        this.RenderStyle = RenderStyle.Line;\r\n        this.DownSampleAlgorithm = DownSampleAlgorithm.Decimate;\r\n    }\r\n}\r\n/*\r\nThe Scope object depends on a\r\n */\r\nexport class Scope extends EventEmitter {\r\n    constructor(container, gch = GDIPlus.GCH) {\r\n        super();\r\n        this.gch = gch;\r\n        this.offScreenContexts = [];\r\n        this.currentOffScreenContextsIndex = 0; // toggles between 1 and 2 on each Render\r\n        // private gc_OnScreen: GDIPlus.GCH;\r\n        // private gc_OffScreen: GDIPlus.GCH;\r\n        // private gc_graphData1: GDIPlus.GCH;\r\n        // private gc_graphData2: GDIPlus.GCH;\r\n        // private gc_graphDataNew: GDIPlus.GCH;\r\n        // private gc_graphDataOld: GDIPlus.GCH;\r\n        this.canvases = [];\r\n        this.MIN_GRID_X = 10;\r\n        this.MIN_GRID_Y = 10;\r\n        this.gridMinorX = 1;\r\n        this.gridMajorX = 10;\r\n        this.gridMinorY = 100;\r\n        this.gridMajorY = 1000;\r\n        this.AxisFont = '12px Arial';\r\n        this.AxisFontHeight = 12;\r\n        this.ButtonFont = '16px Arial';\r\n        this.BackColor = 'black';\r\n        this.ForeColor = 'white';\r\n        this.AxesBackColor = '#1a2630';\r\n        this.BorderColor = 'red';\r\n        this.IS_SPECTROGRAM = false;\r\n        this.GridMinorTextColor = '#88c5ff';\r\n        this.GridMajorTextColor = '#1c95ff';\r\n        this.ButtonBackColor = this.AxesBackColor;\r\n        this.ButtonForeColor = '#5ff800';\r\n        this.ButtonDisabledColor = '#6d7a65';\r\n        // Y values are multiplied by this\r\n        this.SampleUnitMultiplier = 1.0; //32767.0;\r\n        this.fs_ = 16000.0;\r\n        this.sampleDuration = 1 / 16000.0;\r\n        this.dragPoint = { x: 0, y: 0 };\r\n        this.dragStartPoint = { x: 0, y: 0 };\r\n        this._nchans = 0;\r\n        this.slaves = new Array();\r\n        this._lineWidth = 0.1;\r\n        // The data time when data was last rendered.  dataTime - dataTimeOld  == data needed to draw in RenderData\r\n        this.dataTimeOld = -1;\r\n        this.TimeAxisVisible = true;\r\n        this.YAxisVisible = true;\r\n        this.SignalFollowBehaviour = SignalFollowBehaviour.Paginate;\r\n        this.AutoYAxisAdjustBehaviour = AutoYAxisAdjustBehaviour.EnsureAllSamplesVisible;\r\n        this.AutoYAxisAdjustChannel = -1; // no channel\r\n        this._autoYTrack = true;\r\n        this._YAxisFormat = '0.00';\r\n        //private subpixel_stats: StatsBuf;\r\n        this.captureArea = Area.None;\r\n        this.dataTime = 0;\r\n        this.RenderFrame = async () => {\r\n            const dataTime = this.dataTime;\r\n            if (this.dataTimeOld !== dataTime || !this.dBoundsOld.Equals(this.dBounds)) {\r\n                const ctx = this.onScreenContext;\r\n                const ctx_off_prev = this.offScreenContexts[this.currentOffScreenContextsIndex];\r\n                // swap buffers\r\n                if (++this.currentOffScreenContextsIndex >= 1)\r\n                    this.currentOffScreenContextsIndex = 0;\r\n                const ctx_off_curr = this.offScreenContexts[this.currentOffScreenContextsIndex];\r\n                if (this.TimeAxisVisible || this.YAxisVisible) {\r\n                    GDIPlus.GCH.FillRectangleCoords(ctx, { Color: this.AxesBackColor }, 0, this.yAxisBounds.height, this.timeAxisBounds.x, ctx.canvas.height);\r\n                }\r\n                if (this.TimeAxisVisible)\r\n                    this.RenderTimeAxis(ctx);\r\n                this.RenderYAxis(ctx);\r\n                this.RenderButtons(ctx);\r\n                // Let's assume we need to render everything\r\n                let dirtyRect = this.dBounds.Clone();\r\n                if (dataTime < dirtyRect.right) { //  we haven't received a whole screenful of data yet\r\n                    dirtyRect.right = dataTime; // shrink dirty rect, don't need to draw to right of data\r\n                }\r\n                // render any overlapped region from onscreen to offscreen buffer\r\n                if (dirtyRect.width > 0 || dataTime === 0) {\r\n                    // Background\r\n                    const new_data_overlap_pixels = this.pixels2duration(2);\r\n                    // eslint-disable-next-line no-constant-condition\r\n                    // if (false) {\r\n                    if (this.dBoundsOld.Equals(this.dBounds)) {\r\n                        this.BlitGraph(ctx_off_prev, ctx_off_curr);\r\n                        await this.RenderGraph(ctx_off_curr, this.dataTimeOld - new_data_overlap_pixels, dataTime - this.dataTimeOld + new_data_overlap_pixels);\r\n                    }\r\n                    else {\r\n                        // this.dBoundsOld.AssignFrom(this.dBounds);\r\n                        this.RenderGraphBackground(ctx_off_curr);\r\n                        await this.RenderGraph(ctx_off_curr, dirtyRect.x, dirtyRect.width);\r\n                    }\r\n                    // Ok, we've rendered current data bounds to offscreen, blit to main context and update offscreen data rect\r\n                    this.BlitGraph(ctx_off_curr, ctx);\r\n                    this.dataTimeOld = dataTime;\r\n                    // grid\r\n                    this.RenderGraphGrid(ctx);\r\n                    //                this.BlitAll(ctx, ctx_on);\r\n                }\r\n                else {\r\n                    //debugLog(\"scope\", dirtyRect.width, this.dataTime);\r\n                }\r\n            }\r\n            window.requestAnimationFrame(this.RenderFrame);\r\n            //       window.setTimeout(this.RenderFrame, 250);\r\n        };\r\n        this.clut = Clut.Presets.GRAYSCALE;\r\n        for (let i = 0; i < 3; ++i) {\r\n            const canvas = document.createElement('canvas');\r\n            this.canvases.push(canvas);\r\n        }\r\n        // first canvas is onscreen\r\n        this.onScreenCanvas = this.canvases[0];\r\n        // Make sure container is empty\r\n        while (container.firstChild) {\r\n            container.removeChild(container.firstChild);\r\n        }\r\n        container.appendChild(this.onScreenCanvas);\r\n        this.onScreenContext = this.onScreenCanvas.getContext('2d');\r\n        //        this.onScreenContext.imageSmoothingEnabled = false;\r\n        // offscreen buffers for graph data\r\n        this.offScreenContexts.push(this.canvases[1].getContext('2d'));\r\n        this.offScreenContexts.push(this.canvases[2].getContext('2d'));\r\n        //       this.offScreenContexts[0].imageSmoothingEnabled = false;\r\n        //       this.offScreenContexts[1].imageSmoothingEnabled = false;\r\n        this.currentOffScreenContextsIndex = 0;\r\n        this.master = null;\r\n        this.penGridMajor = new GDIPlus.Pen({ Color: 'rgba(25,89,250,0.57)' });\r\n        this.penGridMinor = new GDIPlus.Pen({ Color: 'rgba(68,118,251,0.5)' });\r\n        this.penBorder = new GDIPlus.Pen({ Color: 'Gray' });\r\n        /*\r\n         * Can't set dash style on gridlines, because dashes scale to data coordinates!\r\n       */\r\n        this.penGridMinor.DashPattern = [1.0, 3.0];\r\n        this.brushGridMajor = { Color: 'Black' };\r\n        this.brushGridMinor = { Color: 'LightGray' };\r\n        this.penGridMajor.Width = 1.0;\r\n        this.penGridMinor.Width = 1.0;\r\n        this.penBorder.Width = 1.0;\r\n        this.dBounds = new GDIPlus.Rect(0.0, -1.0, 10.0, 2.0);\r\n        this.dBoundsOld = new GDIPlus.Rect(this.dBounds.x, this.dBounds.y, this.dBounds.width, this.dBounds.height);\r\n        this.captureArea = Area.None;\r\n        const getCoords = (e) => {\r\n            const r = this.onScreenCanvas.getBoundingClientRect();\r\n            return (\"touches\" in e) ?\r\n                [e.touches[0].clientX - r.left, e.touches[0].clientY - r.top] :\r\n                [e.clientX - r.left, e.clientY - r.top];\r\n        };\r\n        // Set mouse handlers\r\n        this.onScreenCanvas.ontouchstart = this.onScreenCanvas.onmousedown = (e) => {\r\n            //           debugLog(\"voice-feature-detector\",\"mousedown\" );\r\n            e.preventDefault();\r\n            const [x, y] = getCoords(e);\r\n            this.captureArea = this.GetArea(x, y);\r\n            this.dragPoint.x = this.dragStartPoint.x = x - this.gBounds.x;\r\n            this.dragPoint.y = this.dragStartPoint.y = y;\r\n        };\r\n        // https://stackoverflow.com/questions/17613710/mouse-events-to-touch-event-for-ipad-compatibility\r\n        this.onScreenCanvas.ontouchmove = this.onScreenCanvas.onmousemove = (e) => {\r\n            e.preventDefault();\r\n            //            debugLog(\"voice-feature-detector\",\"mousemove\" );\r\n            const [x, y] = getCoords(e);\r\n            switch (this.captureArea) {\r\n                case Area.Graph:\r\n                    this.graph_Zoom(x - this.gBounds.x, y);\r\n                    break;\r\n                case Area.YAxis:\r\n                    this.yAxis_Scroll(y);\r\n                    break;\r\n                case Area.TimeAxis:\r\n                    this.timeAxis_Scroll(x - this.gBounds.x);\r\n                    break;\r\n                case Area.None:\r\n                default:\r\n                    switch (this.GetArea(x, y)) {\r\n                        case Area.TimeAxis:\r\n                            this.onScreenCanvas.style.cursor = 'ew-resize';\r\n                            break;\r\n                        case Area.YAxis:\r\n                            this.onScreenCanvas.style.cursor = 'ns-resize';\r\n                            break;\r\n                        case Area.Graph:\r\n                            this.onScreenCanvas.style.cursor = 'zoom-in';\r\n                            break;\r\n                        case Area.BottomLeft:\r\n                            this.onScreenCanvas.style.cursor = 'pointer';\r\n                            break;\r\n                        default:\r\n                            this.onScreenCanvas.style.cursor = 'default';\r\n                            break;\r\n                    }\r\n            }\r\n        };\r\n        this.onScreenCanvas.ontouchend = this.onScreenCanvas.onmouseup = (e) => {\r\n            e.preventDefault();\r\n            if (this.captureArea == Area.BottomLeft) {\r\n                switch (this.AutoYAxisAdjustBehaviour) {\r\n                    case AutoYAxisAdjustBehaviour.EnsureAllSamplesVisible:\r\n                        this.AutoYAxisAdjustBehaviour = AutoYAxisAdjustBehaviour.None;\r\n                        break;\r\n                    case AutoYAxisAdjustBehaviour.None:\r\n                    default:\r\n                        this.AutoYAxisAdjustBehaviour = AutoYAxisAdjustBehaviour.EnsureAllSamplesVisible;\r\n                        break;\r\n                }\r\n            }\r\n            this.captureArea = Area.None;\r\n        };\r\n        this.Resize();\r\n        // start drawing\r\n        window.requestAnimationFrame(this.RenderFrame);\r\n    }\r\n    get GridMinorColor() { return this.penGridMinor.Color; }\r\n    set GridMinorColor(color) { this.penGridMinor.Color = color; }\r\n    get GridMajorColor() { return this.penGridMajor.Color; }\r\n    set GridMajorColor(color) { this.penGridMajor.Color = color; }\r\n    get Fs() { return this.fs_; }\r\n    set Fs(fs) { this.fs_ = fs; this.sampleDuration = 1 / fs; }\r\n    get NumChannels() { return this.ChannelInfo ? this.ChannelInfo.length : this._nchans; }\r\n    set NumChannels(n) { if (this.ChannelInfo)\r\n        throw \"Can't set number of channels on a scope when its ChannelInfo array is set.\"; this._nchans = n; }\r\n    AddSlave(slave) {\r\n        this.slaves.push(slave);\r\n        slave.master = this;\r\n        //       slave.conn_ = this.conn_;\r\n        slave.SignalFollowBehaviour = this.SignalFollowBehaviour;\r\n        slave.DataWidth = this.DataWidth;\r\n    }\r\n    //   public get Url(): string { return this.conn_.Url; }\r\n    //   public set Url(url: string) { this.conn_.Url = url; }\r\n    onData() {\r\n        if (this.conn_ && !this.master) // Don't update if this is slaved\r\n            this.dataTime = this.conn_.CurrentTimeSecs;\r\n        for (const slave of this.slaves)\r\n            slave.dataTime = this.dataTime;\r\n        switch (this.SignalFollowBehaviour) {\r\n            case SignalFollowBehaviour.None:\r\n            default:\r\n                break;\r\n            case SignalFollowBehaviour.Scroll:\r\n                this.DataX = this.dataTime - this.dBounds.width;\r\n                break;\r\n            case SignalFollowBehaviour.Paginate:\r\n                if (this.dataTime > this.dBounds.right)\r\n                    this.DataX = this.dBounds.right;\r\n        }\r\n    }\r\n    get Connection() { return this.conn_; }\r\n    set Connection(conn) {\r\n        const this_ = this;\r\n        const lambda = () => {\r\n            this_.onData();\r\n        };\r\n        // if (conn !== this.conn_ && this.conn_ !== undefined)\r\n        //     this.conn_.off('data', lambda);\r\n        if (conn !== undefined)\r\n            conn.on('data', lambda);\r\n        this.conn_ = conn;\r\n    }\r\n    get DataX() {\r\n        return this.dBounds.x;\r\n    }\r\n    set DataX(value) {\r\n        if (this.master != null) {\r\n            this.master.DataX = value;\r\n            return;\r\n        }\r\n        const current_time = this.conn_ ? this.conn_.CurrentTimeSecs : 3600;\r\n        if (value < 0)\r\n            value = 0;\r\n        else if (value > current_time)\r\n            value = current_time;\r\n        this.dBounds.x = value;\r\n        for (let slave of this.slaves)\r\n            slave.dBounds.x = value;\r\n        this.timeAxis_Recalc();\r\n        this.emit('TIME-AXIS', { left: value, width: this.dBounds.width });\r\n    }\r\n    get DataY() {\r\n        return this.dBounds.y;\r\n    }\r\n    set DataY(value) {\r\n        this.dBounds.y = value;\r\n    }\r\n    get DataWidth() {\r\n        return this.dBounds.width;\r\n    }\r\n    set DataWidth(value) {\r\n        if (this.master !== null) {\r\n            this.master.DataWidth = value;\r\n            return;\r\n        }\r\n        this.dBounds.width = value;\r\n        //this.subpixel_stats = new StatsBuf(this.samples_per_pixel());\r\n        for (let slave of this.slaves)\r\n            slave.dBounds.width = value;\r\n        this.timeAxis_Recalc();\r\n        this.emit('TIME-AXIS', { left: this.dBounds.x, width: value });\r\n    }\r\n    get DataHeight() {\r\n        return this.dBounds.height;\r\n    }\r\n    set DataHeight(value) {\r\n        this.dBounds.height = value;\r\n        this.yAxis_Recalc();\r\n    }\r\n    Reset() {\r\n        this.DataX = 0;\r\n        if (this.conn_)\r\n            this.conn_.Reset();\r\n    }\r\n    Resize() {\r\n        const Y_AXIS_WIDTH = 48;\r\n        const X_AXIS_HEIGHT = 32;\r\n        const W = this.onScreenCanvas.parentElement.clientWidth;\r\n        const H = this.onScreenCanvas.parentElement.clientHeight;\r\n        // const r = this.onScreenCanvas.parentElement!.getBoundingClientRect();\r\n        // const W = r.width;\r\n        // const H = r.height;\r\n        const y_axis_width = this.YAxisVisible ? Y_AXIS_WIDTH : 0;\r\n        const x_axis_height = this.TimeAxisVisible ? X_AXIS_HEIGHT : 0;\r\n        for (let canvas of this.canvases) {\r\n            canvas.width = W;\r\n            canvas.height = H;\r\n        }\r\n        this.yAxisBounds = new GDIPlus.Rect(0, 0, y_axis_width, H - x_axis_height);\r\n        this.timeAxisBounds = new GDIPlus.Rect(y_axis_width, H - x_axis_height, W - y_axis_width, x_axis_height);\r\n        this.ButtonsBounds = new GDIPlus.Rect(0, H - x_axis_height, y_axis_width, x_axis_height);\r\n        this.gBounds = new GDIPlus.Rect(y_axis_width, 0, W - y_axis_width, H - x_axis_height);\r\n        this.dataTimeOld = -1; // Force dirty\r\n    }\r\n    // copy one render buffer to another offset by x and y in data coordinates\r\n    BlitGraph(src_ctx, dest_ctx) {\r\n        if (this.gBounds.width > 0)\r\n            try {\r\n                const img = src_ctx.getImageData(this.gBounds.x, this.gBounds.y, this.gBounds.width, this.gBounds.height);\r\n                dest_ctx.putImageData(img, this.gBounds.x, this.gBounds.y);\r\n            }\r\n            catch (ex) {\r\n                console.log(ex);\r\n            }\r\n    }\r\n    BlitAll(src_ctx, dest_ctx) {\r\n        const img = src_ctx.getImageData(0, 0, this.onScreenCanvas.width, this.onScreenCanvas.height);\r\n        //        dest_ctx.putImageData(img, 0, 0);\r\n        dest_ctx.putImageData(img, 0, 0);\r\n    }\r\n    RenderButtons(ctx) {\r\n        ctx.font = this.ButtonFont;\r\n        GDIPlus.GCH.FillRectangle(ctx, { Color: this.ButtonBackColor }, this.ButtonsBounds);\r\n        const align = { H: GDIPlus.TextHorizontalAlign.Center, V: GDIPlus.TextVerticalAlign.Middle };\r\n        const textColor = (this.AutoYAxisAdjustBehaviour === AutoYAxisAdjustBehaviour.EnsureAllSamplesVisible) ? this.ButtonForeColor : this.ButtonDisabledColor;\r\n        GDIPlus.GCH.DrawString(ctx, \"↕\", textColor, this.ButtonsBounds.x + this.ButtonsBounds.width / 2, this.ButtonsBounds.y + this.ButtonsBounds.height / 2, align);\r\n    }\r\n    RenderTimeAxis(ctx) {\r\n        const start_offset_time = this.conn_ ? this.conn_.StartTimeSecs : 0;\r\n        ctx.save();\r\n        ctx.font = this.AxisFont;\r\n        GDIPlus.GCH.setClip(ctx, this.timeAxisBounds);\r\n        GDIPlus.GCH.FillRectangle(ctx, { Color: this.AxesBackColor }, this.timeAxisBounds);\r\n        GDIPlus.GCH.SetOrigin(ctx, this.timeAxisBounds.x, this.timeAxisBounds.y);\r\n        // find first grid minor point\r\n        const firstGridMinorX = this.gridMinorX * Math.floor(this.dBounds.x / this.gridMinorX);\r\n        const add_numbers_to_grid_minor = (25 < this.duration2pixels(this.gridMinorX));\r\n        for (let x = firstGridMinorX; x < this.dBounds.x + this.dBounds.width; x += this.gridMinorX) {\r\n            let gx = this.time2pixels(x);\r\n            GDIPlus.GCH.DrawLine(ctx, this.penGridMinor, gx, 0, gx, 3);\r\n            if (add_numbers_to_grid_minor) {\r\n                const align = { H: GDIPlus.TextHorizontalAlign.Center, V: GDIPlus.TextVerticalAlign.Top };\r\n                GDIPlus.GCH.DrawString(ctx, (start_offset_time + x).toFixed(2), this.GridMajorTextColor, gx + 1, 4, align);\r\n            }\r\n        }\r\n        // find first grid major point\r\n        const firstGridMajorX = this.gridMajorX * Math.floor(this.dBounds.x / this.gridMajorX);\r\n        for (let x = firstGridMajorX; x < this.dBounds.x + this.dBounds.width; x += this.gridMajorX) {\r\n            let gx = this.time2pixels(x);\r\n            GDIPlus.GCH.DrawLine(ctx, this.penGridMajor, gx, 0, gx, 4);\r\n            const align = { H: GDIPlus.TextHorizontalAlign.Center, V: GDIPlus.TextVerticalAlign.Top };\r\n            GDIPlus.GCH.DrawString(ctx, (start_offset_time + x).toFixed(1), this.GridMajorTextColor, gx + 1, 4, align);\r\n        }\r\n        ctx.restore();\r\n        //g.ResetClip();\r\n        // g.DrawRectangle(this.penBorder, this.timeAxisBounds);\r\n    }\r\n    RenderYAxis(ctx) {\r\n        ctx.save();\r\n        ctx.font = this.AxisFont;\r\n        GDIPlus.GCH.setClip(ctx, this.yAxisBounds);\r\n        GDIPlus.GCH.FillRectangle(ctx, { Color: this.AxesBackColor }, this.yAxisBounds);\r\n        //        this.yAxis_Recalc();\r\n        // find first grid minor point\r\n        const firstGridMinorY = this.gridMinorY * Math.floor(this.dBounds.y / this.gridMinorY);\r\n        const add_numbers_to_grid_minor = (this.AxisFontHeight < this.d2gHeight(this.gridMinorY));\r\n        for (let y = firstGridMinorY; y < this.dBounds.y + this.dBounds.height; y += this.gridMinorY) {\r\n            let gy = this.d2gY(y);\r\n            GDIPlus.GCH.DrawLine(ctx, this.penGridMinor, this.yAxisBounds.width - 3, gy, this.yAxisBounds.width, gy);\r\n            if (add_numbers_to_grid_minor) {\r\n                const align = { H: GDIPlus.TextHorizontalAlign.Right, V: GDIPlus.TextVerticalAlign.Middle };\r\n                GDIPlus.GCH.DrawString(ctx, y.toFixed(0), this.GridMinorTextColor, this.yAxisBounds.width - 5, gy, align);\r\n            }\r\n        }\r\n        // find first grid major point\r\n        const firstGridMajorY = this.gridMajorY * Math.floor(this.dBounds.y / this.gridMajorY);\r\n        for (let y = firstGridMajorY; y < this.dBounds.y + this.dBounds.height; y += this.gridMajorY) {\r\n            let gy = this.d2gY(y);\r\n            GDIPlus.GCH.DrawLine(ctx, this.penGridMajor, this.yAxisBounds.width - 3, gy, this.yAxisBounds.width, gy);\r\n            const align = { H: GDIPlus.TextHorizontalAlign.Right, V: GDIPlus.TextVerticalAlign.Middle };\r\n            GDIPlus.GCH.DrawString(ctx, y.toFixed(0), this.GridMajorTextColor, this.yAxisBounds.width - 5, gy, align);\r\n        }\r\n        ctx.restore();\r\n        //g.ResetClip();\r\n        //g.DrawRectangle(penBorder, yAxisBounds);\r\n    }\r\n    RenderGraphBackground(ctx) {\r\n        GDIPlus.GCH.FillRectangle(ctx, { Color: this.BackColor }, this.gBounds);\r\n    }\r\n    async RenderGraph(ctx, start_time, duration) {\r\n        if (this.conn_ && this.conn_.HasData) {\r\n            const YExtentChanged = await this.RenderData(ctx, start_time, duration);\r\n            if (YExtentChanged)\r\n                this.AdjustYAxis();\r\n        }\r\n        else { // no data\r\n            GDIPlus.GCH.DrawString(ctx, \"(No signal)\", this.ForeColor, this.gBounds.x + this.gBounds.width / 2, this.gBounds.y + this.gBounds.height / 2, { H: GDIPlus.TextHorizontalAlign.Center, V: TextVerticalAlign.Middle });\r\n        }\r\n    }\r\n    /*\r\n    * Render the data with multiple calls to Graphics.DrawLine().\r\n    * The number of DrawLine calls is ~ 3 X the width of the graph (in pixels).\r\n    * If one pixel represents more than one data point (i.e. if the time axis resolution\r\n    * is coarser than 1 sample), the data points are represented by a\r\n    * vertical line of pixels, from the min to the max value in the range of points being rendered.\r\n    *\r\n    * If the time axis resolution is greater than one sample,  this function renders the data using\r\n    * splines.\r\n    *\r\n    * return true if graph got clipped; it always sets maxY and minY to the y limits of the displayed signal\r\n    */\r\n    async RenderData(ctx, start_time, duration) {\r\n        //\r\n        // data\r\n        // flip data values horizontally, zero at bottom\r\n        const time_and_sample_values_rect = new GDIPlus.Rect(this.dBounds.x, this.SampleUnitMultiplier * (this.dBounds.y + this.dBounds.height), this.dBounds.width, -this.SampleUnitMultiplier * this.dBounds.height);\r\n        // g.SetTransformRect(this.gBounds, time_and_sample_values_rect);\r\n        /*\r\n         *\r\n         * X (Horizontal) units are now seconds.\r\n         * Y (Vertical) units are now in sample values.\r\n         * To convert X coordinates to sample buffer offsets, divide by this.samples_per_pixel.\r\n         * To convert sample buffer offsets to X coordinates, multiply by this.samples_per_pixel.\r\n         */\r\n        const pixel_and_sample_values_rect = new GDIPlus.Rect(0, this.SampleUnitMultiplier * (this.dBounds.y + this.dBounds.height), this.gBounds.width, -this.SampleUnitMultiplier * this.dBounds.height);\r\n        // g.SetTransformRect(this.gBounds, pixel_and_sample_values_rect);\r\n        /*\r\n         *\r\n         * X (Horizontal) units are now pixels.\r\n         * Y (Vertical) units are now in sample values.\r\n         * To convert X coordinates to sample buffer offsets, multiply by sampleRate.\r\n         * To convert sample buffer offsets to X coordinates, divide by sampleRate.\r\n         */\r\n        ctx.save();\r\n        // Set maxY and minY for autoscaling/autotrack\r\n        let nMaxY = -Number.MAX_VALUE;\r\n        let nMinY = Number.MAX_VALUE;\r\n        // find the index into the sample buffer of the leftmost visible sample\r\n        const first_idx = this.conn_ ? this.conn_.TimeToIndex(start_time) : 0;\r\n        let num_frames_to_display = Math.floor(duration * this.fs_);\r\n        let num_frames_available = this.conn_ ? this.conn_.NumFramesRead : 0;\r\n        if (num_frames_to_display > num_frames_available) {\r\n            num_frames_to_display = num_frames_available;\r\n            duration = num_frames_to_display / this.fs_;\r\n        }\r\n        if (num_frames_to_display < 1) {\r\n            ctx.restore();\r\n            return Promise.resolve(false);\r\n        }\r\n        const SUBPIXELS_PER_PIXEL = 5;\r\n        //      const stride_t = this.pixels2duration(1/SUBPIXELS_PER_PIXEL);\r\n        const samples_per_pixel = this.samples_per_pixel();\r\n        // get the windowed data from the connection\r\n        const data = this.conn_ ? this.conn_.Data(start_time, duration) : null;\r\n        //       const dataraw = this.conn_.DataRaw(start_time, duration);\r\n        if (data === null) {\r\n            ctx.restore();\r\n            return false;\r\n        }\r\n        let last_y = 0;\r\n        /*\r\n        Spectrogram:   Basically treat the data as a pixel array and blit it with scaling.\r\n            We use a clut to map the data values to pixel color\r\n            1.   The data value range should be between 0.0 and 1.0\r\n            2.   Multiply each value by this.SampleUnitMultiplier\r\n         */\r\n        if (this.IS_SPECTROGRAM) {\r\n            const sample_rate_and_sample_values_rect = new GDIPlus.Rect(\r\n            /* this.dBounds.x */ 0 * this.fs_, this.SampleUnitMultiplier * (this.dBounds.y + this.dBounds.height), this.dBounds.width * this.fs_, -this.SampleUnitMultiplier * this.dBounds.height);\r\n            // work with horizontal pixel coords, vertical data coords\r\n            // GDIPlus.GCH.SetTransformRect(ctx, this.gBounds, pixel_and_sample_values_rect);\r\n            const data_as_image = new ImageData(this.NumChannels, num_frames_to_display);\r\n            const data_pixels = new Uint32Array(data_as_image.data.buffer);\r\n            const nvals = num_frames_to_display * this.NumChannels;\r\n            const start_val = first_idx;\r\n            // TODO: If this is too slow,  move the following clut lookup to the engine,\r\n            // TODO: which will require implementing CLUT there (see AFDetector for source)\r\n            for (let i = 0; i < nvals; ++i) {\r\n                const data_val = data.data[i + start_val];\r\n                // clamp\r\n                // if (data_val < 0) data_val = 0; else if (data_val > 1.0) data_val = 1.0;\r\n                data_pixels[i] = this.clut.rgba[Math.floor(data_val * this.clut.SZ)];\r\n            }\r\n            const img = await createImageBitmap(data_as_image /* , { imageOrientation: \"flipY\" } FlipY is done by xform matrix */).catch(reason => {\r\n                // debugLog(\"scope\", reason);\r\n            });\r\n            if (!img)\r\n                return false;\r\n            let xform = GDIPlus.GCH.GetWorldToGraphicTransform(this.gBounds, sample_rate_and_sample_values_rect);\r\n            GDIPlus.GCH.ApplyTransform(ctx, xform);\r\n            ctx.scale(1, -1);\r\n            ctx.rotate(-Math.PI / 2);\r\n            // note, after above transform, x and y are swapped, so the below line offsets the image horizontally!\r\n            ctx.translate(0, (start_time - this.dBounds.x) * this.Fs);\r\n            ctx.drawImage(img, 0, 0 /* img.width */);\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.restore();\r\n            return false;\r\n        }\r\n        else { // Not spectrogram\r\n            if (this.ChannelInfo)\r\n                for (let chan = 0; chan < this.NumChannels; ++chan) {\r\n                    // if color is set to invisible, don't display channel\r\n                    if (this.ChannelInfo[chan].Visible === false)\r\n                        continue;\r\n                    const scale_y_axis_to_this_channel = (chan === this.AutoYAxisAdjustChannel);\r\n                    const render_style = this.ChannelInfo[chan].RenderStyle;\r\n                    const downsample_algorithm = this.ChannelInfo[chan].DownSampleAlgorithm;\r\n                    const downSample = downsample_algorithm !== DownSampleAlgorithm.None && samples_per_pixel > SUBPIXELS_PER_PIXEL;\r\n                    ctx.globalCompositeOperation = (render_style === RenderStyle.Segment) ? 'source-xor' : 'source-over';\r\n                    const chan_data = data.pick(null, chan);\r\n                    let pixel_x = this.d2gX(start_time);\r\n                    let last_rendered_idx = 0;\r\n                    let last_rendered_t = start_time;\r\n                    let t = last_rendered_t;\r\n                    let y;\r\n                    let pen = { Color: this.ChannelInfo[chan].Color || 'black', Width: 0.1 };\r\n                    // for downsampling\r\n                    let subpixel_min_y;\r\n                    let subpixel_max_y;\r\n                    let subpixel_sum_y;\r\n                    //           ctx.lineWidth = stride_t * 1.1;\r\n                    ctx.strokeStyle = pen.Color;\r\n                    ctx.fillStyle = pen.Color;\r\n                    ctx.lineWidth = pen.Width;\r\n                    let segment_start_t = chan_data.get(0) !== 0 ? t : -1;\r\n                    switch (render_style) {\r\n                        case RenderStyle.Line:\r\n                        case RenderStyle.Step:\r\n                            if (downSample) {\r\n                                // work with horizontal pixel coords, vertical data coords for downsampling\r\n                                GDIPlus.GCH.SetTransformRect(ctx, this.gBounds, pixel_and_sample_values_rect);\r\n                                subpixel_max_y = -Number.MAX_VALUE;\r\n                                subpixel_min_y = Number.MAX_VALUE;\r\n                                subpixel_sum_y = 0.0;\r\n                                // collect sub-pixel points\r\n                                ctx.beginPath();\r\n                                ctx.moveTo(pixel_x, chan_data.get(0));\r\n                                for (let idx = 0; idx < num_frames_to_display; ++idx) {\r\n                                    y = chan_data.get(idx);\r\n                                    // update maxY, minY (for auto-scale)\r\n                                    if (scale_y_axis_to_this_channel) {\r\n                                        if (this.AutoYAxisAdjustBehaviour === AutoYAxisAdjustBehaviour.EnsureAllSamplesVisible) {\r\n                                            if (y > nMaxY)\r\n                                                nMaxY = y;\r\n                                            else if (y < nMinY)\r\n                                                nMinY = y;\r\n                                        }\r\n                                        else //\r\n                                            nMinY = nMaxY = y;\r\n                                        if (idx == num_frames_to_display - 1)\r\n                                            last_y = y;\r\n                                    }\r\n                                    if (y > subpixel_max_y)\r\n                                        subpixel_max_y = y;\r\n                                    else if (y < subpixel_min_y)\r\n                                        subpixel_min_y = y;\r\n                                    subpixel_sum_y += y;\r\n                                    // this.subpixel_stats.Put(y);\r\n                                    if (idx - last_rendered_idx >= samples_per_pixel) {\r\n                                        switch (downsample_algorithm) {\r\n                                            case DownSampleAlgorithm.MinMax:\r\n                                                ctx.lineTo(pixel_x, subpixel_min_y);\r\n                                                ctx.lineTo(pixel_x, subpixel_max_y);\r\n                                                ctx.lineTo(pixel_x + 1, subpixel_max_y);\r\n                                                break;\r\n                                            case DownSampleAlgorithm.Avg:\r\n                                                ctx.lineTo(pixel_x, subpixel_sum_y / samples_per_pixel);\r\n                                                break;\r\n                                            case DownSampleAlgorithm.Decimate:\r\n                                            default:\r\n                                                ctx.lineTo(pixel_x, y);\r\n                                        }\r\n                                        ++pixel_x;\r\n                                        // reset subpixel min, max and sum\r\n                                        subpixel_max_y = -Number.MAX_VALUE;\r\n                                        subpixel_min_y = Number.MAX_VALUE;\r\n                                        subpixel_sum_y = 0.0;\r\n                                        last_rendered_idx = idx;\r\n                                    }\r\n                                }\r\n                                ctx.setTransform(1, 0, 0, 1, this.gBounds.x, this.gBounds.y);\r\n                                ctx.lineWidth = 1.0;\r\n                                ctx.lineJoin = 'miter';\r\n                                ctx.stroke();\r\n                            }\r\n                            else {\r\n                                GDIPlus.GCH.SetTransformRect(ctx, this.gBounds, time_and_sample_values_rect);\r\n                                ctx.beginPath();\r\n                                let y_old = chan_data.get(0);\r\n                                if (render_style === RenderStyle.Step)\r\n                                    ctx.lineTo(t, y_old);\r\n                                else\r\n                                    ctx.moveTo(t, y_old);\r\n                                const dt = this.sampleDuration;\r\n                                for (let idx = 0; idx < num_frames_to_display; ++idx) {\r\n                                    const y = chan_data.get(idx);\r\n                                    if (render_style === RenderStyle.Step)\r\n                                        ctx.lineTo(t, y);\r\n                                    t += dt;\r\n                                    // update maxY, minY\r\n                                    if (scale_y_axis_to_this_channel) {\r\n                                        if (this.AutoYAxisAdjustBehaviour === AutoYAxisAdjustBehaviour.EnsureAllSamplesVisible) {\r\n                                            if (y > nMaxY)\r\n                                                nMaxY = y;\r\n                                            else if (y < nMinY)\r\n                                                nMinY = y;\r\n                                        }\r\n                                        else //\r\n                                            nMinY = nMaxY = y;\r\n                                        if (idx == num_frames_to_display - 1)\r\n                                            last_y = y;\r\n                                    }\r\n                                    // https://stackoverflow.com/questions/7054272/how-to-draw-smooth-curve-through-n-points-using-javascript-html5-canvas\r\n                                    if (render_style === RenderStyle.Step)\r\n                                        ctx.lineTo(t, y);\r\n                                    else {\r\n                                        ctx.quadraticCurveTo(t + dt / 4, y_old, t + dt / 2, (y_old + y) / 2);\r\n                                        ctx.quadraticCurveTo(t + 3 * dt / 4, y, t + dt, y);\r\n                                    }\r\n                                    y_old = y;\r\n                                    //\r\n                                }\r\n                                ctx.setTransform(1, 0, 0, 1, this.gBounds.x, this.gBounds.y);\r\n                                ctx.lineWidth = 1;\r\n                                ctx.stroke();\r\n                            }\r\n                            break;\r\n                        case RenderStyle.Segment:\r\n                            GDIPlus.GCH.SetTransformRect(ctx, this.gBounds, time_and_sample_values_rect);\r\n                            for (let idx = 1; idx < num_frames_to_display; ++idx) {\r\n                                t += this.sampleDuration;\r\n                                const next_sample_is_in_segment = chan_data.get(idx) !== 0;\r\n                                if (segment_start_t >= 0) { // in segment\r\n                                    if (!next_sample_is_in_segment) {\r\n                                        // segment end, fill it\r\n                                        ctx.fillRect(segment_start_t, time_and_sample_values_rect.y, t - segment_start_t, time_and_sample_values_rect.height);\r\n                                        segment_start_t = -1;\r\n                                    }\r\n                                }\r\n                                else { // not in segment\r\n                                    if (next_sample_is_in_segment) { // new segment start\r\n                                        segment_start_t = t;\r\n                                    }\r\n                                }\r\n                            }\r\n                            // close final segment if we're in one\r\n                            if (segment_start_t >= 0) {\r\n                                ctx.fillRect(segment_start_t, time_and_sample_values_rect.y, t - segment_start_t, time_and_sample_values_rect.height);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n        }\r\n        ctx.restore();\r\n        if (this.AutoYAxisAdjustBehaviour === AutoYAxisAdjustBehaviour.EnsureMostRecentSampleVisible) {\r\n            last_y /= this.SampleUnitMultiplier;\r\n            if (last_y > this.maxY) {\r\n                nMaxY = last_y;\r\n                nMinY = last_y - (this.maxY - this.minY);\r\n            }\r\n            else if (last_y < this.minY) {\r\n                nMinY = last_y;\r\n                nMaxY = last_y + (this.maxY - this.minY);\r\n            }\r\n        }\r\n        else {\r\n            nMaxY /= this.SampleUnitMultiplier;\r\n            nMinY /= this.SampleUnitMultiplier;\r\n        }\r\n        const YExtentChanged = this.maxY != nMaxY || this.minY != nMinY;\r\n        this.maxY = nMaxY;\r\n        this.minY = nMinY;\r\n        return YExtentChanged; // true means Y extent has changed\r\n    }\r\n    pixels2duration(gx) {\r\n        return this.dBounds.width * gx / this.gBounds.width;\r\n    }\r\n    samples_per_pixel() {\r\n        return this.dBounds.width / this.gBounds.width * this.Fs;\r\n    }\r\n    time2pixels(dx) {\r\n        return this.d2gX(dx);\r\n    }\r\n    d2gX(dx) {\r\n        return Math.round((this.gBounds.width * dx / this.dBounds.width) - (this.dBounds.x * this.gBounds.width / this.dBounds.width));\r\n    }\r\n    g2dY(gy) {\r\n        return this.dBounds.height * gy / this.gBounds.height;\r\n    }\r\n    d2gY(dy) {\r\n        return this.gBounds.height - (this.gBounds.height * (dy - this.dBounds.y) / this.dBounds.height);\r\n    }\r\n    d2gHeight(dHeight) {\r\n        return Math.round(dHeight / this.dBounds.height * this.gBounds.height);\r\n    }\r\n    d2gWidth(dWidth) {\r\n        return Math.round(dWidth / this.dBounds.width * this.gBounds.width);\r\n    }\r\n    duration2pixels(dWidth) {\r\n        return this.d2gWidth(dWidth);\r\n    }\r\n    yAxis_Recalc() {\r\n        // noinspection JSSuspiciousNameCombination\r\n        const pow10 = Math.floor(Math.log(Math.LN10));\r\n        this.gridMajorY = Math.pow(10, pow10 - 1);\r\n        while (this.d2gHeight(this.gridMajorY) > (this.gBounds.height)) {\r\n            this.gridMajorY /= 10;\r\n        }\r\n        while (this.d2gHeight(this.gridMajorY) < (this.MIN_GRID_Y * 10)) {\r\n            this.gridMajorY *= 10;\r\n        }\r\n        this.gridMinorY = this.gridMajorY / 10;\r\n        if (this.d2gHeight(this.gridMinorY) < this.MIN_GRID_Y)\r\n            this.gridMinorY *= 2;\r\n    }\r\n    timeAxis_Recalc() {\r\n        const pow10 = Math.floor(Math.log(this.dBounds.width) / Math.LN10);\r\n        this.gridMajorX = Math.pow(10, pow10 - 1);\r\n        if (this.gBounds.width > 0) {\r\n            while (this.duration2pixels(this.gridMajorX) < this.MIN_GRID_X * 10) {\r\n                this.gridMajorX *= 10;\r\n            }\r\n        }\r\n        this.gridMinorX = this.gridMajorX / 10;\r\n        if (this.gBounds.width > 0) {\r\n            if (this.duration2pixels(this.gridMinorX) < this.MIN_GRID_X) {\r\n                this.gridMinorX *= 2;\r\n            }\r\n        }\r\n    }\r\n    RenderGraphGrid(ctx) {\r\n        const gRect = this.gBounds;\r\n        const dRect = this.dBounds;\r\n        ctx.save();\r\n        GDIPlus.GCH.setClip(ctx, gRect);\r\n        GDIPlus.GCH.SetOrigin(ctx, gRect.x, gRect.y);\r\n        let firstGridX, firstGridY;\r\n        let x, y;\r\n        firstGridY = this.gridMinorY * Math.floor(dRect.y / this.gridMinorY);\r\n        for (y = firstGridY; y < dRect.y + dRect.height; y += this.gridMinorY) {\r\n            const gy = this.d2gY(y);\r\n            GDIPlus.GCH.DrawLine(ctx, this.penGridMinor, 0, gy, gRect.width, gy);\r\n        }\r\n        // find first grid major point\r\n        firstGridY = this.gridMajorY * Math.floor(dRect.y / this.gridMajorY);\r\n        for (y = firstGridY; y < dRect.y + dRect.height; y += this.gridMajorY) {\r\n            const gy = this.d2gY(y);\r\n            GDIPlus.GCH.DrawLine(ctx, this.penGridMajor, 0, gy, gRect.width, gy);\r\n        }\r\n        firstGridX = this.gridMinorX * Math.floor(dRect.x / this.gridMinorX);\r\n        for (x = firstGridX; x < dRect.x + dRect.width; x += this.gridMinorX) {\r\n            const gx = this.d2gX(x);\r\n            GDIPlus.GCH.DrawLine(ctx, this.penGridMinor, gx, 0, gx, gRect.height);\r\n        }\r\n        // find first grid major point\r\n        firstGridX = this.gridMajorX * Math.floor(dRect.x / this.gridMajorX);\r\n        for (x = firstGridX; x < dRect.x + dRect.width; x += this.gridMajorX) {\r\n            const gx = this.d2gX(x);\r\n            GDIPlus.GCH.DrawLine(ctx, this.penGridMajor, gx, 0, gx, gRect.height);\r\n        }\r\n        ctx.restore();\r\n    }\r\n    // Moved to App.ts\r\n    // RenderConnectionLed(ctx: CanvasRenderingContext2D): void {\r\n    //     let led_color = '#444444' // not connected\r\n    //     const conn = this.conn_;\r\n    //     if (conn.Sock) {\r\n    //         led_color = conn.Sock.readyState === 3 ? '#444444' : // closed\r\n    //             conn.Sock.readyState === 2 ? '#104700' : // closing\r\n    //                 conn.Sock.readyState === 1 ? '#03ac00' : // open\r\n    //                     conn.Sock.readyState === 0 ? '#c3c300' : // connecting\r\n    //                         '#be0000'; // error/unknown\r\n    //     }\r\n    //         const led_radius =  8;\r\n    //     Scope.drawLed(ctx, this.gBounds.right - led_radius - 2, this.gBounds.bottom - led_radius -2, led_radius, led_color);\r\n    // }\r\n    // return true if y scale needed to be adjusted\r\n    // Adjust the YAxis to honour the scope_audio's AutoYAxisAdjustBehaviour\r\n    AdjustYAxis() {\r\n        const max = this.maxY;\r\n        const min = this.minY;\r\n        if ((max != -Number.MAX_VALUE) && (min <= max)) {\r\n            const oh = this.dBounds.height;\r\n            const oy = this.dBounds.y;\r\n            // update Yscale to fit maxY, minY\r\n            const range = max - min;\r\n            // Fit all data if data range is < 1/4 or > data window height\r\n            if (this.AutoYAxisAdjustBehaviour === AutoYAxisAdjustBehaviour.EnsureAllSamplesVisible) {\r\n                if (range > 0) {\r\n                    // fit data window height to data range\r\n                    // range less than 1/4 of window, too small\r\n                    if (range < oh / 4) {\r\n                        this.DataHeight = this.DataHeight; // * 99 / 100; // range / 4;\r\n                        //                       this.dBounds.y = this.dBounds.y - this.DataHeight / (99 / 100) / 2;\r\n                    }\r\n                    // range more than window, too big\r\n                    else if (range > oh) {\r\n                        this.DataHeight = range + range / 4;\r\n                        this.dBounds.y = min - range / 8;\r\n                    }\r\n                }\r\n            }\r\n            // range is ok, but data offset might be too low or high\r\n            if ((min < this.dBounds.y) || (max > this.dBounds.y + this.dBounds.height))\r\n                this.dBounds.y = min - (this.dBounds.height - range) / 2;\r\n            return ((oh != this.dBounds.height) || (oy != this.dBounds.y));\r\n        }\r\n        return false;\r\n    }\r\n    GetArea(X, Y) {\r\n        if (this.gBounds.Contains(X, Y))\r\n            return Area.Graph;\r\n        if (this.timeAxisBounds.Contains(X, Y))\r\n            return Area.TimeAxis;\r\n        if (this.yAxisBounds.Contains(X, Y))\r\n            return Area.YAxis;\r\n        return Area.BottomLeft;\r\n    }\r\n    graph_Zoom(x, y) {\r\n        const SLOP = 1; // cursor can move 1 pixel between button down and button up before considered to be dragging\r\n        const GRAPH_ZOOM_RATIO = 20.0;\r\n        this.AutoYAxisAdjustBehaviour = AutoYAxisAdjustBehaviour.None; // Stop automatically adjusting Y axis\r\n        const delta_x = this.dragPoint.x - x;\r\n        const delta_y = this.dragPoint.y - y;\r\n        if (!(delta_x <= SLOP && delta_x >= -SLOP && delta_y <= SLOP && delta_y >= -SLOP)) {\r\n            this.dragPoint.x = x;\r\n            this.dragPoint.y = y;\r\n            const mag_dx = delta_x < 0 ? -delta_x : delta_x;\r\n            const mag_dy = delta_y < 0 ? -delta_y : delta_y;\r\n            const sgn_dx = delta_x < 0 ? 1 : -1;\r\n            const sgn_dy = delta_y < 0 ? -1 : 1;\r\n            if (mag_dx > mag_dy) {\r\n                const fact = (GRAPH_ZOOM_RATIO - sgn_dx) / GRAPH_ZOOM_RATIO;\r\n                this.onScreenCanvas.style.cursor = 'col-resize';\r\n                this.DataWidth *= fact;\r\n                this.DataX += this.DataWidth * (1 / fact - 1) * this.dragStartPoint.x / this.gBounds.width;\r\n            }\r\n            else {\r\n                const fact = (GRAPH_ZOOM_RATIO - sgn_dy) / GRAPH_ZOOM_RATIO;\r\n                this.onScreenCanvas.style.cursor = 'row-resize';\r\n                this.DataHeight *= fact;\r\n                this.DataY += this.DataHeight * (1 / fact - 1) * 0.5 /* (1 - dragStartPoint.Y / gBounds.Height) */;\r\n            }\r\n        }\r\n    }\r\n    yAxis_Scroll(y) {\r\n        const delta_y = this.dragPoint.y - y;\r\n        this.DataY -= this.g2dY(delta_y);\r\n        this.dragPoint.y = y;\r\n        if (delta_y > 0)\r\n            this.onScreenCanvas.style.cursor = 'n-resize';\r\n        else if (delta_y < 0)\r\n            this.onScreenCanvas.style.cursor = 's-resize';\r\n    }\r\n    timeAxis_Scroll(x) {\r\n        const delta_x = x - this.dragPoint.x;\r\n        this.DataX -= this.pixels2duration(delta_x);\r\n        this.dragPoint.x = x;\r\n        if (this.DataX === 0)\r\n            this.onScreenCanvas.style.cursor = 'not-allowed';\r\n        else if (delta_x > 0)\r\n            this.onScreenCanvas.style.cursor = 'e-resize';\r\n        else if (delta_x < 0)\r\n            this.onScreenCanvas.style.cursor = 'w-resize';\r\n    }\r\n}\r\nvar Area;\r\n(function (Area) {\r\n    Area[Area[\"None\"] = 0] = \"None\";\r\n    Area[Area[\"Graph\"] = 1] = \"Graph\";\r\n    Area[Area[\"TimeAxis\"] = 2] = \"TimeAxis\";\r\n    Area[Area[\"YAxis\"] = 3] = \"YAxis\";\r\n    Area[Area[\"BottomLeft\"] = 4] = \"BottomLeft\";\r\n})(Area || (Area = {}));\r\n//# sourceMappingURL=Scope.js.map","import { Scope } from \"../Scope\";\r\nexport class ScopeElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        const shadow = this.attachShadow({ mode: 'open' }); // sets and returns 'this.shadowRoot'\r\n        const el = document.createElement('div');\r\n        const style = document.createElement('style');\r\n        // noinspection CssInvalidPropertyValue\r\n        el.className = 'private-style1';\r\n        // noinspection CssInvalidFunction,CssInvalidPropertyValue\r\n        style.textContent = `\r\n        .private-style1 {\r\n        height: 100%;\r\n        width: 100%;\r\n        /*padding: 0;*/\r\n        /*margin :0;*/\r\n        /*    top: 0;*/\r\n        /*    bottom : 0;*/\r\n        /*    left: 0;*/\r\n        /*    right: 0;*/\r\n            \r\n        }\r\n`;\r\n        this.scope_ = new Scope(el);\r\n        shadow.append(style, el);\r\n        window.addEventListener('resize', (ev => { ev.preventDefault(); this.scope_.Resize(); }));\r\n        this.scope_.Resize();\r\n    }\r\n    get Scope() { return this.scope_; }\r\n}\r\n//# sourceMappingURL=ScopeElement.js.map","/*\r\n DataConnection Class\r\n */\r\nimport NDArray from 'ndarray';\r\nimport EventEmitter from \"eventemitter3\";\r\nclass DataBuffer {\r\n    constructor(sz, num_channels, bits_per_sample, array_constructor = undefined) {\r\n        this.idx_ = 0; // The offset into buffer of where to put new data\r\n        this.nBuffersRead_ = 0; // The number of times we've filled the buffer\r\n        this.sampleCount_ = 0; // total number of data items read (grows past SZ)\r\n        this.NUM_CHANNELS = num_channels;\r\n        this.SZ = sz;\r\n        if (array_constructor !== undefined) {\r\n            this.buf_ = new array_constructor(2 * sz * num_channels);\r\n        }\r\n        else {\r\n            switch (bits_per_sample) {\r\n                case 8:\r\n                    this.buf_ = new Uint8Array(2 * sz * num_channels);\r\n                    break;\r\n                case 16:\r\n                    this.buf_ = new Int16Array(2 * sz * num_channels);\r\n                    break;\r\n                case 32:\r\n                    this.buf_ = new Float32Array(2 * sz * num_channels);\r\n                    break;\r\n                default:\r\n                case 64:\r\n                    this.buf_ = new Float64Array(2 * sz * num_channels);\r\n                    break;\r\n            }\r\n        }\r\n        this.reset();\r\n    }\r\n    get RowCount() {\r\n        return this.sampleCount_ / this.NUM_CHANNELS;\r\n    }\r\n    get BuffersRead() {\r\n        return this.nBuffersRead_;\r\n    }\r\n    put(new_data) {\r\n        // assert new_data.length % num_channels === 0\r\n        const N = this.buf_.length / 2;\r\n        const n = new_data.length;\r\n        // assert (n <= N);\r\n        let idx = this.idx_;\r\n        this.buf_.set(new_data, idx);\r\n        // if data has gone past end of 1st half of underlying buffer,\r\n        // copy the overflowed data to start of the buffer (i.e. make it a circular buffer)\r\n        const extra = (idx + n) - N;\r\n        if (extra > 0) {\r\n            this.buf_.set(new_data.subarray(n - extra), 0);\r\n        }\r\n        if ((idx += n) >= N) {\r\n            ++this.nBuffersRead_;\r\n            idx -= N;\r\n        }\r\n        this.idx_ = idx;\r\n        this.sampleCount_ += n;\r\n    }\r\n    // t is sample_number, not time - return actual index into buffer at sample number t\r\n    index(t) { return (t % this.SZ) * this.NUM_CHANNELS; }\r\n    raw_view(t, n) {\r\n        t %= this.SZ;\r\n        t *= this.NUM_CHANNELS;\r\n        n *= this.NUM_CHANNELS;\r\n        return this.buf_.subarray(t, t + n);\r\n    }\r\n    // returns view of sample buffer starting at time t\r\n    view(t, n) {\r\n        const N = this.SZ;\r\n        const nd_array = NDArray(this.buf_, [2 * N, this.NUM_CHANNELS]);\r\n        //       const idx = this.idx_ / this.NUM_CHANNELS;\r\n        t %= N;\r\n        //       t += idx;\r\n        //        t -= this.StartCount;\r\n        //        if (t+n < 0 || t >= this.SZ)\r\n        //            return null;\r\n        return nd_array.lo(t, 0);\r\n    }\r\n    reset() { this.nBuffersRead_ = this.idx_ = this.sampleCount_ = 0; }\r\n}\r\nexport class DataConnection extends EventEmitter {\r\n    constructor(Fs, NumChannels, bits_per_sample = 16, array_constructor = Int16Array) {\r\n        super();\r\n        this.Fs = Fs;\r\n        this.NumChannels = NumChannels;\r\n        this.bits_per_sample = bits_per_sample;\r\n        this.MeasuredFs = 0;\r\n        this.perf_start_frames_read = 0;\r\n        this.perf_start_time = 0;\r\n        this.buf_ = new DataBuffer(DataConnection.BUFFER_SIZE_SECONDS * this.Fs, this.NumChannels, bits_per_sample, array_constructor);\r\n    }\r\n    AddData(data) {\r\n        this.buf_.put(data);\r\n        this.emit('data');\r\n    }\r\n    get HasData() { return this.buf_.RowCount > 0; }\r\n    get CurrentTimeSecs() { return this.buf_.RowCount / this.Fs; }\r\n    get StartTimeSecs() { return this.buf_.BuffersRead * DataConnection.BUFFER_SIZE_SECONDS; }\r\n    get NumFramesRead() { return this.buf_.RowCount; }\r\n    Reset() {\r\n        this.buf_.reset();\r\n        this.emit('data');\r\n        this.startPerformanceMeasurement();\r\n    }\r\n    Data(start_time_seconds, duration_seconds) {\r\n        return this.buf_.view(start_time_seconds * this.Fs, duration_seconds * this.Fs);\r\n    }\r\n    DataRaw(start_time_seconds, duration_seconds) {\r\n        return this.buf_.raw_view(start_time_seconds * this.Fs, duration_seconds * this.Fs);\r\n    }\r\n    FrameOffsetToIndex(frame_offset) { return this.buf_.index(frame_offset); }\r\n    TimeToIndex(t) { return this.buf_.index(Math.round(t * this.Fs)); }\r\n    startPerformanceMeasurement() {\r\n        this.perf_start_time = window.performance.now();\r\n        this.perf_start_frames_read = this.NumFramesRead;\r\n    }\r\n    measurePerformance() {\r\n        const now = window.performance.now();\r\n        const frames_we_should_have_read = (now - this.perf_start_time) / 1000 * this.Fs;\r\n        const frames_read = this.NumFramesRead - this.perf_start_frames_read;\r\n        const speed = (frames_read / frames_we_should_have_read) || 1;\r\n        // const  fs = speed * this.Fs;\r\n        const fs = frames_read / ((now - this.perf_start_time) / 1000);\r\n        this.MeasuredFs = fs;\r\n    }\r\n}\r\nDataConnection.BUFFER_SIZE_SECONDS = 3600;\r\n//# sourceMappingURL=DataConnection.js.map","import { DataConnection } from \"./DataConnection\";\r\nexport class WebSocketDataConnection extends DataConnection {\r\n    constructor(sample_rate, num_channels, bits_per_sample = 16, array_constructor = Int16Array) {\r\n        super(sample_rate, num_channels, bits_per_sample, array_constructor);\r\n        this.bits_per_sample = bits_per_sample;\r\n        this.statusListeners = [];\r\n        this.informListeners = (conn) => {\r\n            this.statusListeners.forEach((el) => { el.onConnectionStatus(this); });\r\n            setTimeout(() => { this.informListeners(this); }, 250);\r\n        };\r\n        // begin the periodic status updates\r\n        this.informListeners(this);\r\n    }\r\n    AddStatusListener(el) { this.statusListeners.push(el); }\r\n    RemoveStatusListener(el) {\r\n        const idx = this.statusListeners.indexOf(el);\r\n        if (idx >= 0)\r\n            this.statusListeners.splice(idx, 1);\r\n    }\r\n    set Url(url) { this.url_ = url; this.init(this.bits_per_sample); }\r\n    get Url() { return this.url_; }\r\n    get Sock() { return this.sock_; }\r\n    init(bits_per_sample) {\r\n        if (this.sock_)\r\n            delete this.sock_;\r\n        const ws = new WebSocket(this.url_);\r\n        ws.binaryType = 'arraybuffer';\r\n        ws.onopen = (ev) => {\r\n            console.log(ev);\r\n            this.startPerformanceMeasurement();\r\n        };\r\n        ws.onclose = (ev) => {\r\n            console.log(ev);\r\n            // try again later\r\n            setTimeout(() => { this.init(bits_per_sample); }, 2000);\r\n        };\r\n        switch (bits_per_sample) {\r\n            case 16:\r\n                ws.onmessage = (ev) => {\r\n                    //      console.log(ev);\r\n                    this.AddData(new Int16Array(ev.data).subarray(1, 2)); // TEST TEST\r\n                    this.measurePerformance();\r\n                };\r\n                break;\r\n            case 32:\r\n                ws.onmessage = (ev) => {\r\n                    //      console.log(ev);\r\n                    this.AddData(new Float32Array(ev.data));\r\n                    this.measurePerformance();\r\n                };\r\n                break;\r\n            case 64:\r\n                ws.onmessage = (ev) => {\r\n                    //      console.log(ev);\r\n                    this.AddData(new Float64Array(ev.data));\r\n                    this.measurePerformance();\r\n                };\r\n                break;\r\n            default:\r\n                throw 'Invalid bits per sample for websocket connection';\r\n        }\r\n        ws.onerror = (ev) => {\r\n            console.log(ev);\r\n        };\r\n        this.sock_ = ws;\r\n    }\r\n}\r\n//# sourceMappingURL=WebSocketDataConnection.js.map","import * as GDIPlus from \"../GDIPlus\";\r\nimport { WebSocketDataConnection } from \"../WebSocketDataConnection\";\r\nexport class WebSocketDataConnectionElement extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        const shadow = this.attachShadow({ mode: 'open' }); // sets and returns 'this.shadowRoot'\r\n        const el = document.createElement('canvas');\r\n        const num_channels = this.hasAttribute('channels') ? Number.parseInt(this.getAttribute('channels')) : 1;\r\n        const bits_per_sample = this.hasAttribute('bits') ? Number.parseInt(this.getAttribute('bits')) : 16;\r\n        const sample_rate = this.hasAttribute('sample-rate') ? Number.parseInt(this.getAttribute('sample-rate')) : 1;\r\n        this.conn_ = new WebSocketDataConnection(sample_rate, num_channels, bits_per_sample);\r\n        if (this.hasAttribute('url')) {\r\n            this.conn_.Url = this.getAttribute('url');\r\n        }\r\n        this.conn_.AddStatusListener(this);\r\n        this.onConnectionStatus = (conn) => {\r\n            el.setAttribute('width', window.getComputedStyle(el, null).getPropertyValue(\"width\"));\r\n            el.setAttribute('height', window.getComputedStyle(el, null).getPropertyValue(\"height\"));\r\n            el.height = 18;\r\n            let msg = '';\r\n            let led_color = '#444444'; // not connected\r\n            let socket_state = '';\r\n            if (conn.Sock) {\r\n                switch (conn.Sock.readyState) {\r\n                    case 3:\r\n                        socket_state = 'closed    ';\r\n                        led_color = '#444444';\r\n                        break;\r\n                    case 2:\r\n                        socket_state = 'closing   ';\r\n                        led_color = '#104700';\r\n                        break;\r\n                    case 1:\r\n                        socket_state = 'open      ';\r\n                        led_color = '#03ac00';\r\n                        break;\r\n                    case 0:\r\n                        socket_state = 'connecting';\r\n                        led_color = '#d4d400';\r\n                        break;\r\n                    default:\r\n                        socket_state = 'unknown   ';\r\n                        led_color = '#be0000';\r\n                        break;\r\n                }\r\n                msg = msg + 'Connection: ' + socket_state + ' ';\r\n                if (conn.Sock.readyState === 1) {\r\n                    const rate = conn.MeasuredFs.toFixed(0);\r\n                    msg = msg + 'Fs=' + rate + ' ';\r\n                }\r\n            }\r\n            else {\r\n                msg = msg + 'Not connected, press [Connect] button.';\r\n            }\r\n            const ctx = el.getContext('2d');\r\n            //       ctx.fillStyle = 'red';\r\n            ctx.clearRect(0, 0, el.width, el.height);\r\n            ctx.font = '14px Arial';\r\n            //       msg = 'TEST';\r\n            ctx.fillStyle = '#000000';\r\n            ctx.textBaseline = 'middle';\r\n            ctx.textAlign = 'right';\r\n            const led_radius = 6;\r\n            ctx.fillText(msg, el.width - 2 * led_radius - 4, el.height / 2);\r\n            WebSocketDataConnectionElement.drawLed(ctx, el.width - led_radius - 1, el.height / 2, led_radius, led_color);\r\n        };\r\n        shadow.append(el);\r\n    }\r\n    static drawLed(ctx, center_x, center_y, radius, color) {\r\n        const top_y = center_y - radius;\r\n        const gradient_shine = ctx.createLinearGradient(0, top_y + radius / 5, 0, top_y + 4 * radius / 5);\r\n        gradient_shine.addColorStop(0, \"#ffffff\");\r\n        gradient_shine.addColorStop(1, color);\r\n        const gradient_bezel = ctx.createLinearGradient(0, top_y, 0, top_y + 2 * radius);\r\n        gradient_bezel.addColorStop(1, \"#ffffff\");\r\n        gradient_bezel.addColorStop(0, \"#222222\");\r\n        // bezel\r\n        ctx.lineWidth = radius / 4;\r\n        GDIPlus.GCH.DrawCircle(ctx, gradient_bezel, center_x, center_y, radius);\r\n        // bulb\r\n        GDIPlus.GCH.FillCircle(ctx, color, center_x, center_y, radius);\r\n        // shine\r\n        GDIPlus.GCH.FillEllipse(ctx, gradient_shine, center_x, center_y - radius / 2, radius * 3 / 5, radius * 2 / 5);\r\n    }\r\n    set Url(url) {\r\n        this.conn_.Url = url;\r\n        this.setAttribute('url', url);\r\n    }\r\n    get Url() {\r\n        return this.conn_.Url;\r\n    }\r\n    get Connection() { return this.conn_; }\r\n}\r\n//# sourceMappingURL=WebSocketDataConnectionElement.js.map","import {AddAlgorithms} from \"./ArrayPlus\";\r\nimport {CustomElement} from \"./custom-elements/CustomElement\";\r\nimport {ConsoleElement} from \"./custom-elements/ConsoleElement\";\r\nimport {ScopeElement} from \"./custom-elements/ScopeElement\";\r\nimport {WebSocketDataConnectionElement} from \"./custom-elements/WebSocketDataConnectionElement\";\r\nimport {AutoYAxisAdjustBehaviour, DownSampleAlgorithm, RenderStyle, Scope} from \"./Scope\";\r\nimport {get_server_status, open_hid_device} from \"./Api\";\r\n\r\n\r\nAddAlgorithms(Array.prototype);\r\n\r\n\r\ncustomElements.define('custom-element', CustomElement);\r\ncustomElements.define('console-element', ConsoleElement);\r\ncustomElements.define('scope-element', ScopeElement);\r\ncustomElements.define('websocket-element', WebSocketDataConnectionElement);\r\n\r\n// Disable MS Edge (and probably Chrome) context menus in OSX\r\ndocument.addEventListener('contextmenu', event => { event.preventDefault() })\r\n\r\ndocument.querySelectorAll('.page-switcher').forEach((button) => {\r\n    (<HTMLButtonElement>button).addEventListener('click', () => {switchToPage(button.getAttribute('page') || '') })\r\n})\r\n\r\nfunction switchToPage(page_id: string) {\r\n    const pages = document.querySelectorAll('.page');\r\n    for (const page of pages) {\r\n        if (page.id === page_id)\r\n            page.classList.remove('hidden');\r\n        else\r\n            page.classList.add('hidden');\r\n    }\r\n}\r\nswitchToPage('page-1');\r\n\r\nconst c = document.querySelector('console-element') as ConsoleElement;\r\nc.info('App Loaded.');\r\n\r\nconst scopeEl = document.querySelector('scope-element') as ScopeElement;\r\nconst websocketEl = document.querySelector('websocket-element') as WebSocketDataConnectionElement;\r\nconst scope: Scope = scopeEl.Scope;\r\n\r\nscope.ChannelInfo = [{\r\n    Name: 'EDA',\r\n    Color: '#ffffff',\r\n    Visible: true,\r\n    RenderStyle: RenderStyle.Step,\r\n    DownSampleAlgorithm:  DownSampleAlgorithm.MinMax  }\r\n    ];\r\nscope.Fs = websocketEl.Connection.Fs;\r\nscope.Connection = websocketEl.Connection;\r\nscope.SampleUnitMultiplier = 1;\r\nscope.AutoYAxisAdjustBehaviour = AutoYAxisAdjustBehaviour.EnsureAllSamplesVisible;\r\nscope.AutoYAxisAdjustChannel = 0;\r\n\r\n\r\nc.info('Connected scope to websocket.');\r\n\r\nconst connectButton = document.querySelector('#connect-button') as HTMLButtonElement;\r\nconst statusIndicator = document.querySelector('#status-indicator') as HTMLSpanElement;\r\n\r\nconnectButton.addEventListener('click', async () => {\r\n\r\n    const response = await open_hid_device(1240, 61281);\r\n    c.info(JSON.stringify(response, null, 1));\r\n\r\n});\r\n\r\nwindow.setInterval(() => {\r\n    (async () => {\r\n        const status = await get_server_status();\r\n        statusIndicator.innerText = status.status;\r\n    } )();\r\n\r\n}, 2000);","export function AddAlgorithms(obj = Array.prototype) {\r\n    if (!('length' in obj))\r\n        throw `Can't add algorithms to an object without 'length' property`;\r\n    if (typeof obj[Symbol.iterator] === 'undefined')\r\n        throw `Can't add algorithms to a non-iterable object `;\r\n    Object.defineProperty(obj, 'randomElement', {\r\n        value: function () {\r\n            return this.length ? this[Math.floor(Math.random() * this.length)] : undefined;\r\n        }\r\n    });\r\n    Object.defineProperty(obj, 'shuffle', {\r\n        value: function () {\r\n            // Knuth shuffle https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\r\n            for (let i = this.length; i > 0;) {\r\n                const j = Math.floor(Math.random() * i);\r\n                --i;\r\n                const tmp = this[i];\r\n                this[i] = this[j];\r\n                this[j] = tmp;\r\n            }\r\n            return this;\r\n        }\r\n    });\r\n    Object.defineProperty(obj, 'partition', {\r\n        value: function (filter) {\r\n            const partitions = {};\r\n            let index = 0;\r\n            for (const item of this) {\r\n                const k = filter(item, index++, this);\r\n                if (partitions[k] === undefined)\r\n                    partitions[k] = [];\r\n                partitions[k].push(item);\r\n            }\r\n            return partitions;\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=ArrayPlus.js.map","export async function open_hid_device(vid, pid) {\r\n    const api_response = await fetch(`/open/${vid}/${pid}`, {\r\n        method: 'get',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n    });\r\n    return await api_response.json();\r\n}\r\nexport async function get_server_status() {\r\n    const api_response = await fetch(`/status`, {\r\n        method: 'get',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n    });\r\n    return await api_response.json();\r\n}\r\n//# sourceMappingURL=Api.js.map"],"sourceRoot":""}